
string removeKdigits(string num, int k) {
        string res;
        int keep = num.size() - k;
        for (int i=0; i<num.size(); i++) {
            while (res.size()>0 && res.back()>num[i] && k>0) {
                res.pop_back();
                k--;
            }
            res.push_back(num[i]);
        }
        res.erase(keep, string::npos);
        
        // trim leading zeros
        int s = 0;
        while (s<(int)res.size()-1 && res[s]=='0')  s++;
        res.erase(0, s);
        
        return res=="" ? "0" : res;
    }
class Solution {
public:
    string removeKdigits(string num, int k) {
        while(k>0){
            int i=0;
            while(i<num.size()-1 && num[i]<=num[i+1]){
                i++;
            }
            num.erase(i,1);
            k--;
        }
        int i=0;
        while(i<num.size()-1 && num[i]=='0'){
            i++;        
        }
        num.erase(0,i);
        return num=="" ? "0":num;
    }
};
