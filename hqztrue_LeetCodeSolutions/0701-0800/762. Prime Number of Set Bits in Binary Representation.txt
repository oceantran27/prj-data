counting on trie. there are O(w/log w) primes to consider. fix a node i, it corresponds to a binary prefix, let f[i][j] denote the number of solutions in the subtree i if we can add an arbitrary suffix to i and in total use j set bits (j is a prime), which is a combination number. we need to consider O(w) such nodes, for each node we need to compute O(w/log w) combinations, for each combination number we can use O(1) to maintain when we move to the next layer of prefix. total time O(w^2/log w).

note. use fraction of polynomials p(x)/q(x) to compute sum of combination numbers? different primes correspond to different values of x. problem: when the combination number is 0? (e.g. C(1,3)=0)



