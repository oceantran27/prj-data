2025-02-06 16:48:26 DEBUG BaseController:356 - [JavaFX Application Thread] Build the environment
2025-02-06 16:48:26 DEBUG MenuBarController:1654 - [JavaFX Application Thread] Refresh menu bar
2025-02-06 16:48:26 DEBUG MenuBarController:1661 - [JavaFX Application Thread] is active multi selection = false
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:44 - [Thread-4] Start building dependency graph from chosen UUTs and SBFs
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\630. Maximum Binary Tree\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:106 - [Thread-4] Generate included directories for C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\000. Two Sum\solution.h
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\000. Two Sum\solution.h
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\141. Linked List Cycle II\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\138. Word Break\TEST.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\136. Single Number II\TEST.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\135. Single Number\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\133. Gas Station\TEST.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\132. Clone Graph\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\130. Palindrome Partitioning\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\125. Reorder List\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\124. Valid Palindrome\TEST.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\122. Sort List\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\119. Triangle\TEST.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\118. Pascal's Triangle II\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\117. Pascal's Triangle\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\112. Path Sum II\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\111. Path Sum\TEST.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\109. Balanced Binary Tree\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\100. Symmetric Tree\main.cc
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\099. Same Tree\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
2025-02-06 16:48:26 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\092. Restore IP Addresses\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\091. Reverse Linked List II\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\090. Insertion Sort List\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\089. Subsets II\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\088. Gray Code\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\087. Merge Sorted Array\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\086. Scramble String\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\085. Partition List\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\077. Subsets\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\076. Combinations\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\074. Sort Colors\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\071. Edit Distance\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\070. Simplify Path\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\069. Climbing Stairs\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\068. Sqrt(x)\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\066. Add Binary\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\065. Plus One\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\063. Minimum Path Sum\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\062. Unique Paths II\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\061. Unique Paths\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\060. Rotate List\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\059. Permutation Sequence\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\058. Spiral Matrix II\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\057. Length of Last Word\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\056. Insert Interval\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\055. Merge Intervals\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\054. Jump Game\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\053. Spiral Matrix\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\052. Maximum Subarray\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\051. N-Queens II\TEST.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\050. N-Queens\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\049. Pow(x, n)\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\048. Group Anagrams\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\047. Rotate Image\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\046. Permutations II\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\045. Permutations\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\044. Jump Game II\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\042. Multiply Strings\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\040. First Missing Positive\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\039. Combination Sum II\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\038. Combination Sum\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\037. Count and Say\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\036. Sudoku Solver\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\035. Valid Sudoku\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\034. Search Insert Position\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\033. Search for a Range\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\030. Next Permutation\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\027. Implement strStr()\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\026. Remove Element\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\021. Generate Parentheses\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\019. Valid Parentheses\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\017. 4Sum\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\015. 3Sum Closest\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\012. Roman to Integer\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\011. Integer to Roman\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\010. Container With Most Water\main.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\008. Palindrome Number\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\007. Linked List Cycle\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\006. Reverse Integer\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\001. Add Two Numbers\main.cpp
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:73 - [Thread-4] Find include headers in C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\000. Two Sum\TEST.cc
2025-02-06 16:48:27 INFO  DependencyGraphBuilder:112 - [Thread-4] Finish building dependency graph in 1325 ms
2025-02-06 16:48:27 DEBUG CompileProjectTask:162 - [Thread-4] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\000. Two Sum\TEST.cc
2025-02-06 16:48:27 DEBUG Compiler:117 - [Thread-4] Compilation of .\pezy_LeetCode\000. Two Sum\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\000. Two Sum\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"
2025-02-06 16:48:33 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\001. Add Two Numbers\main.cpp
2025-02-06 16:48:34 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\001. Add Two Numbers\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\001. Add Two Numbers\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"
2025-02-06 16:48:34 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
2025-02-06 16:48:34 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"
2025-02-06 16:48:34 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:34 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:34 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
2025-02-06 16:48:34 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"
2025-02-06 16:48:34 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:34 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:34 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
2025-02-06 16:48:34 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\005. ZigZag Conversion\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\005. ZigZag Conversion\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"
2025-02-06 16:48:35 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:35 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:35 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\006. Reverse Integer\main.cpp
2025-02-06 16:48:35 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\006. Reverse Integer\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\006. Reverse Integer\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"
2025-02-06 16:48:35 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\007. Linked List Cycle\main.cpp
2025-02-06 16:48:35 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\007. Linked List Cycle\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\007. Linked List Cycle\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"
2025-02-06 16:48:35 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\008. Palindrome Number\TEST.cc
2025-02-06 16:48:35 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\008. Palindrome Number\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\008. Palindrome Number\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"
2025-02-06 16:48:35 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:36 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:36 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
2025-02-06 16:48:36 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\009. Regular Expression Matching\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\009. Regular Expression Matching\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"
2025-02-06 16:48:36 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:36 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:36 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\010. Container With Most Water\main.cc
2025-02-06 16:48:36 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\010. Container With Most Water\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\010. Container With Most Water\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"
2025-02-06 16:48:36 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\011. Integer to Roman\TEST.cc
2025-02-06 16:48:36 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\011. Integer to Roman\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\011. Integer to Roman\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"
2025-02-06 16:48:36 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:37 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:37 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\012. Roman to Integer\TEST.cc
2025-02-06 16:48:37 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\012. Roman to Integer\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\012. Roman to Integer\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"
2025-02-06 16:48:37 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:37 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:37 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
2025-02-06 16:48:37 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\013. Longest Common Prefix\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\013. Longest Common Prefix\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"
2025-02-06 16:48:37 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:37 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:37 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\015. 3Sum Closest\TEST.cc
2025-02-06 16:48:37 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\015. 3Sum Closest\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\015. 3Sum Closest\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"
2025-02-06 16:48:37 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:37 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:37 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
2025-02-06 16:48:38 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"
2025-02-06 16:48:38 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\017. 4Sum\main.cpp
2025-02-06 16:48:39 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\017. 4Sum\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\017. 4Sum\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"
2025-02-06 16:48:39 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
2025-02-06 16:48:39 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"
2025-02-06 16:48:39 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\019. Valid Parentheses\TEST.cc
2025-02-06 16:48:39 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\019. Valid Parentheses\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\019. Valid Parentheses\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"
2025-02-06 16:48:39 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:39 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:39 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
2025-02-06 16:48:39 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"
2025-02-06 16:48:39 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:40 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:40 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\021. Generate Parentheses\main.cc
2025-02-06 16:48:40 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\021. Generate Parentheses\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\021. Generate Parentheses\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"
2025-02-06 16:48:40 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
2025-02-06 16:48:40 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"
2025-02-06 16:48:40 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
2025-02-06 16:48:41 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"
2025-02-06 16:48:41 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
2025-02-06 16:48:41 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"
2025-02-06 16:48:41 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
2025-02-06 16:48:41 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"
2025-02-06 16:48:41 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:41 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:41 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\026. Remove Element\TEST.cc
2025-02-06 16:48:42 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\026. Remove Element\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\026. Remove Element\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"
2025-02-06 16:48:42 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:42 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:42 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\027. Implement strStr()\TEST.cc
2025-02-06 16:48:42 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\027. Implement strStr()\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\027. Implement strStr()\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"
2025-02-06 16:48:42 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:42 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:42 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\030. Next Permutation\main.cpp
2025-02-06 16:48:43 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\030. Next Permutation\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\030. Next Permutation\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"
2025-02-06 16:48:43 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
2025-02-06 16:48:43 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"
2025-02-06 16:48:43 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:43 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:43 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\033. Search for a Range\TEST.cc
2025-02-06 16:48:43 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\033. Search for a Range\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\033. Search for a Range\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"
2025-02-06 16:48:43 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:43 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:43 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\034. Search Insert Position\main.cc
2025-02-06 16:48:44 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\034. Search Insert Position\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\034. Search Insert Position\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"
2025-02-06 16:48:44 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\035. Valid Sudoku\main.cc
2025-02-06 16:48:44 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\035. Valid Sudoku\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\035. Valid Sudoku\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"
2025-02-06 16:48:44 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:44 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:44 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\036. Sudoku Solver\main.cpp
2025-02-06 16:48:45 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\036. Sudoku Solver\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\036. Sudoku Solver\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"
2025-02-06 16:48:45 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\037. Count and Say\TEST.cc
2025-02-06 16:48:45 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\037. Count and Say\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\037. Count and Say\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"
2025-02-06 16:48:45 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:45 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:45 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\038. Combination Sum\main.cc
2025-02-06 16:48:45 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\038. Combination Sum\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\038. Combination Sum\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"
2025-02-06 16:48:45 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\039. Combination Sum II\main.cpp
2025-02-06 16:48:46 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\039. Combination Sum II\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\039. Combination Sum II\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"
2025-02-06 16:48:46 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\040. First Missing Positive\TEST.cc
2025-02-06 16:48:46 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\040. First Missing Positive\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\040. First Missing Positive\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"
2025-02-06 16:48:46 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:46 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:46 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
2025-02-06 16:48:46 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\041. Trapping Rain Water\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\041. Trapping Rain Water\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"
2025-02-06 16:48:46 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:47 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:47 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\042. Multiply Strings\TEST.cc
2025-02-06 16:48:47 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\042. Multiply Strings\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\042. Multiply Strings\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"
2025-02-06 16:48:47 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:47 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:47 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\044. Jump Game II\TEST.cc
2025-02-06 16:48:47 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\044. Jump Game II\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\044. Jump Game II\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"
2025-02-06 16:48:47 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:47 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:47 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\045. Permutations\main.cc
2025-02-06 16:48:48 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\045. Permutations\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\045. Permutations\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"
2025-02-06 16:48:48 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\046. Permutations II\main.cc
2025-02-06 16:48:48 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\046. Permutations II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\046. Permutations II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"
2025-02-06 16:48:48 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\047. Rotate Image\main.cc
2025-02-06 16:48:49 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\047. Rotate Image\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\047. Rotate Image\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"
2025-02-06 16:48:49 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\048. Group Anagrams\main.cpp
2025-02-06 16:48:49 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\048. Group Anagrams\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\048. Group Anagrams\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"
2025-02-06 16:48:49 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\049. Pow(x, n)\TEST.cc
2025-02-06 16:48:49 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\049. Pow(x, n)\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\049. Pow(x, n)\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"
2025-02-06 16:48:49 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:50 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:50 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\050. N-Queens\main.cc
2025-02-06 16:48:50 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\050. N-Queens\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\050. N-Queens\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"
2025-02-06 16:48:50 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\051. N-Queens II\TEST.cpp
2025-02-06 16:48:50 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\051. N-Queens II\TEST.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\051. N-Queens II\TEST.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"
2025-02-06 16:48:50 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:50 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:50 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\052. Maximum Subarray\main.cc
2025-02-06 16:48:51 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\052. Maximum Subarray\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\052. Maximum Subarray\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"
2025-02-06 16:48:51 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\053. Spiral Matrix\TEST.cc
2025-02-06 16:48:51 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\053. Spiral Matrix\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\053. Spiral Matrix\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"
2025-02-06 16:48:51 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:51 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:51 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\054. Jump Game\TEST.cc
2025-02-06 16:48:51 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\054. Jump Game\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\054. Jump Game\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"
2025-02-06 16:48:51 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:51 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:51 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\055. Merge Intervals\main.cpp
2025-02-06 16:48:52 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\055. Merge Intervals\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\055. Merge Intervals\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"
2025-02-06 16:48:52 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\056. Insert Interval\TEST.cc
2025-02-06 16:48:52 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\056. Insert Interval\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\056. Insert Interval\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"
2025-02-06 16:48:52 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:52 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:52 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\057. Length of Last Word\TEST.cc
2025-02-06 16:48:52 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\057. Length of Last Word\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\057. Length of Last Word\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"
2025-02-06 16:48:52 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:52 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:52 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\058. Spiral Matrix II\main.cc
2025-02-06 16:48:53 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\058. Spiral Matrix II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\058. Spiral Matrix II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"
2025-02-06 16:48:53 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\059. Permutation Sequence\TEST.cc
2025-02-06 16:48:53 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\059. Permutation Sequence\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\059. Permutation Sequence\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"
2025-02-06 16:48:53 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:53 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:53 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\060. Rotate List\main.cpp
2025-02-06 16:48:54 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\060. Rotate List\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\060. Rotate List\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"
2025-02-06 16:48:54 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\061. Unique Paths\main.cc
2025-02-06 16:48:54 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\061. Unique Paths\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\061. Unique Paths\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"
2025-02-06 16:48:54 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\062. Unique Paths II\main.cc
2025-02-06 16:48:54 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\062. Unique Paths II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\062. Unique Paths II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"
2025-02-06 16:48:54 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\063. Minimum Path Sum\main.cc
2025-02-06 16:48:55 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\063. Minimum Path Sum\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\063. Minimum Path Sum\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"
2025-02-06 16:48:55 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\065. Plus One\main.cc
2025-02-06 16:48:55 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\065. Plus One\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\065. Plus One\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"
2025-02-06 16:48:55 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\066. Add Binary\TEST.cc
2025-02-06 16:48:55 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\066. Add Binary\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\066. Add Binary\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"
2025-02-06 16:48:55 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:56 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:56 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\068. Sqrt(x)\TEST.cc
2025-02-06 16:48:56 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\068. Sqrt(x)\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\068. Sqrt(x)\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"
2025-02-06 16:48:56 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:56 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:56 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\069. Climbing Stairs\main.cpp
2025-02-06 16:48:56 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\069. Climbing Stairs\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\069. Climbing Stairs\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"
2025-02-06 16:48:56 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\070. Simplify Path\TEST.cc
2025-02-06 16:48:56 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\070. Simplify Path\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\070. Simplify Path\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"
2025-02-06 16:48:56 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:57 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:57 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\071. Edit Distance\TEST.cc
2025-02-06 16:48:57 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\071. Edit Distance\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\071. Edit Distance\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"
2025-02-06 16:48:57 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:57 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:57 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
2025-02-06 16:48:57 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\072. Set Matrix Zeroes\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\072. Set Matrix Zeroes\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"
2025-02-06 16:48:57 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
2025-02-06 16:48:57 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"
2025-02-06 16:48:57 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:58 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:58 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\074. Sort Colors\main.cc
2025-02-06 16:48:58 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\074. Sort Colors\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\074. Sort Colors\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"
2025-02-06 16:48:58 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\076. Combinations\main.cc
2025-02-06 16:48:59 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\076. Combinations\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\076. Combinations\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"
2025-02-06 16:48:59 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\077. Subsets\main.cc
2025-02-06 16:48:59 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\077. Subsets\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\077. Subsets\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"
2025-02-06 16:48:59 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:48:59 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:48:59 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
2025-02-06 16:48:59 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"
2025-02-06 16:48:59 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:00 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:00 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
2025-02-06 16:49:00 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"
2025-02-06 16:49:00 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:00 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:00 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
2025-02-06 16:49:00 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"
2025-02-06 16:49:00 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
2025-02-06 16:49:01 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"
2025-02-06 16:49:01 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
2025-02-06 16:49:01 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"
2025-02-06 16:49:01 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:01 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:01 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
2025-02-06 16:49:01 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\084. Maximal Rectangle\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\084. Maximal Rectangle\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"
2025-02-06 16:49:01 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:01 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:01 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\085. Partition List\main.cc
2025-02-06 16:49:02 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\085. Partition List\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\085. Partition List\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"
2025-02-06 16:49:02 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\086. Scramble String\TEST.cc
2025-02-06 16:49:02 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\086. Scramble String\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\086. Scramble String\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"
2025-02-06 16:49:02 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:02 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:02 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\087. Merge Sorted Array\main.cc
2025-02-06 16:49:02 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\087. Merge Sorted Array\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\087. Merge Sorted Array\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"
2025-02-06 16:49:02 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\088. Gray Code\main.cc
2025-02-06 16:49:03 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\088. Gray Code\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\088. Gray Code\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"
2025-02-06 16:49:03 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\089. Subsets II\main.cc
2025-02-06 16:49:04 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\089. Subsets II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\089. Subsets II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"
2025-02-06 16:49:04 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\090. Insertion Sort List\main.cpp
2025-02-06 16:49:04 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\090. Insertion Sort List\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\090. Insertion Sort List\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"
2025-02-06 16:49:04 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\091. Reverse Linked List II\main.cc
2025-02-06 16:49:04 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\091. Reverse Linked List II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\091. Reverse Linked List II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"
2025-02-06 16:49:04 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\092. Restore IP Addresses\main.cpp
2025-02-06 16:49:05 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\092. Restore IP Addresses\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\092. Restore IP Addresses\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"
2025-02-06 16:49:05 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
2025-02-06 16:49:05 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"
2025-02-06 16:49:05 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
2025-02-06 16:49:06 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"
2025-02-06 16:49:06 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
2025-02-06 16:49:06 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"
2025-02-06 16:49:06 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
2025-02-06 16:49:06 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\097. Validate Binary Search Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\097. Validate Binary Search Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"
2025-02-06 16:49:06 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
2025-02-06 16:49:07 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"
2025-02-06 16:49:07 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\099. Same Tree\main.cpp
2025-02-06 16:49:07 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\099. Same Tree\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\099. Same Tree\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"
2025-02-06 16:49:07 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\100. Symmetric Tree\main.cc
2025-02-06 16:49:08 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\100. Symmetric Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\100. Symmetric Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"
2025-02-06 16:49:08 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
2025-02-06 16:49:08 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"
2025-02-06 16:49:08 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
2025-02-06 16:49:09 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"
2025-02-06 16:49:09 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
2025-02-06 16:49:09 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"
2025-02-06 16:49:09 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
2025-02-06 16:49:10 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"
2025-02-06 16:49:10 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
2025-02-06 16:49:10 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"
2025-02-06 16:49:10 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
2025-02-06 16:49:11 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"
2025-02-06 16:49:11 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:11 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:11 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
2025-02-06 16:49:12 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"
2025-02-06 16:49:12 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
2025-02-06 16:49:12 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"
2025-02-06 16:49:12 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\109. Balanced Binary Tree\main.cc
2025-02-06 16:49:13 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\109. Balanced Binary Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\109. Balanced Binary Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"
2025-02-06 16:49:13 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
2025-02-06 16:49:13 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"
2025-02-06 16:49:13 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\111. Path Sum\TEST.cc
2025-02-06 16:49:13 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\111. Path Sum\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\111. Path Sum\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"
2025-02-06 16:49:13 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:13 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:13 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\112. Path Sum II\main.cc
2025-02-06 16:49:14 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\112. Path Sum II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\112. Path Sum II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"
2025-02-06 16:49:14 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
2025-02-06 16:49:14 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"
2025-02-06 16:49:14 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
2025-02-06 16:49:14 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\114. Distinct Subsequences\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\114. Distinct Subsequences\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"
2025-02-06 16:49:14 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:15 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:15 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
2025-02-06 16:49:15 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"
2025-02-06 16:49:15 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
2025-02-06 16:49:15 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"
2025-02-06 16:49:15 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\117. Pascal's Triangle\main.cc
2025-02-06 16:49:16 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\117. Pascal's Triangle\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\117. Pascal's Triangle\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"
2025-02-06 16:49:16 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\118. Pascal's Triangle II\main.cc
2025-02-06 16:49:16 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\118. Pascal's Triangle II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\118. Pascal's Triangle II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"
2025-02-06 16:49:16 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\119. Triangle\TEST.cc
2025-02-06 16:49:16 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\119. Triangle\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\119. Triangle\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"
2025-02-06 16:49:16 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:17 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:17 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
2025-02-06 16:49:17 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"
2025-02-06 16:49:17 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
2025-02-06 16:49:17 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"
2025-02-06 16:49:17 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
2025-02-06 16:49:18 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"
2025-02-06 16:49:18 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:18 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:18 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\122. Sort List\main.cpp
2025-02-06 16:49:18 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\122. Sort List\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\122. Sort List\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"
2025-02-06 16:49:18 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
2025-02-06 16:49:19 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"
2025-02-06 16:49:19 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\124. Valid Palindrome\TEST.cc
2025-02-06 16:49:19 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\124. Valid Palindrome\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\124. Valid Palindrome\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"
2025-02-06 16:49:19 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:19 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:19 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\125. Reorder List\main.cpp
2025-02-06 16:49:19 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\125. Reorder List\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\125. Reorder List\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"
2025-02-06 16:49:19 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
2025-02-06 16:49:19 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"
2025-02-06 16:49:19 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:20 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:20 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
2025-02-06 16:49:20 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"
2025-02-06 16:49:20 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\130. Palindrome Partitioning\main.cc
2025-02-06 16:49:21 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\130. Palindrome Partitioning\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\130. Palindrome Partitioning\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"
2025-02-06 16:49:21 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\132. Clone Graph\main.cpp
2025-02-06 16:49:21 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\132. Clone Graph\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\132. Clone Graph\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"
2025-02-06 16:49:21 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\133. Gas Station\TEST.cc
2025-02-06 16:49:21 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\133. Gas Station\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\133. Gas Station\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"
2025-02-06 16:49:21 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:22 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:22 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\135. Single Number\main.cpp
2025-02-06 16:49:22 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\135. Single Number\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\135. Single Number\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"
2025-02-06 16:49:22 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\136. Single Number II\TEST.cc
2025-02-06 16:49:22 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\136. Single Number II\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\136. Single Number II\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"
2025-02-06 16:49:22 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:23 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:23 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
2025-02-06 16:49:23 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"
2025-02-06 16:49:23 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\138. Word Break\TEST.cc
2025-02-06 16:49:23 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\138. Word Break\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\138. Word Break\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"
2025-02-06 16:49:23 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:23 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:23 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\141. Linked List Cycle II\main.cc
2025-02-06 16:49:24 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\141. Linked List Cycle II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\141. Linked List Cycle II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"
2025-02-06 16:49:24 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
2025-02-06 16:49:24 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"
2025-02-06 16:49:24 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
2025-02-06 16:49:25 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"
2025-02-06 16:49:25 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
2025-02-06 16:49:25 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"
2025-02-06 16:49:25 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:25 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:25 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
2025-02-06 16:49:25 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"
2025-02-06 16:49:25 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:26 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:26 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
2025-02-06 16:49:26 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\619. Maximum Average Subarray I\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\619. Maximum Average Subarray I\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"
2025-02-06 16:49:26 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:26 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:26 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\630. Maximum Binary Tree\main.cc
2025-02-06 16:49:27 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\630. Maximum Binary Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\630. Maximum Binary Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"
2025-02-06 16:49:27 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:27 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:49:27 DEBUG SrcResolverController:225 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:49:27 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:34 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\001. Add Two Numbers\main.cpp
2025-02-06 16:55:34 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\001. Add Two Numbers\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\001. Add Two Numbers\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"
2025-02-06 16:55:34 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
2025-02-06 16:55:34 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"
2025-02-06 16:55:34 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:34 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:34 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
2025-02-06 16:55:34 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"
2025-02-06 16:55:34 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:35 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:35 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
2025-02-06 16:55:35 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\005. ZigZag Conversion\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\005. ZigZag Conversion\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"
2025-02-06 16:55:35 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:35 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:35 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\006. Reverse Integer\main.cpp
2025-02-06 16:55:36 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\006. Reverse Integer\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\006. Reverse Integer\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"
2025-02-06 16:55:36 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\007. Linked List Cycle\main.cpp
2025-02-06 16:55:36 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\007. Linked List Cycle\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\007. Linked List Cycle\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"
2025-02-06 16:55:36 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\008. Palindrome Number\TEST.cc
2025-02-06 16:55:36 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\008. Palindrome Number\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\008. Palindrome Number\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"
2025-02-06 16:55:36 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:36 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:36 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
2025-02-06 16:55:36 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\009. Regular Expression Matching\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\009. Regular Expression Matching\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"
2025-02-06 16:55:36 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:37 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:37 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\010. Container With Most Water\main.cc
2025-02-06 16:55:37 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\010. Container With Most Water\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\010. Container With Most Water\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"
2025-02-06 16:55:37 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\011. Integer to Roman\TEST.cc
2025-02-06 16:55:37 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\011. Integer to Roman\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\011. Integer to Roman\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"
2025-02-06 16:55:37 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:38 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:38 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\012. Roman to Integer\TEST.cc
2025-02-06 16:55:38 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\012. Roman to Integer\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\012. Roman to Integer\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"
2025-02-06 16:55:38 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:38 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:38 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
2025-02-06 16:55:38 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\013. Longest Common Prefix\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\013. Longest Common Prefix\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"
2025-02-06 16:55:38 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:38 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:38 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\015. 3Sum Closest\TEST.cc
2025-02-06 16:55:39 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\015. 3Sum Closest\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\015. 3Sum Closest\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"
2025-02-06 16:55:39 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:39 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:39 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
2025-02-06 16:55:39 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"
2025-02-06 16:55:39 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\017. 4Sum\main.cpp
2025-02-06 16:55:40 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\017. 4Sum\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\017. 4Sum\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"
2025-02-06 16:55:40 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
2025-02-06 16:55:41 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"
2025-02-06 16:55:41 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\019. Valid Parentheses\TEST.cc
2025-02-06 16:55:41 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\019. Valid Parentheses\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\019. Valid Parentheses\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"
2025-02-06 16:55:41 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:41 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:41 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
2025-02-06 16:55:41 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"
2025-02-06 16:55:41 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:41 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:41 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\021. Generate Parentheses\main.cc
2025-02-06 16:55:42 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\021. Generate Parentheses\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\021. Generate Parentheses\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"
2025-02-06 16:55:42 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
2025-02-06 16:55:42 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"
2025-02-06 16:55:42 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
2025-02-06 16:55:43 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"
2025-02-06 16:55:43 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
2025-02-06 16:55:43 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"
2025-02-06 16:55:43 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
2025-02-06 16:55:43 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"
2025-02-06 16:55:43 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:43 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:43 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\026. Remove Element\TEST.cc
2025-02-06 16:55:43 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\026. Remove Element\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\026. Remove Element\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"
2025-02-06 16:55:43 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:44 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:44 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\027. Implement strStr()\TEST.cc
2025-02-06 16:55:44 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\027. Implement strStr()\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\027. Implement strStr()\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"
2025-02-06 16:55:44 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:44 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:44 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\030. Next Permutation\main.cpp
2025-02-06 16:55:45 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\030. Next Permutation\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\030. Next Permutation\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"
2025-02-06 16:55:45 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
2025-02-06 16:55:45 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"
2025-02-06 16:55:45 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:45 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:45 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\033. Search for a Range\TEST.cc
2025-02-06 16:55:45 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\033. Search for a Range\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\033. Search for a Range\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"
2025-02-06 16:55:45 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:45 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:46 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\034. Search Insert Position\main.cc
2025-02-06 16:55:46 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\034. Search Insert Position\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\034. Search Insert Position\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"
2025-02-06 16:55:46 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\035. Valid Sudoku\main.cc
2025-02-06 16:55:46 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\035. Valid Sudoku\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\035. Valid Sudoku\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"
2025-02-06 16:55:46 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:47 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:47 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\036. Sudoku Solver\main.cpp
2025-02-06 16:55:47 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\036. Sudoku Solver\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\036. Sudoku Solver\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"
2025-02-06 16:55:47 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\037. Count and Say\TEST.cc
2025-02-06 16:55:47 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\037. Count and Say\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\037. Count and Say\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"
2025-02-06 16:55:47 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:48 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:48 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\038. Combination Sum\main.cc
2025-02-06 16:55:48 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\038. Combination Sum\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\038. Combination Sum\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"
2025-02-06 16:55:48 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\039. Combination Sum II\main.cpp
2025-02-06 16:55:49 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\039. Combination Sum II\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\039. Combination Sum II\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"
2025-02-06 16:55:49 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\040. First Missing Positive\TEST.cc
2025-02-06 16:55:49 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\040. First Missing Positive\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\040. First Missing Positive\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"
2025-02-06 16:55:49 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:49 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:49 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
2025-02-06 16:55:49 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\041. Trapping Rain Water\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\041. Trapping Rain Water\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"
2025-02-06 16:55:49 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:49 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:50 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\042. Multiply Strings\TEST.cc
2025-02-06 16:55:50 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\042. Multiply Strings\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\042. Multiply Strings\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"
2025-02-06 16:55:50 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:50 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:50 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\044. Jump Game II\TEST.cc
2025-02-06 16:55:50 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\044. Jump Game II\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\044. Jump Game II\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"
2025-02-06 16:55:50 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:50 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:50 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\045. Permutations\main.cc
2025-02-06 16:55:51 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\045. Permutations\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\045. Permutations\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"
2025-02-06 16:55:51 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\046. Permutations II\main.cc
2025-02-06 16:55:51 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\046. Permutations II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\046. Permutations II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"
2025-02-06 16:55:51 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\047. Rotate Image\main.cc
2025-02-06 16:55:52 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\047. Rotate Image\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\047. Rotate Image\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"
2025-02-06 16:55:52 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\048. Group Anagrams\main.cpp
2025-02-06 16:55:52 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\048. Group Anagrams\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\048. Group Anagrams\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"
2025-02-06 16:55:52 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\049. Pow(x, n)\TEST.cc
2025-02-06 16:55:52 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\049. Pow(x, n)\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\049. Pow(x, n)\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"
2025-02-06 16:55:52 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:53 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:53 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\050. N-Queens\main.cc
2025-02-06 16:55:53 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\050. N-Queens\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\050. N-Queens\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"
2025-02-06 16:55:53 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\051. N-Queens II\TEST.cpp
2025-02-06 16:55:53 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\051. N-Queens II\TEST.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\051. N-Queens II\TEST.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"
2025-02-06 16:55:53 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:54 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:54 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\052. Maximum Subarray\main.cc
2025-02-06 16:55:54 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\052. Maximum Subarray\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\052. Maximum Subarray\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"
2025-02-06 16:55:54 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\053. Spiral Matrix\TEST.cc
2025-02-06 16:55:54 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\053. Spiral Matrix\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\053. Spiral Matrix\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"
2025-02-06 16:55:54 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:55 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:55 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\054. Jump Game\TEST.cc
2025-02-06 16:55:55 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\054. Jump Game\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\054. Jump Game\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"
2025-02-06 16:55:55 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:55 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:55 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\055. Merge Intervals\main.cpp
2025-02-06 16:55:56 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\055. Merge Intervals\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\055. Merge Intervals\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"
2025-02-06 16:55:56 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\056. Insert Interval\TEST.cc
2025-02-06 16:55:56 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\056. Insert Interval\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\056. Insert Interval\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"
2025-02-06 16:55:56 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:56 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:56 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\057. Length of Last Word\TEST.cc
2025-02-06 16:55:56 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\057. Length of Last Word\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\057. Length of Last Word\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"
2025-02-06 16:55:56 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:56 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:56 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\058. Spiral Matrix II\main.cc
2025-02-06 16:55:57 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\058. Spiral Matrix II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\058. Spiral Matrix II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"
2025-02-06 16:55:57 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\059. Permutation Sequence\TEST.cc
2025-02-06 16:55:57 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\059. Permutation Sequence\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\059. Permutation Sequence\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"
2025-02-06 16:55:57 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:55:57 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:55:57 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\060. Rotate List\main.cpp
2025-02-06 16:55:58 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\060. Rotate List\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\060. Rotate List\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"
2025-02-06 16:55:58 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\061. Unique Paths\main.cc
2025-02-06 16:55:58 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\061. Unique Paths\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\061. Unique Paths\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"
2025-02-06 16:55:58 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\062. Unique Paths II\main.cc
2025-02-06 16:55:58 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\062. Unique Paths II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\062. Unique Paths II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"
2025-02-06 16:55:58 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\063. Minimum Path Sum\main.cc
2025-02-06 16:55:59 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\063. Minimum Path Sum\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\063. Minimum Path Sum\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"
2025-02-06 16:55:59 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\065. Plus One\main.cc
2025-02-06 16:55:59 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\065. Plus One\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\065. Plus One\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"
2025-02-06 16:55:59 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\066. Add Binary\TEST.cc
2025-02-06 16:55:59 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\066. Add Binary\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\066. Add Binary\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"
2025-02-06 16:55:59 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:00 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:00 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\068. Sqrt(x)\TEST.cc
2025-02-06 16:56:00 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\068. Sqrt(x)\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\068. Sqrt(x)\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"
2025-02-06 16:56:00 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:00 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:00 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\069. Climbing Stairs\main.cpp
2025-02-06 16:56:00 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\069. Climbing Stairs\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\069. Climbing Stairs\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"
2025-02-06 16:56:00 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\070. Simplify Path\TEST.cc
2025-02-06 16:56:00 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\070. Simplify Path\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\070. Simplify Path\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"
2025-02-06 16:56:00 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:01 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:01 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\071. Edit Distance\TEST.cc
2025-02-06 16:56:01 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\071. Edit Distance\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\071. Edit Distance\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"
2025-02-06 16:56:01 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:01 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:01 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
2025-02-06 16:56:02 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\072. Set Matrix Zeroes\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\072. Set Matrix Zeroes\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"
2025-02-06 16:56:02 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
2025-02-06 16:56:02 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"
2025-02-06 16:56:02 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:02 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:02 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\074. Sort Colors\main.cc
2025-02-06 16:56:03 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\074. Sort Colors\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\074. Sort Colors\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"
2025-02-06 16:56:03 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\076. Combinations\main.cc
2025-02-06 16:56:03 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\076. Combinations\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\076. Combinations\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"
2025-02-06 16:56:03 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\077. Subsets\main.cc
2025-02-06 16:56:03 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\077. Subsets\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\077. Subsets\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"
2025-02-06 16:56:03 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:04 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:04 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
2025-02-06 16:56:04 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"
2025-02-06 16:56:04 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:04 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:04 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
2025-02-06 16:56:04 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"
2025-02-06 16:56:04 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:05 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:05 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
2025-02-06 16:56:05 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"
2025-02-06 16:56:05 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
2025-02-06 16:56:05 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"
2025-02-06 16:56:05 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
2025-02-06 16:56:05 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"
2025-02-06 16:56:05 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:06 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:06 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
2025-02-06 16:56:06 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\084. Maximal Rectangle\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\084. Maximal Rectangle\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"
2025-02-06 16:56:06 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:06 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:06 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\085. Partition List\main.cc
2025-02-06 16:56:07 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\085. Partition List\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\085. Partition List\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"
2025-02-06 16:56:07 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\086. Scramble String\TEST.cc
2025-02-06 16:56:07 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\086. Scramble String\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\086. Scramble String\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"
2025-02-06 16:56:07 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:07 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:07 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\087. Merge Sorted Array\main.cc
2025-02-06 16:56:07 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\087. Merge Sorted Array\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\087. Merge Sorted Array\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"
2025-02-06 16:56:07 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\088. Gray Code\main.cc
2025-02-06 16:56:08 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\088. Gray Code\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\088. Gray Code\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"
2025-02-06 16:56:08 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\089. Subsets II\main.cc
2025-02-06 16:56:08 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\089. Subsets II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\089. Subsets II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"
2025-02-06 16:56:08 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\090. Insertion Sort List\main.cpp
2025-02-06 16:56:09 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\090. Insertion Sort List\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\090. Insertion Sort List\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"
2025-02-06 16:56:09 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\091. Reverse Linked List II\main.cc
2025-02-06 16:56:09 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\091. Reverse Linked List II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\091. Reverse Linked List II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"
2025-02-06 16:56:09 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\092. Restore IP Addresses\main.cpp
2025-02-06 16:56:09 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\092. Restore IP Addresses\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\092. Restore IP Addresses\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"
2025-02-06 16:56:09 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
2025-02-06 16:56:10 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"
2025-02-06 16:56:10 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
2025-02-06 16:56:10 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"
2025-02-06 16:56:10 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
2025-02-06 16:56:11 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"
2025-02-06 16:56:11 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
2025-02-06 16:56:11 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\097. Validate Binary Search Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\097. Validate Binary Search Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"
2025-02-06 16:56:11 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
2025-02-06 16:56:12 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"
2025-02-06 16:56:12 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\099. Same Tree\main.cpp
2025-02-06 16:56:12 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\099. Same Tree\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\099. Same Tree\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"
2025-02-06 16:56:12 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\100. Symmetric Tree\main.cc
2025-02-06 16:56:12 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\100. Symmetric Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\100. Symmetric Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"
2025-02-06 16:56:12 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
2025-02-06 16:56:13 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"
2025-02-06 16:56:13 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
2025-02-06 16:56:13 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"
2025-02-06 16:56:13 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
2025-02-06 16:56:14 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"
2025-02-06 16:56:14 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
2025-02-06 16:56:14 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"
2025-02-06 16:56:14 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
2025-02-06 16:56:15 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"
2025-02-06 16:56:15 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
2025-02-06 16:56:15 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"
2025-02-06 16:56:15 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:16 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:16 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
2025-02-06 16:56:16 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"
2025-02-06 16:56:16 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
2025-02-06 16:56:17 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"
2025-02-06 16:56:17 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\109. Balanced Binary Tree\main.cc
2025-02-06 16:56:17 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\109. Balanced Binary Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\109. Balanced Binary Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"
2025-02-06 16:56:17 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
2025-02-06 16:56:18 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"
2025-02-06 16:56:18 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\111. Path Sum\TEST.cc
2025-02-06 16:56:18 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\111. Path Sum\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\111. Path Sum\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"
2025-02-06 16:56:18 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:18 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:18 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\112. Path Sum II\main.cc
2025-02-06 16:56:19 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\112. Path Sum II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\112. Path Sum II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"
2025-02-06 16:56:19 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
2025-02-06 16:56:19 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"
2025-02-06 16:56:19 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
2025-02-06 16:56:19 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\114. Distinct Subsequences\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\114. Distinct Subsequences\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"
2025-02-06 16:56:19 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:19 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:19 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
2025-02-06 16:56:20 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"
2025-02-06 16:56:20 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
2025-02-06 16:56:20 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"
2025-02-06 16:56:20 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\117. Pascal's Triangle\main.cc
2025-02-06 16:56:21 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\117. Pascal's Triangle\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\117. Pascal's Triangle\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"
2025-02-06 16:56:21 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\118. Pascal's Triangle II\main.cc
2025-02-06 16:56:21 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\118. Pascal's Triangle II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\118. Pascal's Triangle II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"
2025-02-06 16:56:21 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\119. Triangle\TEST.cc
2025-02-06 16:56:21 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\119. Triangle\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\119. Triangle\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"
2025-02-06 16:56:21 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:21 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:21 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
2025-02-06 16:56:22 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"
2025-02-06 16:56:22 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
2025-02-06 16:56:22 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"
2025-02-06 16:56:22 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
2025-02-06 16:56:22 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"
2025-02-06 16:56:22 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:23 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:23 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\122. Sort List\main.cpp
2025-02-06 16:56:23 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\122. Sort List\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\122. Sort List\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"
2025-02-06 16:56:23 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
2025-02-06 16:56:23 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"
2025-02-06 16:56:23 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\124. Valid Palindrome\TEST.cc
2025-02-06 16:56:23 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\124. Valid Palindrome\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\124. Valid Palindrome\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"
2025-02-06 16:56:23 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:24 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:24 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\125. Reorder List\main.cpp
2025-02-06 16:56:24 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\125. Reorder List\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\125. Reorder List\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"
2025-02-06 16:56:24 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
2025-02-06 16:56:24 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"
2025-02-06 16:56:24 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:24 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:24 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
2025-02-06 16:56:25 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"
2025-02-06 16:56:25 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\130. Palindrome Partitioning\main.cc
2025-02-06 16:56:25 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\130. Palindrome Partitioning\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\130. Palindrome Partitioning\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"
2025-02-06 16:56:25 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\132. Clone Graph\main.cpp
2025-02-06 16:56:26 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\132. Clone Graph\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\132. Clone Graph\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"
2025-02-06 16:56:26 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\133. Gas Station\TEST.cc
2025-02-06 16:56:26 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\133. Gas Station\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\133. Gas Station\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"
2025-02-06 16:56:26 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:27 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:27 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\135. Single Number\main.cpp
2025-02-06 16:56:27 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\135. Single Number\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\135. Single Number\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"
2025-02-06 16:56:27 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\136. Single Number II\TEST.cc
2025-02-06 16:56:27 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\136. Single Number II\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\136. Single Number II\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"
2025-02-06 16:56:27 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:27 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:27 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
2025-02-06 16:56:28 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"
2025-02-06 16:56:28 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\138. Word Break\TEST.cc
2025-02-06 16:56:28 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\138. Word Break\TEST.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\138. Word Break\TEST.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"
2025-02-06 16:56:28 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:28 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:28 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\141. Linked List Cycle II\main.cc
2025-02-06 16:56:29 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\141. Linked List Cycle II\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\141. Linked List Cycle II\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"
2025-02-06 16:56:29 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
2025-02-06 16:56:29 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"
2025-02-06 16:56:29 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
2025-02-06 16:56:30 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"
2025-02-06 16:56:30 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
2025-02-06 16:56:30 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"
2025-02-06 16:56:30 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:30 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:30 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
2025-02-06 16:56:30 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"
2025-02-06 16:56:30 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:30 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:30 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
2025-02-06 16:56:30 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\619. Maximum Average Subarray I\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\619. Maximum Average Subarray I\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"
2025-02-06 16:56:30 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:31 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:31 DEBUG SrcResolverController:372 - [JavaFX Application Thread] Compiling C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\pezy_LeetCode\630. Maximum Binary Tree\main.cc
2025-02-06 16:56:31 DEBUG Compiler:117 - [JavaFX Application Thread] Compilation of .\pezy_LeetCode\630. Maximum Binary Tree\main.cc: g++ -c -std=gnu++14 -w ".\pezy_LeetCode\630. Maximum Binary Tree\main.cc" -I"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\000. Two Sum" -o"C:\\Users\\daidu\\Projects\\SQA-LAB\\AKA\\prj-data\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"
2025-02-06 16:56:31 DEBUG SrcResolverController:399 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:32 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:56:32 DEBUG SrcResolverController:225 - [JavaFX Application Thread] Linking source code file to create an executable file
2025-02-06 16:56:32 DEBUG SrcResolverController:318 - [JavaFX Application Thread] Linking command: g++<<AKA_U00A0>>-std=gnu++14<<AKA_U00A0>>-w<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\000. Two Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\001. Add Two Numbers\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\002. Longest Substring Without Repeating Characters\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\004. Longest Palindromic Substring\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\005. ZigZag Conversion\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\006. Reverse Integer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\007. Linked List Cycle\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\008. Palindrome Number\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\009. Regular Expression Matching\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\010. Container With Most Water\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\011. Integer to Roman\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\012. Roman to Integer\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\013. Longest Common Prefix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\015. 3Sum Closest\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\016. Letter Combinations of a Phone Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\017. 4Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\018. Remove Nth Node from End of List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\019. Valid Parentheses\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\020. Merge Two Sorted Lists\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\021. Generate Parentheses\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\022. Merge k Sorted Lists\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\023. Swap Nodes in Pairs\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\024. Reverse Nodes in k-Group\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\025. Remove Duplicates from Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\026. Remove Element\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\027. Implement strStr()\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\030. Next Permutation\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\032. Search in Rotated Sorted Array\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\033. Search for a Range\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\034. Search Insert Position\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\035. Valid Sudoku\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\036. Sudoku Solver\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\037. Count and Say\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\038. Combination Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\039. Combination Sum II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\040. First Missing Positive\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\041. Trapping Rain Water\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\042. Multiply Strings\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\044. Jump Game II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\045. Permutations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\046. Permutations II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\047. Rotate Image\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\048. Group Anagrams\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\049. Pow(x, n)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\050. N-Queens\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\051. N-Queens II\TEST.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\052. Maximum Subarray\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\053. Spiral Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\054. Jump Game\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\055. Merge Intervals\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\056. Insert Interval\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\057. Length of Last Word\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\058. Spiral Matrix II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\059. Permutation Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\060. Rotate List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\061. Unique Paths\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\062. Unique Paths II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\063. Minimum Path Sum\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\065. Plus One\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\066. Add Binary\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\068. Sqrt(x)\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\069. Climbing Stairs\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\070. Simplify Path\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\071. Edit Distance\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\072. Set Matrix Zeroes\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\073. Search a 2D Matrix\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\074. Sort Colors\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\076. Combinations\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\077. Subsets\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\079. Remove Duplicates from Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\080. Search in Rotated Sorted Array II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\081. Remove Duplicates from Sorted List II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\082. Remove Duplicates from Sorted List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\083. Largest Rectangle in Histogram\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\084. Maximal Rectangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\085. Partition List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\086. Scramble String\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\087. Merge Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\088. Gray Code\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\089. Subsets II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\090. Insertion Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\091. Reverse Linked List II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\092. Restore IP Addresses\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\093. Binary Tree Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\094. Unique Binary Search Trees II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\095. Unique Binary Search Trees\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\097. Validate Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\098. Recover Binary Search Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\099. Same Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\100. Symmetric Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\101. Binary Tree Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\102. Binary Tree Zigzag Level Order Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\103. Maximum Depth of Binary Tree\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\104. Construct Binary Tree from Preorder and Inorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\105. Construct Binary Tree from Inorder and Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\106. Binary Tree Level Order Traversal II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\107. Convert Sorted Array to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\108. Convert Sorted List to Binary Search Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\109. Balanced Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\110. Minimum Depth of Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\111. Path Sum\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\112. Path Sum II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\113. Flatten Binary Tree to Linked List\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\114. Distinct Subsequences\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\115. Populating Next Right Pointers in Each Node\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\116. Populating Next Right Pointers in Each Node II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\117. Pascal's Triangle\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\118. Pascal's Triangle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\119. Triangle\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\120. Best Time to Buy and Sell Stock\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\121. Best Time to Buy and Sell Stock II\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Best Time to Buy and Sell Stock III\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\122. Sort List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\123. Binary Tree Maximum Path Sum\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\124. Valid Palindrome\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\125. Reorder List\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\127. Longest Consecutive Sequence\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\128. Sum Root to Leaf Numbers\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\130. Palindrome Partitioning\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\132. Clone Graph\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\133. Gas Station\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\135. Single Number\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\136. Single Number II\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\137. Copy List with Random Pointer\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\138. Word Break\TEST.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\141. Linked List Cycle II\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\143. Binary Tree Preorder Traversal\main.akaignore.cpp.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\144. Binary Tree Postorder Traversal\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\152. Find Minimum in Rotated Sorted Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\435. Find All Duplicates in an Array\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\619. Maximum Average Subarray I\main.akaignore.cc.out"<<AKA_U00A0>>".\\aka-working-space\\pezy\\instruments\630. Maximum Binary Tree\main.akaignore.cc.out"<<AKA_U00A0>>-o".\pezy_LeetCode\program.exe"
2025-02-06 16:57:18 DEBUG NameEnvironmentController:77 - [JavaFX Application Thread] Environment configuration:
ENVIRO.NEW
ENVIRO.COMPILER.NEW
ENVIRO.COMPILER.NAME: [MinGW] C++ 14
ENVIRO.COMPILER.COMPILE_CMD: g++ -c -std=gnu++14 -w
ENVIRO.COMPILER.PREPROCESS_CMD: g++ -c -E -std=gnu++14
ENVIRO.COMPILER.LINK_CMD: g++ -std=gnu++14 -w
ENVIRO.COMPILER.DEBUG_CMD: gdb
ENVIRO.COMPILER.INCLUDE_FLAG: -I
ENVIRO.COMPILER.DEFINE_FLAG: -D
ENVIRO.COMPILER.OUTPUT_FLAG: -o
ENVIRO.COMPILER.DEBUG_FLAG: -ggdb
ENVIRO.COMPILER.OUTPUT_EXT: .out
ENVIRO.COMPILER.IS_USE_GTEST: false
ENVIRO.COMPILER.END
ENVIRO.CMAKE.NEW
ENVIRO.CMAKE.IS_CMAKE_PROJECT: false
ENVIRO.CMAKE.IS_AKA_CMAKE_PROJECT: false
ENVIRO.CMAKE.GENERATOR: unknown
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_CMD: cmake
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_OPTIONS: 
ENVIRO.CMAKE.BUILD_CMD: cmake --build
ENVIRO.CMAKE.BUILD_OPTIONS: 
ENVIRO.CMAKE.PROJ_DIRECTORY: 
ENVIRO.CMAKE.END
ENVIRO.NAME: pezy
ENVIRO.TESTING_METHOD: TRADITIONAL_UNIT_TESTING
ENVIRO.WHITE_BOX: YES
ENVIRO.COVERAGE_TYPE: STATEMENT+MCDC
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\000. Two Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\001. Add Two Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\004. Longest Palindromic Substring
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\005. ZigZag Conversion
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\006. Reverse Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\007. Linked List Cycle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\008. Palindrome Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\009. Regular Expression Matching
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\010. Container With Most Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\011. Integer to Roman
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\012. Roman to Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\013. Longest Common Prefix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\015. 3Sum Closest
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\016. Letter Combinations of a Phone Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\017. 4Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\018. Remove Nth Node from End of List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\019. Valid Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\020. Merge Two Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\021. Generate Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\022. Merge k Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\023. Swap Nodes in Pairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\024. Reverse Nodes in k-Group
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\026. Remove Element
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\027. Implement strStr()
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\030. Next Permutation
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\032. Search in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\033. Search for a Range
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\034. Search Insert Position
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\035. Valid Sudoku
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\036. Sudoku Solver
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\037. Count and Say
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\038. Combination Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\039. Combination Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\040. First Missing Positive
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\041. Trapping Rain Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\042. Multiply Strings
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\044. Jump Game II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\045. Permutations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\046. Permutations II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\047. Rotate Image
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\048. Group Anagrams
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\049. Pow(x, n)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\050. N-Queens
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\051. N-Queens II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\052. Maximum Subarray
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\053. Spiral Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\054. Jump Game
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\055. Merge Intervals
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\056. Insert Interval
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\057. Length of Last Word
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\058. Spiral Matrix II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\059. Permutation Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\060. Rotate List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\061. Unique Paths
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\062. Unique Paths II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\063. Minimum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\065. Plus One
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\066. Add Binary
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\068. Sqrt(x)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\069. Climbing Stairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\070. Simplify Path
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\071. Edit Distance
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\072. Set Matrix Zeroes
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\073. Search a 2D Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\074. Sort Colors
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\076. Combinations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\077. Subsets
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\080. Search in Rotated Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\082. Remove Duplicates from Sorted List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\083. Largest Rectangle in Histogram
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\084. Maximal Rectangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\085. Partition List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\086. Scramble String
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\087. Merge Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\088. Gray Code
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\089. Subsets II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\090. Insertion Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\091. Reverse Linked List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\092. Restore IP Addresses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\093. Binary Tree Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\094. Unique Binary Search Trees II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\095. Unique Binary Search Trees
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\097. Validate Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\098. Recover Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\099. Same Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\100. Symmetric Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\101. Binary Tree Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\103. Maximum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\109. Balanced Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\110. Minimum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\111. Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\112. Path Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\114. Distinct Subsequences
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\117. Pascal's Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\118. Pascal's Triangle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\119. Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\124. Valid Palindrome
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\125. Reorder List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\127. Longest Consecutive Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\128. Sum Root to Leaf Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\130. Palindrome Partitioning
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\132. Clone Graph
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\133. Gas Station
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\135. Single Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\136. Single Number II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\137. Copy List with Random Pointer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\138. Word Break
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\141. Linked List Cycle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\143. Binary Tree Preorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\144. Binary Tree Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\435. Find All Duplicates in an Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\619. Maximum Average Subarray I
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\630. Maximum Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\Catch
ENVIRO.PARSE_ALL_FILES: NO
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\solution.h
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\solution.h
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\solution.h
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\main.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\solution.h
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\main.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\solution.h
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\solution.h
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\solution.h
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\main.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\solution.h
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\main.cc
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\solution.h
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\solution.h
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\main.cc
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\solution.h
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\main.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\TEST.cpp
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\divide_conquer.h
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\main.cc
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\solution.h
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution_string.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\main.cc
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\solution.h
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\main.cc
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution_dp.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\solution.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\solution.h
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\main.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\solution.h
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\main.cc
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution_lambda.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\solution.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\main.cc
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\solution.h
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\recursion.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\solution.h
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\solution.h
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\main.cc
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\solution.h
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\main.cc
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\solution.h
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\solution.h
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\solution.h
ENVIRO.END
2025-02-06 17:00:08 DEBUG AbstractCustomController:298 - [JavaFX Application Thread] Environment script:
ENVIRO.NEW
ENVIRO.COMPILER.NEW
ENVIRO.COMPILER.NAME: [MinGW] C++ 14
ENVIRO.COMPILER.COMPILE_CMD: g++ -c -std=gnu++14 -w
ENVIRO.COMPILER.PREPROCESS_CMD: g++ -c -E -std=gnu++14
ENVIRO.COMPILER.LINK_CMD: g++ -std=gnu++14 -w
ENVIRO.COMPILER.DEBUG_CMD: gdb
ENVIRO.COMPILER.INCLUDE_FLAG: -I
ENVIRO.COMPILER.DEFINE_FLAG: -D
ENVIRO.COMPILER.OUTPUT_FLAG: -o
ENVIRO.COMPILER.DEBUG_FLAG: -ggdb
ENVIRO.COMPILER.OUTPUT_EXT: .out
ENVIRO.COMPILER.IS_USE_GTEST: false
ENVIRO.COMPILER.END
ENVIRO.CMAKE.NEW
ENVIRO.CMAKE.IS_CMAKE_PROJECT: false
ENVIRO.CMAKE.IS_AKA_CMAKE_PROJECT: false
ENVIRO.CMAKE.GENERATOR: unknown
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_CMD: cmake
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_OPTIONS: 
ENVIRO.CMAKE.BUILD_CMD: cmake --build
ENVIRO.CMAKE.BUILD_OPTIONS: 
ENVIRO.CMAKE.PROJ_DIRECTORY: 
ENVIRO.CMAKE.END
ENVIRO.NAME: pezy
ENVIRO.TESTING_METHOD: TRADITIONAL_UNIT_TESTING
ENVIRO.WHITE_BOX: YES
ENVIRO.COVERAGE_TYPE: STATEMENT+MCDC
ENVIRO.PARSE_ALL_FILES: NO
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\solution.h
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\solution.h
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\solution.h
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\main.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\solution.h
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\main.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\solution.h
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\solution.h
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\solution.h
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\main.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\solution.h
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\main.cc
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\solution.h
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\solution.h
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\main.cc
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\solution.h
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\main.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\TEST.cpp
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\divide_conquer.h
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\main.cc
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\solution.h
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution_string.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\main.cc
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\solution.h
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\main.cc
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution_dp.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\solution.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\solution.h
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\main.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\solution.h
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\main.cc
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution_lambda.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\solution.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\main.cc
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\solution.h
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\recursion.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\solution.h
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\solution.h
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\main.cc
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\solution.h
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\main.cc
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\solution.h
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\solution.h
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\solution.h
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\000. Two Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\001. Add Two Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\004. Longest Palindromic Substring
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\005. ZigZag Conversion
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\006. Reverse Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\007. Linked List Cycle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\008. Palindrome Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\009. Regular Expression Matching
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\010. Container With Most Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\011. Integer to Roman
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\012. Roman to Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\013. Longest Common Prefix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\015. 3Sum Closest
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\016. Letter Combinations of a Phone Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\017. 4Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\018. Remove Nth Node from End of List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\019. Valid Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\020. Merge Two Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\021. Generate Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\022. Merge k Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\023. Swap Nodes in Pairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\024. Reverse Nodes in k-Group
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\026. Remove Element
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\027. Implement strStr()
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\030. Next Permutation
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\032. Search in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\033. Search for a Range
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\034. Search Insert Position
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\035. Valid Sudoku
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\036. Sudoku Solver
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\037. Count and Say
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\038. Combination Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\039. Combination Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\040. First Missing Positive
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\041. Trapping Rain Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\042. Multiply Strings
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\044. Jump Game II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\045. Permutations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\046. Permutations II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\047. Rotate Image
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\048. Group Anagrams
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\049. Pow(x, n)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\050. N-Queens
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\051. N-Queens II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\052. Maximum Subarray
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\053. Spiral Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\054. Jump Game
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\055. Merge Intervals
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\056. Insert Interval
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\057. Length of Last Word
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\058. Spiral Matrix II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\059. Permutation Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\060. Rotate List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\061. Unique Paths
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\062. Unique Paths II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\063. Minimum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\065. Plus One
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\066. Add Binary
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\068. Sqrt(x)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\069. Climbing Stairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\070. Simplify Path
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\071. Edit Distance
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\072. Set Matrix Zeroes
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\073. Search a 2D Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\074. Sort Colors
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\076. Combinations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\077. Subsets
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\080. Search in Rotated Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\082. Remove Duplicates from Sorted List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\083. Largest Rectangle in Histogram
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\084. Maximal Rectangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\085. Partition List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\086. Scramble String
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\087. Merge Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\088. Gray Code
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\089. Subsets II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\090. Insertion Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\091. Reverse Linked List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\092. Restore IP Addresses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\093. Binary Tree Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\094. Unique Binary Search Trees II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\095. Unique Binary Search Trees
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\097. Validate Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\098. Recover Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\099. Same Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\100. Symmetric Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\101. Binary Tree Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\103. Maximum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\109. Balanced Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\110. Minimum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\111. Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\112. Path Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\114. Distinct Subsequences
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\117. Pascal's Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\118. Pascal's Triangle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\119. Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\124. Valid Palindrome
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\125. Reorder List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\127. Longest Consecutive Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\128. Sum Root to Leaf Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\130. Palindrome Partitioning
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\132. Clone Graph
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\133. Gas Station
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\135. Single Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\136. Single Number II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\137. Copy List with Random Pointer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\138. Word Break
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\141. Linked List Cycle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\143. Binary Tree Preorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\144. Binary Tree Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\435. Find All Duplicates in an Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\619. Maximum Average Subarray I
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\630. Maximum Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\Catch
ENVIRO.END
2025-02-06 17:00:08 DEBUG AbstractCustomController:299 - [JavaFX Application Thread] Updating the next window (Choose UUTs)
2025-02-06 17:00:08 DEBUG AbstractCustomController:300 - [JavaFX Application Thread] Update done!
2025-02-06 17:00:10 DEBUG NameEnvironmentController:77 - [JavaFX Application Thread] Environment configuration:
ENVIRO.NEW
ENVIRO.COMPILER.NEW
ENVIRO.COMPILER.NAME: [MinGW] C++ 14
ENVIRO.COMPILER.COMPILE_CMD: g++ -c -std=gnu++14 -w
ENVIRO.COMPILER.PREPROCESS_CMD: g++ -c -E -std=gnu++14
ENVIRO.COMPILER.LINK_CMD: g++ -std=gnu++14 -w
ENVIRO.COMPILER.DEBUG_CMD: gdb
ENVIRO.COMPILER.INCLUDE_FLAG: -I
ENVIRO.COMPILER.DEFINE_FLAG: -D
ENVIRO.COMPILER.OUTPUT_FLAG: -o
ENVIRO.COMPILER.DEBUG_FLAG: -ggdb
ENVIRO.COMPILER.OUTPUT_EXT: .out
ENVIRO.COMPILER.IS_USE_GTEST: false
ENVIRO.COMPILER.END
ENVIRO.CMAKE.NEW
ENVIRO.CMAKE.IS_CMAKE_PROJECT: false
ENVIRO.CMAKE.IS_AKA_CMAKE_PROJECT: false
ENVIRO.CMAKE.GENERATOR: unknown
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_CMD: cmake
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_OPTIONS: 
ENVIRO.CMAKE.BUILD_CMD: cmake --build
ENVIRO.CMAKE.BUILD_OPTIONS: 
ENVIRO.CMAKE.PROJ_DIRECTORY: 
ENVIRO.CMAKE.END
ENVIRO.NAME: luliyucoordinate
ENVIRO.TESTING_METHOD: TRADITIONAL_UNIT_TESTING
ENVIRO.WHITE_BOX: YES
ENVIRO.COVERAGE_TYPE: STATEMENT+MCDC
ENVIRO.PARSE_ALL_FILES: NO
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\solution.h
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\solution.h
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\solution.h
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\main.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\solution.h
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\main.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\solution.h
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\solution.h
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\solution.h
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\main.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\solution.h
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\main.cc
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\solution.h
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\solution.h
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\main.cc
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\solution.h
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\main.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\TEST.cpp
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\divide_conquer.h
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\main.cc
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\solution.h
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution_string.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\main.cc
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\solution.h
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\main.cc
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution_dp.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\solution.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\solution.h
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\main.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\solution.h
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\main.cc
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution_lambda.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\solution.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\main.cc
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\solution.h
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\recursion.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\solution.h
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\solution.h
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\main.cc
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\solution.h
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\main.cc
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\solution.h
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\solution.h
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\solution.h
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\000. Two Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\001. Add Two Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\004. Longest Palindromic Substring
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\005. ZigZag Conversion
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\006. Reverse Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\007. Linked List Cycle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\008. Palindrome Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\009. Regular Expression Matching
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\010. Container With Most Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\011. Integer to Roman
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\012. Roman to Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\013. Longest Common Prefix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\015. 3Sum Closest
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\016. Letter Combinations of a Phone Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\017. 4Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\018. Remove Nth Node from End of List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\019. Valid Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\020. Merge Two Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\021. Generate Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\022. Merge k Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\023. Swap Nodes in Pairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\024. Reverse Nodes in k-Group
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\026. Remove Element
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\027. Implement strStr()
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\030. Next Permutation
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\032. Search in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\033. Search for a Range
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\034. Search Insert Position
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\035. Valid Sudoku
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\036. Sudoku Solver
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\037. Count and Say
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\038. Combination Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\039. Combination Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\040. First Missing Positive
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\041. Trapping Rain Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\042. Multiply Strings
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\044. Jump Game II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\045. Permutations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\046. Permutations II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\047. Rotate Image
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\048. Group Anagrams
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\049. Pow(x, n)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\050. N-Queens
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\051. N-Queens II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\052. Maximum Subarray
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\053. Spiral Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\054. Jump Game
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\055. Merge Intervals
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\056. Insert Interval
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\057. Length of Last Word
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\058. Spiral Matrix II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\059. Permutation Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\060. Rotate List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\061. Unique Paths
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\062. Unique Paths II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\063. Minimum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\065. Plus One
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\066. Add Binary
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\068. Sqrt(x)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\069. Climbing Stairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\070. Simplify Path
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\071. Edit Distance
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\072. Set Matrix Zeroes
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\073. Search a 2D Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\074. Sort Colors
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\076. Combinations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\077. Subsets
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\080. Search in Rotated Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\082. Remove Duplicates from Sorted List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\083. Largest Rectangle in Histogram
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\084. Maximal Rectangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\085. Partition List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\086. Scramble String
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\087. Merge Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\088. Gray Code
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\089. Subsets II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\090. Insertion Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\091. Reverse Linked List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\092. Restore IP Addresses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\093. Binary Tree Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\094. Unique Binary Search Trees II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\095. Unique Binary Search Trees
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\097. Validate Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\098. Recover Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\099. Same Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\100. Symmetric Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\101. Binary Tree Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\103. Maximum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\109. Balanced Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\110. Minimum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\111. Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\112. Path Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\114. Distinct Subsequences
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\117. Pascal's Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\118. Pascal's Triangle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\119. Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\124. Valid Palindrome
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\125. Reorder List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\127. Longest Consecutive Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\128. Sum Root to Leaf Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\130. Palindrome Partitioning
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\132. Clone Graph
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\133. Gas Station
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\135. Single Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\136. Single Number II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\137. Copy List with Random Pointer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\138. Word Break
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\141. Linked List Cycle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\143. Binary Tree Preorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\144. Binary Tree Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\435. Find All Duplicates in an Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\619. Maximum Average Subarray I
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\630. Maximum Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\Catch
ENVIRO.END
2025-02-06 17:00:11 DEBUG AbstractCustomController:132 - [JavaFX Application Thread] Environment configuration:
ENVIRO.NEW
ENVIRO.COMPILER.NEW
ENVIRO.COMPILER.NAME: [MinGW] C++ 14
ENVIRO.COMPILER.COMPILE_CMD: g++ -c -std=gnu++14 -w
ENVIRO.COMPILER.PREPROCESS_CMD: g++ -c -E -std=gnu++14
ENVIRO.COMPILER.LINK_CMD: g++ -std=gnu++14 -w
ENVIRO.COMPILER.DEBUG_CMD: gdb
ENVIRO.COMPILER.INCLUDE_FLAG: -I
ENVIRO.COMPILER.DEFINE_FLAG: -D
ENVIRO.COMPILER.OUTPUT_FLAG: -o
ENVIRO.COMPILER.DEBUG_FLAG: -ggdb
ENVIRO.COMPILER.OUTPUT_EXT: .out
ENVIRO.COMPILER.IS_USE_GTEST: false
ENVIRO.COMPILER.END
ENVIRO.CMAKE.NEW
ENVIRO.CMAKE.IS_CMAKE_PROJECT: false
ENVIRO.CMAKE.IS_AKA_CMAKE_PROJECT: false
ENVIRO.CMAKE.GENERATOR: unknown
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_CMD: cmake
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_OPTIONS: 
ENVIRO.CMAKE.BUILD_CMD: cmake --build
ENVIRO.CMAKE.BUILD_OPTIONS: 
ENVIRO.CMAKE.PROJ_DIRECTORY: 
ENVIRO.CMAKE.END
ENVIRO.NAME: luliyucoordinate
ENVIRO.TESTING_METHOD: TRADITIONAL_UNIT_TESTING
ENVIRO.WHITE_BOX: YES
ENVIRO.COVERAGE_TYPE: STATEMENT+MCDC
ENVIRO.PARSE_ALL_FILES: NO
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\solution.h
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\solution.h
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\solution.h
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\main.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\solution.h
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\main.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\solution.h
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\solution.h
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\solution.h
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\main.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\solution.h
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\main.cc
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\solution.h
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\solution.h
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\main.cc
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\solution.h
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\main.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\TEST.cpp
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\divide_conquer.h
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\main.cc
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\solution.h
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution_string.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\main.cc
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\solution.h
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\main.cc
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution_dp.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\solution.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\solution.h
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\main.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\solution.h
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\main.cc
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution_lambda.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\solution.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\main.cc
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\solution.h
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\recursion.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\solution.h
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\solution.h
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\main.cc
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\solution.h
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\main.cc
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\solution.h
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\solution.h
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\solution.h
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\000. Two Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\001. Add Two Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\004. Longest Palindromic Substring
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\005. ZigZag Conversion
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\006. Reverse Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\007. Linked List Cycle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\008. Palindrome Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\009. Regular Expression Matching
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\010. Container With Most Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\011. Integer to Roman
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\012. Roman to Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\013. Longest Common Prefix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\015. 3Sum Closest
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\016. Letter Combinations of a Phone Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\017. 4Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\018. Remove Nth Node from End of List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\019. Valid Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\020. Merge Two Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\021. Generate Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\022. Merge k Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\023. Swap Nodes in Pairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\024. Reverse Nodes in k-Group
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\026. Remove Element
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\027. Implement strStr()
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\030. Next Permutation
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\032. Search in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\033. Search for a Range
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\034. Search Insert Position
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\035. Valid Sudoku
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\036. Sudoku Solver
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\037. Count and Say
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\038. Combination Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\039. Combination Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\040. First Missing Positive
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\041. Trapping Rain Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\042. Multiply Strings
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\044. Jump Game II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\045. Permutations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\046. Permutations II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\047. Rotate Image
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\048. Group Anagrams
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\049. Pow(x, n)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\050. N-Queens
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\051. N-Queens II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\052. Maximum Subarray
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\053. Spiral Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\054. Jump Game
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\055. Merge Intervals
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\056. Insert Interval
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\057. Length of Last Word
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\058. Spiral Matrix II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\059. Permutation Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\060. Rotate List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\061. Unique Paths
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\062. Unique Paths II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\063. Minimum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\065. Plus One
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\066. Add Binary
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\068. Sqrt(x)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\069. Climbing Stairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\070. Simplify Path
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\071. Edit Distance
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\072. Set Matrix Zeroes
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\073. Search a 2D Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\074. Sort Colors
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\076. Combinations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\077. Subsets
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\080. Search in Rotated Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\082. Remove Duplicates from Sorted List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\083. Largest Rectangle in Histogram
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\084. Maximal Rectangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\085. Partition List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\086. Scramble String
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\087. Merge Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\088. Gray Code
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\089. Subsets II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\090. Insertion Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\091. Reverse Linked List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\092. Restore IP Addresses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\093. Binary Tree Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\094. Unique Binary Search Trees II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\095. Unique Binary Search Trees
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\097. Validate Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\098. Recover Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\099. Same Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\100. Symmetric Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\101. Binary Tree Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\103. Maximum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\109. Balanced Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\110. Minimum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\111. Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\112. Path Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\114. Distinct Subsequences
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\117. Pascal's Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\118. Pascal's Triangle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\119. Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\124. Valid Palindrome
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\125. Reorder List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\127. Longest Consecutive Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\128. Sum Root to Leaf Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\130. Palindrome Partitioning
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\132. Clone Graph
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\133. Gas Station
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\135. Single Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\136. Single Number II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\137. Copy List with Random Pointer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\138. Word Break
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\141. Linked List Cycle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\143. Binary Tree Preorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\144. Binary Tree Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\435. Find All Duplicates in an Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\619. Maximum Average Subarray I
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\630. Maximum Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\Catch
ENVIRO.END
2025-02-06 17:00:12 DEBUG BuildOptionsController:124 - [JavaFX Application Thread] Environment configuration:
ENVIRO.NEW
ENVIRO.COMPILER.NEW
ENVIRO.COMPILER.NAME: [MinGW] C++ 14
ENVIRO.COMPILER.COMPILE_CMD: g++ -c -std=gnu++14 -w
ENVIRO.COMPILER.PREPROCESS_CMD: g++ -c -E -std=gnu++14
ENVIRO.COMPILER.LINK_CMD: g++ -std=gnu++14 -w
ENVIRO.COMPILER.DEBUG_CMD: gdb
ENVIRO.COMPILER.INCLUDE_FLAG: -I
ENVIRO.COMPILER.DEFINE_FLAG: -D
ENVIRO.COMPILER.OUTPUT_FLAG: -o
ENVIRO.COMPILER.DEBUG_FLAG: -ggdb
ENVIRO.COMPILER.OUTPUT_EXT: .out
ENVIRO.COMPILER.IS_USE_GTEST: false
ENVIRO.COMPILER.END
ENVIRO.CMAKE.NEW
ENVIRO.CMAKE.IS_CMAKE_PROJECT: false
ENVIRO.CMAKE.IS_AKA_CMAKE_PROJECT: false
ENVIRO.CMAKE.GENERATOR: unknown
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_CMD: cmake
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_OPTIONS: 
ENVIRO.CMAKE.BUILD_CMD: cmake --build
ENVIRO.CMAKE.BUILD_OPTIONS: 
ENVIRO.CMAKE.PROJ_DIRECTORY: 
ENVIRO.CMAKE.END
ENVIRO.NAME: luliyucoordinate
ENVIRO.TESTING_METHOD: TRADITIONAL_UNIT_TESTING
ENVIRO.WHITE_BOX: YES
ENVIRO.COVERAGE_TYPE: STATEMENT+MCDC
ENVIRO.PARSE_ALL_FILES: NO
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\solution.h
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\solution.h
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\solution.h
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\main.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\solution.h
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\main.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\solution.h
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\solution.h
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\solution.h
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\main.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\solution.h
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\main.cc
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\solution.h
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\solution.h
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\main.cc
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\solution.h
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\main.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\TEST.cpp
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\divide_conquer.h
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\main.cc
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\solution.h
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution_string.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\main.cc
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\solution.h
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\main.cc
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution_dp.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\solution.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\solution.h
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\main.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\solution.h
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\main.cc
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution_lambda.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\solution.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\main.cc
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\solution.h
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\recursion.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\solution.h
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\solution.h
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\main.cc
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\solution.h
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\main.cc
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\solution.h
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\solution.h
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\solution.h
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\000. Two Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\001. Add Two Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\004. Longest Palindromic Substring
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\005. ZigZag Conversion
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\006. Reverse Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\007. Linked List Cycle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\008. Palindrome Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\009. Regular Expression Matching
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\010. Container With Most Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\011. Integer to Roman
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\012. Roman to Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\013. Longest Common Prefix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\015. 3Sum Closest
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\016. Letter Combinations of a Phone Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\017. 4Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\018. Remove Nth Node from End of List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\019. Valid Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\020. Merge Two Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\021. Generate Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\022. Merge k Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\023. Swap Nodes in Pairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\024. Reverse Nodes in k-Group
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\026. Remove Element
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\027. Implement strStr()
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\030. Next Permutation
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\032. Search in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\033. Search for a Range
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\034. Search Insert Position
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\035. Valid Sudoku
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\036. Sudoku Solver
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\037. Count and Say
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\038. Combination Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\039. Combination Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\040. First Missing Positive
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\041. Trapping Rain Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\042. Multiply Strings
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\044. Jump Game II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\045. Permutations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\046. Permutations II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\047. Rotate Image
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\048. Group Anagrams
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\049. Pow(x, n)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\050. N-Queens
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\051. N-Queens II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\052. Maximum Subarray
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\053. Spiral Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\054. Jump Game
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\055. Merge Intervals
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\056. Insert Interval
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\057. Length of Last Word
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\058. Spiral Matrix II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\059. Permutation Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\060. Rotate List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\061. Unique Paths
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\062. Unique Paths II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\063. Minimum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\065. Plus One
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\066. Add Binary
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\068. Sqrt(x)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\069. Climbing Stairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\070. Simplify Path
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\071. Edit Distance
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\072. Set Matrix Zeroes
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\073. Search a 2D Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\074. Sort Colors
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\076. Combinations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\077. Subsets
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\080. Search in Rotated Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\082. Remove Duplicates from Sorted List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\083. Largest Rectangle in Histogram
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\084. Maximal Rectangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\085. Partition List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\086. Scramble String
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\087. Merge Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\088. Gray Code
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\089. Subsets II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\090. Insertion Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\091. Reverse Linked List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\092. Restore IP Addresses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\093. Binary Tree Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\094. Unique Binary Search Trees II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\095. Unique Binary Search Trees
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\097. Validate Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\098. Recover Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\099. Same Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\100. Symmetric Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\101. Binary Tree Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\103. Maximum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\109. Balanced Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\110. Minimum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\111. Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\112. Path Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\114. Distinct Subsequences
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\117. Pascal's Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\118. Pascal's Triangle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\119. Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\124. Valid Palindrome
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\125. Reorder List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\127. Longest Consecutive Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\128. Sum Root to Leaf Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\130. Palindrome Partitioning
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\132. Clone Graph
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\133. Gas Station
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\135. Single Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\136. Single Number II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\137. Copy List with Random Pointer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\138. Word Break
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\141. Linked List Cycle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\143. Binary Tree Preorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\144. Binary Tree Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\435. Find All Duplicates in an Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\619. Maximum Average Subarray I
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\630. Maximum Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\Catch
ENVIRO.END
2025-02-06 17:00:12 DEBUG BuildOptionsController:154 - [JavaFX Application Thread] Environment configuration:
ENVIRO.NEW
ENVIRO.COMPILER.NEW
ENVIRO.COMPILER.NAME: [MinGW] C++ 14
ENVIRO.COMPILER.COMPILE_CMD: g++ -c -std=gnu++14 -w
ENVIRO.COMPILER.PREPROCESS_CMD: g++ -c -E -std=gnu++14
ENVIRO.COMPILER.LINK_CMD: g++ -std=gnu++14 -w
ENVIRO.COMPILER.DEBUG_CMD: gdb
ENVIRO.COMPILER.INCLUDE_FLAG: -I
ENVIRO.COMPILER.DEFINE_FLAG: -D
ENVIRO.COMPILER.OUTPUT_FLAG: -o
ENVIRO.COMPILER.DEBUG_FLAG: -ggdb
ENVIRO.COMPILER.OUTPUT_EXT: .out
ENVIRO.COMPILER.IS_USE_GTEST: false
ENVIRO.COMPILER.END
ENVIRO.CMAKE.NEW
ENVIRO.CMAKE.IS_CMAKE_PROJECT: false
ENVIRO.CMAKE.IS_AKA_CMAKE_PROJECT: false
ENVIRO.CMAKE.GENERATOR: unknown
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_CMD: cmake
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_OPTIONS: 
ENVIRO.CMAKE.BUILD_CMD: cmake --build
ENVIRO.CMAKE.BUILD_OPTIONS: 
ENVIRO.CMAKE.PROJ_DIRECTORY: 
ENVIRO.CMAKE.END
ENVIRO.NAME: luliyucoordinate
ENVIRO.TESTING_METHOD: TRADITIONAL_UNIT_TESTING
ENVIRO.WHITE_BOX: YES
ENVIRO.COVERAGE_TYPE: STATEMENT+MCDC
ENVIRO.PARSE_ALL_FILES: NO
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\solution.h
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\solution.h
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\solution.h
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\main.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\solution.h
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\main.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\solution.h
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\solution.h
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\solution.h
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\main.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\solution.h
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\main.cc
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\solution.h
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\solution.h
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\main.cc
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\solution.h
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\main.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\TEST.cpp
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\divide_conquer.h
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\main.cc
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\solution.h
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution_string.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\main.cc
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\solution.h
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\main.cc
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution_dp.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\solution.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\solution.h
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\main.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\solution.h
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\main.cc
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution_lambda.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\solution.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\main.cc
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\solution.h
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\recursion.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\solution.h
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\solution.h
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\main.cc
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\solution.h
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\main.cc
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\solution.h
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\solution.h
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\solution.h
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\000. Two Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\001. Add Two Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\004. Longest Palindromic Substring
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\005. ZigZag Conversion
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\006. Reverse Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\007. Linked List Cycle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\008. Palindrome Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\009. Regular Expression Matching
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\010. Container With Most Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\011. Integer to Roman
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\012. Roman to Integer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\013. Longest Common Prefix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\015. 3Sum Closest
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\016. Letter Combinations of a Phone Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\017. 4Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\018. Remove Nth Node from End of List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\019. Valid Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\020. Merge Two Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\021. Generate Parentheses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\022. Merge k Sorted Lists
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\023. Swap Nodes in Pairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\024. Reverse Nodes in k-Group
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\026. Remove Element
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\027. Implement strStr()
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\030. Next Permutation
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\032. Search in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\033. Search for a Range
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\034. Search Insert Position
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\035. Valid Sudoku
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\036. Sudoku Solver
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\037. Count and Say
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\038. Combination Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\039. Combination Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\040. First Missing Positive
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\041. Trapping Rain Water
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\042. Multiply Strings
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\044. Jump Game II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\045. Permutations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\046. Permutations II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\047. Rotate Image
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\048. Group Anagrams
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\049. Pow(x, n)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\050. N-Queens
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\051. N-Queens II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\052. Maximum Subarray
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\053. Spiral Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\054. Jump Game
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\055. Merge Intervals
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\056. Insert Interval
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\057. Length of Last Word
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\058. Spiral Matrix II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\059. Permutation Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\060. Rotate List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\061. Unique Paths
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\062. Unique Paths II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\063. Minimum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\065. Plus One
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\066. Add Binary
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\068. Sqrt(x)
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\069. Climbing Stairs
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\070. Simplify Path
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\071. Edit Distance
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\072. Set Matrix Zeroes
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\073. Search a 2D Matrix
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\074. Sort Colors
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\076. Combinations
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\077. Subsets
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\080. Search in Rotated Sorted Array II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\082. Remove Duplicates from Sorted List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\083. Largest Rectangle in Histogram
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\084. Maximal Rectangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\085. Partition List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\086. Scramble String
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\087. Merge Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\088. Gray Code
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\089. Subsets II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\090. Insertion Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\091. Reverse Linked List II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\092. Restore IP Addresses
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\093. Binary Tree Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\094. Unique Binary Search Trees II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\095. Unique Binary Search Trees
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\097. Validate Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\098. Recover Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\099. Same Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\100. Symmetric Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\101. Binary Tree Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\103. Maximum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\109. Balanced Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\110. Minimum Depth of Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\111. Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\112. Path Sum II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\114. Distinct Subsequences
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\117. Pascal's Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\118. Pascal's Triangle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\119. Triangle
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\122. Sort List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\124. Valid Palindrome
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\125. Reorder List
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\127. Longest Consecutive Sequence
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\128. Sum Root to Leaf Numbers
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\130. Palindrome Partitioning
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\132. Clone Graph
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\133. Gas Station
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\135. Single Number
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\136. Single Number II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\137. Copy List with Random Pointer
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\138. Word Break
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\141. Linked List Cycle II
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\143. Binary Tree Preorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\144. Binary Tree Postorder Traversal
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\435. Find All Duplicates in an Array
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\619. Maximum Average Subarray I
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\630. Maximum Binary Tree
ENVIRO.SEARCH_LIST: .\pezy_LeetCode\Catch
ENVIRO.END
2025-02-06 17:00:40 DEBUG AbstractCustomController:298 - [JavaFX Application Thread] Environment script:
ENVIRO.NEW
ENVIRO.COMPILER.NEW
ENVIRO.COMPILER.NAME: [MinGW] C++ 14
ENVIRO.COMPILER.COMPILE_CMD: g++ -c -std=gnu++14 -w
ENVIRO.COMPILER.PREPROCESS_CMD: g++ -c -E -std=gnu++14
ENVIRO.COMPILER.LINK_CMD: g++ -std=gnu++14 -w
ENVIRO.COMPILER.DEBUG_CMD: gdb
ENVIRO.COMPILER.INCLUDE_FLAG: -I
ENVIRO.COMPILER.DEFINE_FLAG: -D
ENVIRO.COMPILER.OUTPUT_FLAG: -o
ENVIRO.COMPILER.DEBUG_FLAG: -ggdb
ENVIRO.COMPILER.OUTPUT_EXT: .out
ENVIRO.COMPILER.IS_USE_GTEST: false
ENVIRO.COMPILER.END
ENVIRO.CMAKE.NEW
ENVIRO.CMAKE.IS_CMAKE_PROJECT: false
ENVIRO.CMAKE.IS_AKA_CMAKE_PROJECT: false
ENVIRO.CMAKE.GENERATOR: unknown
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_CMD: cmake
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_OPTIONS: 
ENVIRO.CMAKE.BUILD_CMD: cmake --build
ENVIRO.CMAKE.BUILD_OPTIONS: 
ENVIRO.CMAKE.PROJ_DIRECTORY: 
ENVIRO.CMAKE.END
ENVIRO.NAME: luliyucoordinate
ENVIRO.TESTING_METHOD: TRADITIONAL_UNIT_TESTING
ENVIRO.WHITE_BOX: YES
ENVIRO.COVERAGE_TYPE: STATEMENT+MCDC
ENVIRO.PARSE_ALL_FILES: NO
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\solution.h
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\solution.h
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\solution.h
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\main.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\solution.h
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\main.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\solution.h
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\solution.h
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\solution.h
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\main.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\solution.h
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\main.cc
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\solution.h
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\solution.h
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\main.cc
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\solution.h
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\main.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\TEST.cpp
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\divide_conquer.h
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\main.cc
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\solution.h
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution_string.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\main.cc
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\solution.h
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\main.cc
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution_dp.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\solution.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\solution.h
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\main.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\solution.h
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\main.cc
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution_lambda.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\solution.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\main.cc
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\solution.h
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\recursion.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\solution.h
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\solution.h
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\main.cc
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\solution.h
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\main.cc
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\solution.h
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\solution.h
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\solution.h
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0001-Two-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0002-Add-Two-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0003-Longest-Substring-Without-Repeating-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0004-Median-of-Two-Sorted-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0005-Longest-Palindromic-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0006-ZigZag-Conversion
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0007-Reverse-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0008-String-to-Integer-(atoi)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0009-Palindrome-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0010-Regular-Expression-Matching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0011-Container-With-Most-Water
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0012-Integer-to-Roman
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0013-Roman-to-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0014-Longest-Common-Prefix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0015-3Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0016-3Sum-Closest
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0017-Letter-Combinations-of-a-Phone-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0018-4Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0019-Remove-Nth-Node-From-End-of-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0020-Valid-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0021-Merge-Two-Sorted-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0022-Generate-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0023-Merge-k-Sorted-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0024-Swap-Nodes-in-Pairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0025-Reverse-Nodes-in-k-Group
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0026-Remove-Duplicates-from-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0027-Remove-Element
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0028-Implement-strStr()
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0029-Divide-Two-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0030-Substring-with-Concatenation-of-All-Words
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0031-Next-Permutation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0032-Longest-Valid-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0033-Search-in-Rotated-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0034-Find-First-and-Last-Position-of-Element-in-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0035-Search-Insert-Position
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0036-Valid-Sudoku
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0037-Sudoku-Solver
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0038-Count-and-Say
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0039-Combination-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0040-Combination-Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0041-First-Missing-Positive
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0042-Trapping-Rain-Water
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0043-Multiply-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0044-Wildcard-Matching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0045-Jump-Game-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0046-Permutations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0047-Permutations-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0048-Rotate-Image
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0049-Group-Anagrams
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0050-Pow(x,n)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0051-N-Queens
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0052-N-Queens-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0053-Maximum-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0054-Spiral-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0055-Jump-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0056-Merge-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0057-Insert-Interval
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0058-Length-of-Last-Word
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0059-Spiral-Matrix-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0060-Permutation-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0061-Rotate-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0062-Unique-Paths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0063-Unique-Paths-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0064-Minimum-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0065-Valid-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0066-Plus-One
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0067-Add-Binary
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0068-Text-Justification
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0069-Sqrt(x)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0070-Climbing-Stairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0071-Simplify-Path
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0072-Edit-Distance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0073-Set-Matrix-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0074-Search-a-2D-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0075-Sort-Colors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0076-Minimum-Window-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0077-Combinations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0078-Subsets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0079-Word-Search
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0080-Remove-Duplicates-from-Sorted-Array-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0081-Search-in-Rotated-Sorted-Array-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0082-Remove-Duplicates-from-Sorted-List-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0083-Remove-Duplicates-from-Sorted-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0084-Largest-Rectangle-in-Histogram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0085-Maximal-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0086-Partition-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0087-Scramble-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0088-Merge-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0089-Gray-Code
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0090-Subsets-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0091-Decode-Ways
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0092-Reverse-Linked-List-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0093-Restore-IP-Addresses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0094-Binary-Tree-Inorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0095-Unique-Binary-Search-Trees-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0096-Unique-Binary-Search-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0097-Interleaving-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0098-Validate-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0099-Recover-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0100-Same-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0101-Symmetric-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0102-Binary-Tree-Level-Order-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0103-Binary-Tree-Zigzag-Level-Order-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0104-Maximum-Depth-of-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0105-Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0106-Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0107-Binary-Tree-Level-Order-Traversal-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0108-Convert-Sorted-Array-to-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0109-Convert-Sorted-List-to-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0110-Balanced-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0111-Minimum-Depth-of-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0112-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0113-Path-Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0114-Flatten-Binary-Tree-to-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0115-Distinct-Subsequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0116-Populating-Next-Right-Pointers-in-Each-Node
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0117-Populating-Next-Right-Pointers-in-Each-Node-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0118-Pascal's-Triangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0119-Pascal's-Triangle-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0120-Triangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0121-Best-Time-to-Buy-and-Sell-Stock
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0122-Best-Time-to-Buy-and-Sell-Stock-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0123-Best-Time-to-Buy-and-Sell-Stock-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0124-Binary-Tree-Maximum-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0125-Valid-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0126-Word-Ladder-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0127-Word-Ladder
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0128-Longest-Consecutive-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0129-Sum-Root-to-Leaf-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0130-Surrounded-Regions
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0131-Palindrome-Partitioning
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0132-Palindrome-Partitioning-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0133-Clone-Graph
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0134-Gas-Station
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0135-Candy
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0136-Single-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0137-Single-Number-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0138-Copy-List-with-Random-Pointer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0139-Word-Break
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0140-Word-Break-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0141-Linked-List-Cycle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0142-Linked-List-Cycle-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0143-Reorder-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0144-Binary-Tree-Preorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0145-Binary-Tree-Postorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0146-LRU-Cache
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0147-Insertion-Sort-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0148-Sort-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0149-Max-Points-on-a-Line
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0150-Evaluate-Reverse-Polish-Notation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0151-Reverse-Words-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0152-Maximum-Product-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0153-Find-Minimum-in-Rotated-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0154-Find-Minimum-in-Rotated-Sorted-Array-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0155-Min-Stack
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0160-Intersection-of-Two-Linked-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0162-Find-Peak-Element
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0165-Compare-Version-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0166-Fraction-to-Recurring-Decimal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0167-Two-Sum-II-Input-array-is-sorted
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0168-Excel-Sheet-Column-Title
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0169-Majority-Element
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0171-Excel-Sheet-Column-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0172-Factorial-Trailing-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0173-Binary-Search-Tree-Iterator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0174-Dungeon-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0179-Largest-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0187-Repeated-DNA-Sequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0188-Best-Time-to-Buy-and-Sell-Stock-IV
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0189-Rotate-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0190-Reverse-Bits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0191-Number-of-1-Bits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0198-House-Robber
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0199-Binary-Tree-Right-Side-View
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0200-Number-of-Islands
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0201-Bitwise-AND-of-Numbers-Range
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0202-Happy-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0203-Remove-Linked-List-Elements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0204-Count-Primes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0205-Isomorphic-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0206-Reverse-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0207-Course-Schedule
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0208-Implement-Trie-(Prefix-Tree)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0209-Minimum-Size-Subarray-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0210-Course-Schedule-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0211-Add-and-Search-Word-Data-structure-design
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0212-Word-Search-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0213-House-Robber-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0215-Kth-Largest-Element-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0216-Combination-Sum-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0217-Contains-Duplicate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0218-The-Skyline-Problem
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0219-Contains-Duplicate-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0220-Contains-Duplicate-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0221-Maximal-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0222-Count-Complete-Tree-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0223-Rectangle-Area
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0224-Basic-Calculator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0226-Invert-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0228-Summary-Ranges
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0229-Majority-Element-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0230-Kth-Smallest-Element-in-a-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0231-Power-of-Two
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0234-Palindrome-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0235-Lowest-Common-Ancestor-of-a-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0236-Lowest-Common-Ancestor-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0237-Delete-Node-in-a-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0238-Product-of-Array-Except-Self
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0239-Sliding-Window-Maximum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0240-Search-a-2D-Matrix-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0241-Different-Ways-to-Add-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0242-Valid-Anagram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0253-Meeting-Rooms-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0257-Binary-Tree-Paths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0260-Single-Number-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0263-Ugly-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0264-Ugly-Number-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0268-Missing-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0274-H-Index
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0275-H-Index-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0278-First-Bad-Version
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0279-Perfect-Squares
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0283-Move-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0287-Find-the-Duplicate-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0289-Game-of-Life
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0290-Word-Pattern
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0297-Serialize-and-Deserialize-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0300-Longest-Increasing-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0303-Range-Sum-Query-Immutable
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0307-Range-Sum-Query-Mutable
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0309-Best-Time-to-Buy-and-Sel-Stock-with-Cooldown
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0310-Insert-Delete-GetRandom-O(1)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0316-Remove-Duplicate-Letters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0319-Bulb-Switcher
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0322-Coin-Change
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0325-Maximum-Size-Subarray-Sum-Equals-k
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0326-Power-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0328-Odd-Even-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0331-Verify-Preorder-Serialization-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0337-House-Robber-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0341-Flatten-Nested-List-Iterator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0343-Integer-Break
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0344-Reverse-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0345-Reverse-Vowels-of-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0347-Top-K-Frequent-Elements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0349-Intersection-of-Two-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0350-Intersection-of-Two-Arrays-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0352-Data-Stream-as-Disjoint-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0354-Russian-Doll-Envelopes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0365-Water-and-Jug-Problem
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0371-Sum-of-Two-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0377-Combination-Sum-IV
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0384-Shuffle-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0389-Find-the-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0392-Is-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0401-Binary-Watch
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0404-Sum-of-Left-Leaves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0409-Longest-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0416-Partition-Equal-Subset-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0423-Reconstruct-Original-Digits-from-English
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0424-Longest-Repeating-Character-Replacement
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0435-Non-overlapping-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0437-Path-Sum-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0438-Find-All-Anagrams-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0445-Add-Two-Numbers-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0446-Arithmetic-Slices-II-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0447-Number-of-Boomerangs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0450-Delete-Node-in-a-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0451-Sort-Characters-By-Frequency
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0452-Minimum-Number-of-Arrows-to-Burst-Balloons
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0453-Minimum-Moves-to-Equal-Array-Elements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0454-4Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0455-Assign-Cookies
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0458-Poor-Pigs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0459-Repeated-Substring-Pattern
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0462-Minimum-Moves-to-Equal-Array-Elements-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0473-Matchsticks-to-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0474-Ones-and-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0486-Predict-the-Winner
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0492-Construct-the-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0494-Target-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0496-Next-Greater-Element-I
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0503-Next-Greater-Element-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0520-Detect-Capital
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0524-Longest-Word-in-Dictionary-through-Deleting
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0525-Contiguous-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0528-Random-Pick-with-Weight
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0530-Minimum-Absolute-Difference-in-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0543-Diameter-of-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0547-Friend-Circles
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0559-Maximum-Depth-of-N-ary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0560-Subarray-Sum-Equals-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0567-Permutation-in-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0583-Delete-Operation-for-Two-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0587-Erect-the-Fence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0594-Longest-Harmonious-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0605-Can-Place-Flowers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0637-Average-of-Levels-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0650-2-Keys-Keyboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0652-Find-Duplicate-Subtrees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0653-Two-Sum-IV-Input-is-a-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0654-Maximum-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0678-Valid-Parenthesis-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0684-Redundant-Connection
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0687-Longest-Univalue-Path
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0695-Max-Area-of-Island
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0697-Degree-of-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0698-Partition-to-K-Equal-Sum-Subsets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0700-Search-in-a-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0733-Flood-Fill
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0739-Daily-Temperatures
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0742-Closest-Leaf-in-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0776-Toeplitz-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0783-Minimum-Distance-Between-BST-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0788-Rotated-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0790-Domino-and-Tromino-Tiling
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0793-Preimage-Size-of-Factorial-Zeroes-Function
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0795-Number-of-Subarrays-with-Bounded-Maximum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0813-Largest-Sum-of-Averages
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0820-Short-Encoding-of-Words
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0824-Goat-Latin
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0825-Friends-Of-Appropriate-Ages
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0826-Most-Profit-Assigning-Work
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0827-Making-A-Large-Island
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0828-Unique-Letter-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0829-Consecutive-Numbers-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0832-Flipping-an-Image
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0834-Sum-of-Distances-in-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0836-Rectangle-Overlap
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0844-Backspace-String-Compare
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0845-Longest-Mountain-in-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0846-Hand-of-Straights
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0847-Shortest-Path-Visiting-All-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0852-Peak-Index-in-a-Mountain-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0857-Minimum-Cost-to-Hire-K-Workers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0859-Buddy-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0872-Leaf-Similar-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0873-Length-of-Longest-Fibonacci-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0874-Walking-Robot-Simulation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0876-Middle-of-the-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0878-Nth-Magical-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0891-Sum-of-Subsequence-Widths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0892-Surface-Area-of-3D-Shapes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0895-Maximum-Frequency-Stack
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0901-Online-Stock-Span
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0902-Numbers-At-Most-N-Given-Digit-Set
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0904-Fruit-Into-Baskets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0907-Sum-of-Subarray-Minimums
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0914-X-of-a-Kind-in-a-Deck-of-Cards
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0917-Reverse-Only-Letters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0918-Maximum-Sum-Circular-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0919-Complete-Binary-Tree-Inserter
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0920-Number-of-Music-Playlists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0921-Minimum-Add-to-Make-Parentheses-Valid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0922-Sort-Array-By-Parity-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0923-3Sum-With-Multiplicity
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0925-Long-Pressed-Name
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0926-Flip-String-to-Monotone-Increasing
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0927-Three-Equal-Parts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0929-Unique-Email-Addresses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0930-Binary-Subarrays-With-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0931-Minimum-Falling-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0932-Beautiful-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0933-Number-of-Recent-Calls
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0934-Shortest-Bridge
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0935-Knight-Dialer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0936-Stamping-The-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0937-Reorder-Log-Files
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0938-Range-Sum-of-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0939-Minimum-Area-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0940-Distinct-Subsequences-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0941-Valid-Mountain-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0942-DI-String-Match
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0943-Find-the-Shortest-Superstring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0944-Delete-Columns-to-Make-Sorted
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0945-Minimum-Increment-to-Make-Array-Unique
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0946-Validate-Stack-Sequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0947-Most-Stones-Removed-with-Same-Row-or-Column
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0948-Bag-of-Tokens
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0949-Largest-Time-for-Given-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0950-Reveal-Cards-In-Increasing-Order
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0951-Flip-Equivalent-Binary-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0953-Verifying-an-Alien-Dictionary
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0954-Array-of-Doubled-Pairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0955-Delete-Columns-to-Make-Sorted-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0956-Tallest-Billboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0957-Prison-Cells-After-N-Days
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0958-Check-Completeness-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0959-Regions-Cut-By-Slashes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0960-Delete-Columns-to-Make-Sorted-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0961-N-Repeated-Element-in-Size-2N-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0962-Maximum-Width-Ramp
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0963-Minimum-Area-Rectangle-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0965-Univalued-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0966-Vowel-Spellchecker
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0967-Numbers-With-Same-Consecutive-Differences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0969-Pancake-Sorting
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0970-Powerful-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0971-Flip-Binary-Tree-To-Match-Preorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0972-Equal-Rational-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0973-K-Closest-Points-to-Origin
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0974-Subarray-Sums-Divisible-by-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0975-Odd-Even-Jump
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0976-Largest-Perimeter-Triangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0977-Squares-of-a-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0978-Longest-Turbulent-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0979-Distribute-Coins-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0980-Unique-Paths-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0981-Time-Based-Key-Value-Store
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0982-Triples-with-Bitwise-AND-Equal-To-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0983-Minimum-Cost-For-Tickets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0984-String-Without-AAA-or-BBB
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0985-Sum-of-Even-Numbers-After-Queries
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0986-Interval-List-Intersections
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0987-Vertical-Order-Traversal-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0988-Smallest-String-Starting-From-Leaf
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0989-Add-to-Array-Form-of-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0990-Satisfiability-of-Equality-Equations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0991-Broken-Calculator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0992-Subarrays-with-K-Different-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0993-Cousins-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0994-Rotting-Oranges
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0995-Minimum-Number-of-K-Consecutive-Bit-Flips
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0996-Number-of-Squareful-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0997-Find-the-Town-Judge
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0998-Maximum-Binary-Tree-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0999-Available-Captures-for-Rook
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1000-Minimum-Cost-to-Merge-Stones
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1001-Grid-Illumination
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1002-Find-Common-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1003-Check-If-Word-Is-Valid-After-Substitutions
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1004-Max-Consecutive-Ones-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1005-Maximize-Sum-Of-Array-After-K-Negations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1006-Clumsy-Factorial
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1007-Minimum-Domino-Rotations-For-Equal-Row
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1008-Construct-Binary-Search-Tree-from-Preorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1009-Complement-of-Base-10-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1010-Pairs-of-Songs-With-Total-Durations-Divisible-by-60
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1011-Capacity-To-Ship-Packages-Within-D-Days
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1012-Numbers-With-Repeated-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1013-Partition-Array-Into-Three-Parts-With-Equal-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1014-Best-Sightseeing-Pair
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1015-Smallest-Integer-Divisible-by-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1017-Convert-to-Base-2
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1018-Binary-Prefix-Divisible-By-5
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1019-Next-Greater-Node-In-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1020-Number-of-Enclaves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1021-Remove-Outermost-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1022-Sum-of-Root-To-Leaf-Binary-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1023-Camelcase-Matching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1024-Video-Stitching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1025-Divisor-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1026-Maximum-Difference-Between-Node-and-Ancestor
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1027-Longest-Arithmetic-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1033-Moving-Stones-Until-Consecutive
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1034-Coloring-A-Border
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1035-Uncrossed-Lines
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1037-Valid-Boomerang
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1038-Binary-Search-Tree-to-Greater-Sum-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1039-Minimum-Score-Triangulation-of-Polygon
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1041-Robot-Bounded-In-Circle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1042-Flower-Planting-With-No-Adjacent
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1043-Partition-Array-for-Maximum-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1046-Last-Stone-Weight
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1047-Remove-All-Adjacent-Duplicates-In-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1048-Longest-String-Chain
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1049-Last-Stone-Weight-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1051-Height-Checker
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1052-Grumpy-Bookstore-Owner
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1053-Previous-Permutation-With-One-Swap
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1054-Distant-Barcodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1061-Lexicographically-Smallest-Equivalent-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1064-Fixed-Point
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1065-Index-Pairs-of-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1066-Campus-Bikes-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1067-Digit-Count-in-Range
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1071-Greatest-Common-Divisor-of-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1072-Flip-Columns-For-Maximum-Number-of-Equal-Rows
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1073-Adding-Two-Negabinary-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1074-Number-of-Submatrices-That-Sum-to-Target
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1078-Occurrences-After-Bigram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1079-Letter-Tile-Possibilities
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1080-Insufficient-Nodes-in-Root-to-Leaf-Paths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1081-Smallest-Subsequence-of-Distinct-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1085-Sum-of-Digits-in-the-Minimum-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1086-High-Five
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1087-Brace-Expansion
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1089-Duplicate-Zeros
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1090-Largest-Values-From-Labels
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1091-Shortest-Path-in-Binary-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1093-Statistics-from-a-Large-Sample
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1094-Car-Pooling
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1095-Find-in-Mountain-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1096-Brace-Expansion-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1099-Two-Sum-Less-Than-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1100-Find-K-Length-Substrings-With-No-Repeated-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1101-The-Earliest-Moment-When-Everyone-Become-Friends
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1102-Path-With-Maximum-Minimum-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1103-Distribute-Candies-to-People
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1104-Path-In-Zigzag-Labelled-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1105-Filling-Bookcase-Shelves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1106-Parsing-A-Boolean-Expression
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1108-Defanging-an-IP-Address
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1109-Corporate-Flight-Bookings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1110-Delete-Nodes-And-Return-Forest
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1111-Maximum-Nesting-Depth-of-Two-Valid-Parentheses-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1118-Number-of-Days-in-a-Month
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1119-Remove-Vowels-from-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1120-Maximum-Average-Subtree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1121-Divide-Array-Into-Increasing-Sequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1122-Relative-Sort-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1123-Lowest-Common-Ancestor-of-Deepest-Leaves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1124-Longest-Well-Performing-Interval
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1125-Smallest-Sufficient-Team
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1128-Number-of-Equivalent-Domino-Pairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1129-Shortest-Path-with-Alternating-Colors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1130-Minimum-Cost-Tree-From-Leaf-Values
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1131-Maximum-of-Absolute-Value-Expression
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1133-Largest-Unique-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1134-Armstrong-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1135-Connecting-Cities-With-Minimum-Cost
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1136-Parallel-Courses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1137-N-th-Tribonacci-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1138-Alphabet-Board-Path
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1139-Largest-1-Bordered-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1140-Stone-Game-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1143-Longest-Common-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1144-Decrease-Elements-To-Make-Array-Zigzag
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1145-Binary-Tree-Coloring-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1146-Snapshot-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1147-Longest-Chunked-Palindrome-Decomposition
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1150-Check-If-a-Number-Is-Majority-Element-in-a-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1151-Minimum-Swaps-to-Group-All-1's-Together
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1152-Analyze-User-Website-Visit-Pattern
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1153-String-Transforms-Into-Another-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1154-Day-of-the-Year
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1155-Number-of-Dice-Rolls-With-Target-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1156-Swap-For-Longest-Repeated-Character-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1157-Online-Majority-Element-In-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1160-Find-Words-That-Can-Be-Formed-by-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1161-Maximum-Level-Sum-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1162-As-Far-from-Land-as-Possible
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1165-Single-Row-Keyboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1166-Design-File-System
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1167-Minimum-Cost-to-Connect-Sticks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1168-Optimize-Water-Distribution-in-a-Village
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1169-Invalid-Transactions
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1170-Compare-Strings-by-Frequency-of-the-Smallest-Character
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1171-Remove-Zero-Sum-Consecutive-Nodes-from-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1172-Dinner-Plate-Stacks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1175-Prime-Arrangements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1176-Diet-Plan-Performance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1184-Distance-Between-Bus-Stops
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1185-Day-of-the-Week
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1186-Maximum-Subarray-Sum-with-One-Deletion
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1187-Make-Array-Strictly-Increasing
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1189-Maximum-Number-of-Balloons
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1190-Reverse-Substrings-Between-Each-Pair-of-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1191-K-Concatenation-Maximum-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1192-Critical-Connections-in-a-Network
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1196-How-Many-Apples-Can-You-Put-into-the-Basket
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1197-Minimum-Knight-Moves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1198-Find-Smallest-Common-Element-in-All-Rows
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1199-Minimum-Time-to-Build-Blocks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1200-Minimum-Absolute-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1201-Ugly-Number-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1202-Smallest-String-With-Swaps
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1207-Unique-Number-of-Occurrences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1208-Get-Equal-Substrings-Within-Budget
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1209-Remove-All-Adjacent-Duplicates-in-String-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1210-Minimum-Moves-to-Reach-Target-with-Rotations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1213-Intersection-of-Three-Sorted-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1214-Two-Sum-BSTs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1215-Stepping-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1216-Valid-Palindrome-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1217-Play-with-Chips
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1218-Longest-Arithmetic-Subsequence-of-Given-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1219-Path-with-Maximum-Gold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1220-Count-Vowels-Permutation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1221-Split-a-String-in-Balanced-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1222-Queens-That-Can-Attack-the-King
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1223-Dice-Roll-Simulation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1224-Maximum-Equal-Frequency
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1228-Missing-Number-In-Arithmetic-Progression
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1229-Meeting-Scheduler
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1230-Toss-Strange-Coins
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1231-Divide-Chocolate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1232-Check-If-It-Is-a-Straight-Line
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1233-Remove-Sub-Folders-from-the-Filesystem
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1234-Replace-the-Substring-for-Balanced-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1235-Maximum-Profit-in-Job-Scheduling
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1237-Find-Positive-Integer-Solution-for-a-Given-Equation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1238-Circular-Permutation-in-Binary-Representation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1239-Maximum-Length-of-a-Concatenated-String-with-Unique-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1240-Tiling-a-Rectangle-with-the-Fewest-Squares
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1243-Array-Transformation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1244-Design-A-Leaderboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1245-Tree-Diameter
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1246-Palindrome-Removal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1247-Minimum-Swaps-to-Make-Strings-Equal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1248-Count-Number-of-Nice-Subarrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1249-Minimum-Remove-to-Make-Valid-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1250-Check-If-It-Is-a-Good-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1252-Cells-with-Odd-Values-in-a-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1253-Reconstruct-a-2-Row-Binary-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1254-Number-of-Closed-Islands
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1255-Maximum-Score-Words-Formed-by-Letters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1256-Encode-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1257-Smallest-Common-Region
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1258-Synonymous-Sentences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1259-Handshakes-That-Don't-Cross
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1260-Shift-2D-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1261-Find-Elements-in-a-Contaminated-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1262-Greatest-Sum-Divisible-by-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1263-Minimum-Moves-to-Move-a-Box-to-Their-Target-Location
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1266-Minimum-Time-Visiting-All-Points
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1267-Count-Servers-that-Communicate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1268-Search-Suggestions-System
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1269-Number-of-Ways-to-Stay-in-the-Same-Place-After-Some-Steps
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1271-Hexspeak
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1272-Remove-Interval
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1273-Delete-Tree-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1274-Number-of-Ships-in-a-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1275-Find-Winner-on-a-Tic-Tac-Toe-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1276-Number-of-Burgers-with-No-Waste-of-Ingredients
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1277-Count-Square-Submatrices-with-All-Ones
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1278-Palindrome-Partitioning-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1282-Group-the-People-Given-the-Group-Size-They-Belong-To
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1283-Find-the-Smallest-Divisor-Given-a-Threshold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1284-Minimum-Number-of-Flips-to-Convert-Binary-Matrix-to-Zero-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1286-Iterator-for-Combination
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1287-Element-Appearing-More-Than-25%-In-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1288-Remove-Covered-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1289-Minimum-Falling-Path-Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1290-Convert-Binary-Number-in-a-Linked-List-to-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1291-Sequential-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1292-Maximum-Side-Length-of-a-Square-with-Sum-Less-than-or-Equal-to-Threshold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1293-Shortest-Path-in-a-Grid-with-Obstacles-Elimination
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1295-Find-Numbers-with-Even-Number-of-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1296-Divide-Array-in-Sets-of-K-Consecutive-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1297-Maximum-Number-of-Occurrences-of-a-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1298-Maximum-Candies-You-Can-Get-from-Boxes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1299-Replace-Elements-with-Greatest-Element-on-Right-Side
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1300-Sum-of-Mutated-Array-Closest-to-Target
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1301-Number-of-Paths-with-Max-Score
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1302-Deepest-Leaves-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1304-Find-N-Unique-Integers-Sum-up-to-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1305-All-Elements-in-Two-Binary-Search-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1306-Jump-Game-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1309-Decrypt-String-from-Alphabet-to-Integer-Mapping
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1310-XOR-Queries-of-a-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1311-Get-Watched-Videos-by-Your-Friends
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1313-Decompress-Run-Length-Encoded-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1314-Matrix-Block-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1315-Sum-of-Nodes-with-Even-Valued-Grandparent
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1316-Distinct-Echo-Substrings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1318-Minimum-Flips-to-Make-a-OR-b-Equal-to-c
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1319-Number-of-Operations-to-Make-Network-Connected
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1320-Minimum-Distance-to-Type-a-Word-Using-Two-Fingers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1323-Maximum-69-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1324-Print-Words-Vertically
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1325-Delete-Leaves-With-a-Given-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1326-Minimum-Number-of-Taps-to-Open-to-Water-a-Garden
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1328-Break-a-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1329-Sort-the-Matrix-Diagonally
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1330-Reverse-Subarray-To-Maximize-Array-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1331-Rank-Transform-of-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1332-Remove-Palindromic-Subsequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1333-Filter-Restaurants-by-Vegan-Friendly,-Price-and-Distance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1334-Find-the-City-With-the-Smallest-Number-of-Neighbors-at-a-Threshold-Distance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1335-Minimum-Difficulty-of-a-Job-Schedule
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1337-The-K-Weakest-Rows-in-a-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1338-Reduce-Array-Size-to-The-Half
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1339-Maximum-Product-of-Splitted-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1340-Jump-Game-V
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1342-Number-of-Steps-to-Reduce-a-Number-to-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1343-Number-of-Sub-arrays-of-Size-K-and-Average-Greater-than-or-Equal-to-Threshold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1344-Angle-Between-Hands-of-a-Clock
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1345-Jump-Game-IV
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1346-Check-If-N-and-Its-Double-Exist
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1347-Minimum-Number-of-Steps-to-Make-Two-Strings-Anagram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1348-Tweet-Counts-Per-Frequency
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1349-Maximum-Students-Taking-Exam
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1351-Count-Negative-Numbers-in-a-Sorted-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1352-Product-of-the-Last-K-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1353-Maximum-Number-of-Events-That-Can-Be-Attended
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1354-Construct-Target-Array-With-Multiple-Sums
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1356-Sort-Integers-by-The-Number-of-1-Bits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1357-Apply-Discount-Every-n-Orders
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1358-Number-of-Substrings-Containing-All-Three-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1359-Count-All-Valid-Pickup-and-Delivery-Options
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1360-Number-of-Days-Between-Two-Dates
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1361-Validate-Binary-Tree-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1362-Closest-Divisors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1363-Largest-Multiple-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1366-Rank-Teams-by-Votes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1367-Linked-List-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1368-Minimum-Cost-to-Make-at-Least-One-Valid-Path-in-a-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1370-Increasing-Decreasing-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1371-Find-the-Longest-Substring-Containing-Vowels-in-Even-Counts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1372-Longest-ZigZag-Path-in-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1373-Maximum-Sum-BST-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1374-Generate-a-String-With-Characters-That-Have-Odd-Counts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1375-Bulb-Switcher-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1376-Time-Needed-to-Inform-All-Employees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1377-Frog-Position-After-T-Seconds
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1380-Lucky-Numbers-in-a-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1381-Design-a-Stack-With-Increment-Operation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1382-Balance-a-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1383-Maximum-Performance-of-a-Team
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1385-Find-the-Distance-Value-Between-Two-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1386-Cinema-Seat-Allocation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1387-Sort-Integers-by-The-Power-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1388-Pizza-With-3n-Slices
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1389-Create-Target-Array-in-the-Given-Order
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1390-Four-Divisors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1391-Check-if-There-is-a-Valid-Path-in-a-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1392-Longest-Happy-Prefix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1394-Find-Lucky-Integer-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1395-Count-Number-of-Teams
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1396-Design-Underground-System
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1397-Find-All-Good-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1399-Count-Largest-Group
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1400-Construct-K-Palindrome-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1401-Circle-and-Rectangle-Overlapping
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1402-Reducing-Dishes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1403-Minimum-Subsequence-in-Non-Increasing-Order
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1404-Number-of-Steps-to-Reduce-a-Number-in-Binary-Representation-to-One
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1405-Longest-Happy-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1406-Stone-Game-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1408-String-Matching-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1409-Queries-on-a-Permutation-With-Key
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1410-HTML-Entity-Parser
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1411-Number-of-Ways-to-Paint-N×3-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1414-Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1415-The-k-th-Lexicographical-String-of-All-Happy-Strings-of-Length-n
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1416-Restore-The-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1417-Reformat-The-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1418-Display-Table-of-Food-Orders-in-a-Restaurant
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1419-Minimum-Number-of-Frogs-Croaking
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1420-Build-Array-Where-You-Can-Find-The-Maximum-Exactly-K-Comparisons
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1422-Maximum-Score-After-Splitting-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1423-Maximum-Points-You-Can-Obtain-from-Cards
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1424-Diagonal-Traverse-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1425-Constrained-Subsequence-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1431-Kids-With-the-Greatest-Number-of-Candies
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1432-Max-Difference-You-Can-Get-From-Changing-an-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1433-Check-If-a-String-Can-Break-Another-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1434-Number-of-Ways-to-Wear-Different-Hats-to-Each-Other
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1436-Destination-City
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1437-Check-If-All-1's-Are-at-Least-Length-K-Places-Away
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1438-Longest-Continuous-Subarray-With-Absolute-Diff-Less-Than-or-Equal-to-Limit
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1439-Find-the-Kth-Smallest-Sum-of-a-Matrix-With-Sorted-Rows
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1441-Build-an-Array-With-Stack-Operations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1442-Count-Triplets-That-Can-Form-Two-Arrays-of-Equal-XOR
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1443-Minimum-Time-to-Collect-All-Apples-in-a-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1444-Number-of-Ways-of-Cutting-a-Pizza
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1470-Shuffle-the-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1472-Design-Browser-History
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1523-Count-Odd-Numbers-in-an-Interval-Range
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1546-Maximum-Number-of-Non-Overlapping-Subarrays-With-Sum-Equals-Target
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1574-Shortest-Subarray-To-Be-Removed-To-Make-Array-Sorted
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1604-Alert-Using-Same-Key-Card-Three-or-More-Times-in-a-One-Hour-Period
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1616-Split-Two-Strings-to-Make-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1626-Best-Team-With-No-Conflicts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1657-Determine-if-Two-Strings-Are-Close
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1658-Minimum-Operations-to-Reduce-X-to-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1664-Ways-to-Make-a-Fair-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1669-Merge-In-Between-Linked-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1673-Find-the-Most-Competitive-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1691-Maximum-Height-by-Stacking-Cuboids
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1704-Determine-if-String-Halves-Are-Alike
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1732-Find-the-Highest-Altitude
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1739-Building-Boxes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1742-Maximum-Number-of-Balls-in-a-Box
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1750-Minimum-Length-of-String-After-Deleting-Similar-Ends
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1752-Check-if-Array-Is-Sorted-and-Rotated
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1754-Largest-Merge-Of-Two-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1758-Minimum-Changes-To-Make-Alternating-Binary-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1759-Count-Number-of-Homogenous-Substrings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1779-Find-Nearest-Point-That-Has-the-Same-X-or-Y-Coordinate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1780-Check-if-Number-is-a-Sum-of-Powers-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1781-Sum-of-Beauty-of-All-Substrings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1796-Second-Largest-Digit-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1798-Maximum-Number-of-Consecutive-Values-You-Can-Make
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1801-Number-of-Orders-in-the-Backlog
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1802-Maximum-Value-at-a-Given-Index-in-a-Bounded-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1805-Number-of-Different-Integers-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1806-Minimum-Number-of-Operations-to-Reinitialize-a-Permutation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1807-Evaluate-the-Bracket-Pairs-of-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1812-Determine-Color-of-a-Chessboard-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1813-Sentence-Similarity-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1814-Count-Nice-Pairs-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1819-Number-of-Different-Subsequences-GCDs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1827-Minimum-Operations-to-Make-the-Array-Increasing
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1832-Check-if-the-Sentence-is-Pangram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1833-Maximum-Ice-Cream-Bars
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1834-Single-Threaded-CPU
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1926-Nearest-Exit-from-Entrance-in-Maze
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1962-Remove-Stones-to-Minimize-the-Total
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2011-Final-Value-of-Variable-After-Performing-Operations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2027-Minimum-Moves-to-Convert-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2032-Two-Out-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2037-Minimum-Number-of-Moves-to-Seat-Everyone
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2042-Check-if-Numbers-Are-Ascending-in-a-Sentence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2180-Count-Integers-With-Even-Digit-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2185-Counting-Words-With-a-Given-Prefix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2225-Find-Players-With-Zero-or-One-Losses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2244-Minimum-Rounds-to-Complete-All-Tasks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2256-Minimum-Average-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2279-Maximum-Bags-With-Full-Capacity-of-Rocks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2287-Rearrange-Characters-to-Make-Target-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2293-Min-Max-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2315-Count-Asterisks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2319-Check-if-Matrix-Is-X-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2325-Decode-the-Message
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2331-Evaluate-Boolean-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2341-Maximum-Number-of-Pairs-in-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2347-Best-Poker-Hand
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2351-First-Letter-to-Appear-Twice
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2357-Make-Array-Zero-by-Subtracting-Equal-Amounts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2389-Longest-Subsequence-With-Limited-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2395-Find-Subarrays-With-Equal-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2427-Number-of-Common-Factors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2439-Minimize-Maximum-of-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2469-Convert-the-Temperature
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2470-Number-of-Subarrays-With-LCM-Equal-to-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2471-Minimum-Number-of-Operations-to-Sort-a-Binary-Tree-by-Level
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2477-Minimum-Fuel-Cost-to-Report-to-the-Capital
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2549-Count-Distinct-Numbers-on-Board
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2550-Count-Collisions-of-Monkeys-on-a-Polygon
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2551-Put-Marbles-in-Bags
ENVIRO.END
2025-02-06 17:00:40 DEBUG AbstractCustomController:299 - [JavaFX Application Thread] Updating the next window (Choose UUTs)
2025-02-06 17:00:40 DEBUG AbstractCustomController:300 - [JavaFX Application Thread] Update done!
2025-02-06 17:00:40 DEBUG ChooseUUTController:383 - [JavaFX Application Thread] Update Choose UUT
2025-02-06 17:00:40 DEBUG ChooseUUTController:390 - [JavaFX Application Thread] Deleted the existing unit names in GUI
2025-02-06 17:00:40 DEBUG ChooseUUTController:393 - [JavaFX Application Thread] Adding new unit names to unit names section
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0001-Two-Sum
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0002-Add-Two-Numbers
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0003-Longest-Substring-Without-Repeating-Characters
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0004-Median-of-Two-Sorted-Arrays
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0005-Longest-Palindromic-Substring
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0006-ZigZag-Conversion
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0007-Reverse-Integer
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0008-String-to-Integer-(atoi)
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0009-Palindrome-Number
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0010-Regular-Expression-Matching
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0011-Container-With-Most-Water
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0012-Integer-to-Roman
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0013-Roman-to-Integer
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0014-Longest-Common-Prefix
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0015-3Sum
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0016-3Sum-Closest
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0017-Letter-Combinations-of-a-Phone-Number
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0018-4Sum
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0019-Remove-Nth-Node-From-End-of-List
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0020-Valid-Parentheses
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0021-Merge-Two-Sorted-Lists
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0022-Generate-Parentheses
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0023-Merge-k-Sorted-Lists
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0024-Swap-Nodes-in-Pairs
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0025-Reverse-Nodes-in-k-Group
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0026-Remove-Duplicates-from-Sorted-Array
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0027-Remove-Element
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0028-Implement-strStr()
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0029-Divide-Two-Integers
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0030-Substring-with-Concatenation-of-All-Words
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0031-Next-Permutation
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0032-Longest-Valid-Parentheses
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0033-Search-in-Rotated-Sorted-Array
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0034-Find-First-and-Last-Position-of-Element-in-Sorted-Array
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0035-Search-Insert-Position
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0036-Valid-Sudoku
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0037-Sudoku-Solver
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0038-Count-and-Say
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0039-Combination-Sum
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0040-Combination-Sum-II
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0041-First-Missing-Positive
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0042-Trapping-Rain-Water
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0043-Multiply-Strings
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0044-Wildcard-Matching
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0045-Jump-Game-II
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0046-Permutations
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0047-Permutations-II
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0048-Rotate-Image
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0049-Group-Anagrams
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0050-Pow(x,n)
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0051-N-Queens
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0052-N-Queens-II
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0053-Maximum-Subarray
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0054-Spiral-Matrix
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0055-Jump-Game
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0056-Merge-Intervals
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0057-Insert-Interval
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0058-Length-of-Last-Word
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0059-Spiral-Matrix-II
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0060-Permutation-Sequence
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0061-Rotate-List
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0062-Unique-Paths
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0063-Unique-Paths-II
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0064-Minimum-Path-Sum
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0065-Valid-Number
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0066-Plus-One
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0067-Add-Binary
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0068-Text-Justification
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0069-Sqrt(x)
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0070-Climbing-Stairs
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0071-Simplify-Path
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0072-Edit-Distance
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0073-Set-Matrix-Zeroes
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0074-Search-a-2D-Matrix
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0075-Sort-Colors
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0076-Minimum-Window-Substring
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0077-Combinations
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0078-Subsets
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0079-Word-Search
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0080-Remove-Duplicates-from-Sorted-Array-II
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0081-Search-in-Rotated-Sorted-Array-II
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0082-Remove-Duplicates-from-Sorted-List-II
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0083-Remove-Duplicates-from-Sorted-List
2025-02-06 17:00:40 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0084-Largest-Rectangle-in-Histogram
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0085-Maximal-Rectangle
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0086-Partition-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0087-Scramble-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0088-Merge-Sorted-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0089-Gray-Code
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0090-Subsets-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0091-Decode-Ways
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0092-Reverse-Linked-List-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0093-Restore-IP-Addresses
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0094-Binary-Tree-Inorder-Traversal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0095-Unique-Binary-Search-Trees-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0096-Unique-Binary-Search-Trees
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0097-Interleaving-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0098-Validate-Binary-Search-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0099-Recover-Binary-Search-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0100-Same-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0101-Symmetric-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0102-Binary-Tree-Level-Order-Traversal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0103-Binary-Tree-Zigzag-Level-Order-Traversal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0104-Maximum-Depth-of-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0105-Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0106-Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0107-Binary-Tree-Level-Order-Traversal-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0108-Convert-Sorted-Array-to-Binary-Search-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0109-Convert-Sorted-List-to-Binary-Search-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0110-Balanced-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0111-Minimum-Depth-of-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0112-Path-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0113-Path-Sum-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0114-Flatten-Binary-Tree-to-Linked-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0115-Distinct-Subsequences
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0116-Populating-Next-Right-Pointers-in-Each-Node
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0117-Populating-Next-Right-Pointers-in-Each-Node-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0118-Pascal's-Triangle
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0119-Pascal's-Triangle-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0120-Triangle
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0121-Best-Time-to-Buy-and-Sell-Stock
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0122-Best-Time-to-Buy-and-Sell-Stock-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0123-Best-Time-to-Buy-and-Sell-Stock-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0124-Binary-Tree-Maximum-Path-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0125-Valid-Palindrome
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0126-Word-Ladder-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0127-Word-Ladder
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0128-Longest-Consecutive-Sequence
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0129-Sum-Root-to-Leaf-Numbers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0130-Surrounded-Regions
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0131-Palindrome-Partitioning
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0132-Palindrome-Partitioning-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0133-Clone-Graph
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0134-Gas-Station
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0135-Candy
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0136-Single-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0137-Single-Number-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0138-Copy-List-with-Random-Pointer
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0139-Word-Break
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0140-Word-Break-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0141-Linked-List-Cycle
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0142-Linked-List-Cycle-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0143-Reorder-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0144-Binary-Tree-Preorder-Traversal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0145-Binary-Tree-Postorder-Traversal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0146-LRU-Cache
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0147-Insertion-Sort-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0148-Sort-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0149-Max-Points-on-a-Line
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0150-Evaluate-Reverse-Polish-Notation
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0151-Reverse-Words-in-a-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0152-Maximum-Product-Subarray
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0153-Find-Minimum-in-Rotated-Sorted-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0154-Find-Minimum-in-Rotated-Sorted-Array-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0155-Min-Stack
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0160-Intersection-of-Two-Linked-Lists
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0162-Find-Peak-Element
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0165-Compare-Version-Numbers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0166-Fraction-to-Recurring-Decimal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0167-Two-Sum-II-Input-array-is-sorted
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0168-Excel-Sheet-Column-Title
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0169-Majority-Element
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0171-Excel-Sheet-Column-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0172-Factorial-Trailing-Zeroes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0173-Binary-Search-Tree-Iterator
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0174-Dungeon-Game
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0179-Largest-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0187-Repeated-DNA-Sequences
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0188-Best-Time-to-Buy-and-Sell-Stock-IV
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0189-Rotate-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0190-Reverse-Bits
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0191-Number-of-1-Bits
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0198-House-Robber
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0199-Binary-Tree-Right-Side-View
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0200-Number-of-Islands
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0201-Bitwise-AND-of-Numbers-Range
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0202-Happy-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0203-Remove-Linked-List-Elements
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0204-Count-Primes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0205-Isomorphic-Strings
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0206-Reverse-Linked-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0207-Course-Schedule
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0208-Implement-Trie-(Prefix-Tree)
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0209-Minimum-Size-Subarray-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0210-Course-Schedule-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0211-Add-and-Search-Word-Data-structure-design
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0212-Word-Search-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0213-House-Robber-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0215-Kth-Largest-Element-in-an-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0216-Combination-Sum-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0217-Contains-Duplicate
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0218-The-Skyline-Problem
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0219-Contains-Duplicate-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0220-Contains-Duplicate-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0221-Maximal-Square
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0222-Count-Complete-Tree-Nodes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0223-Rectangle-Area
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0224-Basic-Calculator
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0226-Invert-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0228-Summary-Ranges
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0229-Majority-Element-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0230-Kth-Smallest-Element-in-a-BST
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0231-Power-of-Two
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0234-Palindrome-Linked-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0235-Lowest-Common-Ancestor-of-a-Binary-Search-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0236-Lowest-Common-Ancestor-of-a-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0237-Delete-Node-in-a-Linked-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0238-Product-of-Array-Except-Self
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0239-Sliding-Window-Maximum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0240-Search-a-2D-Matrix-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0241-Different-Ways-to-Add-Parentheses
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0242-Valid-Anagram
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0253-Meeting-Rooms-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0257-Binary-Tree-Paths
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0260-Single-Number-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0263-Ugly-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0264-Ugly-Number-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0268-Missing-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0274-H-Index
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0275-H-Index-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0278-First-Bad-Version
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0279-Perfect-Squares
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0283-Move-Zeroes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0287-Find-the-Duplicate-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0289-Game-of-Life
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0290-Word-Pattern
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0297-Serialize-and-Deserialize-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0300-Longest-Increasing-Subsequence
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0303-Range-Sum-Query-Immutable
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0307-Range-Sum-Query-Mutable
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0309-Best-Time-to-Buy-and-Sel-Stock-with-Cooldown
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0310-Insert-Delete-GetRandom-O(1)
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0316-Remove-Duplicate-Letters
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0319-Bulb-Switcher
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0322-Coin-Change
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0325-Maximum-Size-Subarray-Sum-Equals-k
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0326-Power-of-Three
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0328-Odd-Even-Linked-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0331-Verify-Preorder-Serialization-of-a-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0337-House-Robber-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0341-Flatten-Nested-List-Iterator
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0343-Integer-Break
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0344-Reverse-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0345-Reverse-Vowels-of-a-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0347-Top-K-Frequent-Elements
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0349-Intersection-of-Two-Arrays
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0350-Intersection-of-Two-Arrays-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0352-Data-Stream-as-Disjoint-Intervals
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0354-Russian-Doll-Envelopes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0365-Water-and-Jug-Problem
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0371-Sum-of-Two-Integers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0377-Combination-Sum-IV
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0384-Shuffle-an-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0389-Find-the-Difference
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0392-Is-Subsequence
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0401-Binary-Watch
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0404-Sum-of-Left-Leaves
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0409-Longest-Palindrome
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0416-Partition-Equal-Subset-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0423-Reconstruct-Original-Digits-from-English
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0424-Longest-Repeating-Character-Replacement
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0435-Non-overlapping-Intervals
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0437-Path-Sum-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0438-Find-All-Anagrams-in-a-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0445-Add-Two-Numbers-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0446-Arithmetic-Slices-II-Subsequence
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0447-Number-of-Boomerangs
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0450-Delete-Node-in-a-BST
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0451-Sort-Characters-By-Frequency
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0452-Minimum-Number-of-Arrows-to-Burst-Balloons
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0453-Minimum-Moves-to-Equal-Array-Elements
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0454-4Sum-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0455-Assign-Cookies
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0458-Poor-Pigs
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0459-Repeated-Substring-Pattern
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0462-Minimum-Moves-to-Equal-Array-Elements-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0473-Matchsticks-to-Square
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0474-Ones-and-Zeroes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0486-Predict-the-Winner
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0492-Construct-the-Rectangle
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0494-Target-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0496-Next-Greater-Element-I
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0503-Next-Greater-Element-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0520-Detect-Capital
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0524-Longest-Word-in-Dictionary-through-Deleting
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0525-Contiguous-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0528-Random-Pick-with-Weight
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0530-Minimum-Absolute-Difference-in-BST
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0543-Diameter-of-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0547-Friend-Circles
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0559-Maximum-Depth-of-N-ary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0560-Subarray-Sum-Equals-K
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0567-Permutation-in-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0583-Delete-Operation-for-Two-Strings
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0587-Erect-the-Fence
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0594-Longest-Harmonious-Subsequence
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0605-Can-Place-Flowers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0637-Average-of-Levels-in-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0650-2-Keys-Keyboard
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0652-Find-Duplicate-Subtrees
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0653-Two-Sum-IV-Input-is-a-BST
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0654-Maximum-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0678-Valid-Parenthesis-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0684-Redundant-Connection
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0687-Longest-Univalue-Path
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0695-Max-Area-of-Island
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0697-Degree-of-an-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0698-Partition-to-K-Equal-Sum-Subsets
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0700-Search-in-a-Binary-Search-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0733-Flood-Fill
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0739-Daily-Temperatures
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0742-Closest-Leaf-in-a-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0776-Toeplitz-Matrix
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0783-Minimum-Distance-Between-BST-Nodes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0788-Rotated-Digits
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0790-Domino-and-Tromino-Tiling
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0793-Preimage-Size-of-Factorial-Zeroes-Function
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0795-Number-of-Subarrays-with-Bounded-Maximum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0813-Largest-Sum-of-Averages
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0820-Short-Encoding-of-Words
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0824-Goat-Latin
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0825-Friends-Of-Appropriate-Ages
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0826-Most-Profit-Assigning-Work
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0827-Making-A-Large-Island
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0828-Unique-Letter-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0829-Consecutive-Numbers-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0832-Flipping-an-Image
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0834-Sum-of-Distances-in-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0836-Rectangle-Overlap
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0844-Backspace-String-Compare
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0845-Longest-Mountain-in-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0846-Hand-of-Straights
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0847-Shortest-Path-Visiting-All-Nodes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0852-Peak-Index-in-a-Mountain-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0857-Minimum-Cost-to-Hire-K-Workers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0859-Buddy-Strings
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0872-Leaf-Similar-Trees
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0873-Length-of-Longest-Fibonacci-Subsequence
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0874-Walking-Robot-Simulation
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0876-Middle-of-the-Linked-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0878-Nth-Magical-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0891-Sum-of-Subsequence-Widths
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0892-Surface-Area-of-3D-Shapes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0895-Maximum-Frequency-Stack
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0901-Online-Stock-Span
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0902-Numbers-At-Most-N-Given-Digit-Set
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0904-Fruit-Into-Baskets
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0907-Sum-of-Subarray-Minimums
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0914-X-of-a-Kind-in-a-Deck-of-Cards
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0917-Reverse-Only-Letters
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0918-Maximum-Sum-Circular-Subarray
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0919-Complete-Binary-Tree-Inserter
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0920-Number-of-Music-Playlists
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0921-Minimum-Add-to-Make-Parentheses-Valid
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0922-Sort-Array-By-Parity-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0923-3Sum-With-Multiplicity
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0925-Long-Pressed-Name
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0926-Flip-String-to-Monotone-Increasing
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0927-Three-Equal-Parts
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0929-Unique-Email-Addresses
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0930-Binary-Subarrays-With-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0931-Minimum-Falling-Path-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0932-Beautiful-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0933-Number-of-Recent-Calls
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0934-Shortest-Bridge
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0935-Knight-Dialer
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0936-Stamping-The-Sequence
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0937-Reorder-Log-Files
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0938-Range-Sum-of-BST
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0939-Minimum-Area-Rectangle
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0940-Distinct-Subsequences-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0941-Valid-Mountain-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0942-DI-String-Match
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0943-Find-the-Shortest-Superstring
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0944-Delete-Columns-to-Make-Sorted
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0945-Minimum-Increment-to-Make-Array-Unique
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0946-Validate-Stack-Sequences
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0947-Most-Stones-Removed-with-Same-Row-or-Column
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0948-Bag-of-Tokens
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0949-Largest-Time-for-Given-Digits
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0950-Reveal-Cards-In-Increasing-Order
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0951-Flip-Equivalent-Binary-Trees
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0953-Verifying-an-Alien-Dictionary
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0954-Array-of-Doubled-Pairs
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0955-Delete-Columns-to-Make-Sorted-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0956-Tallest-Billboard
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0957-Prison-Cells-After-N-Days
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0958-Check-Completeness-of-a-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0959-Regions-Cut-By-Slashes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0960-Delete-Columns-to-Make-Sorted-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0961-N-Repeated-Element-in-Size-2N-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0962-Maximum-Width-Ramp
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0963-Minimum-Area-Rectangle-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0965-Univalued-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0966-Vowel-Spellchecker
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0967-Numbers-With-Same-Consecutive-Differences
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0969-Pancake-Sorting
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0970-Powerful-Integers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0971-Flip-Binary-Tree-To-Match-Preorder-Traversal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0972-Equal-Rational-Numbers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0973-K-Closest-Points-to-Origin
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0974-Subarray-Sums-Divisible-by-K
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0975-Odd-Even-Jump
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0976-Largest-Perimeter-Triangle
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0977-Squares-of-a-Sorted-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0978-Longest-Turbulent-Subarray
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0979-Distribute-Coins-in-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0980-Unique-Paths-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0981-Time-Based-Key-Value-Store
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0982-Triples-with-Bitwise-AND-Equal-To-Zero
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0983-Minimum-Cost-For-Tickets
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0984-String-Without-AAA-or-BBB
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0985-Sum-of-Even-Numbers-After-Queries
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0986-Interval-List-Intersections
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0987-Vertical-Order-Traversal-of-a-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0988-Smallest-String-Starting-From-Leaf
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0989-Add-to-Array-Form-of-Integer
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0990-Satisfiability-of-Equality-Equations
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0991-Broken-Calculator
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0992-Subarrays-with-K-Different-Integers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0993-Cousins-in-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0994-Rotting-Oranges
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0995-Minimum-Number-of-K-Consecutive-Bit-Flips
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0996-Number-of-Squareful-Arrays
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0997-Find-the-Town-Judge
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0998-Maximum-Binary-Tree-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0999-Available-Captures-for-Rook
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1000-Minimum-Cost-to-Merge-Stones
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1001-Grid-Illumination
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1002-Find-Common-Characters
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1003-Check-If-Word-Is-Valid-After-Substitutions
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1004-Max-Consecutive-Ones-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1005-Maximize-Sum-Of-Array-After-K-Negations
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1006-Clumsy-Factorial
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1007-Minimum-Domino-Rotations-For-Equal-Row
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1008-Construct-Binary-Search-Tree-from-Preorder-Traversal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1009-Complement-of-Base-10-Integer
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1010-Pairs-of-Songs-With-Total-Durations-Divisible-by-60
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1011-Capacity-To-Ship-Packages-Within-D-Days
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1012-Numbers-With-Repeated-Digits
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1013-Partition-Array-Into-Three-Parts-With-Equal-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1014-Best-Sightseeing-Pair
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1015-Smallest-Integer-Divisible-by-K
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1017-Convert-to-Base-2
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1018-Binary-Prefix-Divisible-By-5
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1019-Next-Greater-Node-In-Linked-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1020-Number-of-Enclaves
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1021-Remove-Outermost-Parentheses
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1022-Sum-of-Root-To-Leaf-Binary-Numbers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1023-Camelcase-Matching
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1024-Video-Stitching
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1025-Divisor-Game
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1026-Maximum-Difference-Between-Node-and-Ancestor
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1027-Longest-Arithmetic-Sequence
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1033-Moving-Stones-Until-Consecutive
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1034-Coloring-A-Border
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1035-Uncrossed-Lines
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1037-Valid-Boomerang
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1038-Binary-Search-Tree-to-Greater-Sum-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1039-Minimum-Score-Triangulation-of-Polygon
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1041-Robot-Bounded-In-Circle
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1042-Flower-Planting-With-No-Adjacent
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1043-Partition-Array-for-Maximum-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1046-Last-Stone-Weight
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1047-Remove-All-Adjacent-Duplicates-In-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1048-Longest-String-Chain
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1049-Last-Stone-Weight-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1051-Height-Checker
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1052-Grumpy-Bookstore-Owner
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1053-Previous-Permutation-With-One-Swap
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1054-Distant-Barcodes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1061-Lexicographically-Smallest-Equivalent-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1064-Fixed-Point
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1065-Index-Pairs-of-a-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1066-Campus-Bikes-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1067-Digit-Count-in-Range
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1071-Greatest-Common-Divisor-of-Strings
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1072-Flip-Columns-For-Maximum-Number-of-Equal-Rows
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1073-Adding-Two-Negabinary-Numbers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1074-Number-of-Submatrices-That-Sum-to-Target
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1078-Occurrences-After-Bigram
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1079-Letter-Tile-Possibilities
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1080-Insufficient-Nodes-in-Root-to-Leaf-Paths
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1081-Smallest-Subsequence-of-Distinct-Characters
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1085-Sum-of-Digits-in-the-Minimum-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1086-High-Five
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1087-Brace-Expansion
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1089-Duplicate-Zeros
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1090-Largest-Values-From-Labels
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1091-Shortest-Path-in-Binary-Matrix
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1093-Statistics-from-a-Large-Sample
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1094-Car-Pooling
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1095-Find-in-Mountain-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1096-Brace-Expansion-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1099-Two-Sum-Less-Than-K
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1100-Find-K-Length-Substrings-With-No-Repeated-Characters
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1101-The-Earliest-Moment-When-Everyone-Become-Friends
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1102-Path-With-Maximum-Minimum-Value
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1103-Distribute-Candies-to-People
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1104-Path-In-Zigzag-Labelled-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1105-Filling-Bookcase-Shelves
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1106-Parsing-A-Boolean-Expression
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1108-Defanging-an-IP-Address
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1109-Corporate-Flight-Bookings
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1110-Delete-Nodes-And-Return-Forest
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1111-Maximum-Nesting-Depth-of-Two-Valid-Parentheses-Strings
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1118-Number-of-Days-in-a-Month
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1119-Remove-Vowels-from-a-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1120-Maximum-Average-Subtree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1121-Divide-Array-Into-Increasing-Sequences
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1122-Relative-Sort-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1123-Lowest-Common-Ancestor-of-Deepest-Leaves
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1124-Longest-Well-Performing-Interval
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1125-Smallest-Sufficient-Team
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1128-Number-of-Equivalent-Domino-Pairs
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1129-Shortest-Path-with-Alternating-Colors
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1130-Minimum-Cost-Tree-From-Leaf-Values
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1131-Maximum-of-Absolute-Value-Expression
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1133-Largest-Unique-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1134-Armstrong-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1135-Connecting-Cities-With-Minimum-Cost
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1136-Parallel-Courses
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1137-N-th-Tribonacci-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1138-Alphabet-Board-Path
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1139-Largest-1-Bordered-Square
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1140-Stone-Game-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1143-Longest-Common-Subsequence
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1144-Decrease-Elements-To-Make-Array-Zigzag
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1145-Binary-Tree-Coloring-Game
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1146-Snapshot-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1147-Longest-Chunked-Palindrome-Decomposition
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1150-Check-If-a-Number-Is-Majority-Element-in-a-Sorted-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1151-Minimum-Swaps-to-Group-All-1's-Together
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1152-Analyze-User-Website-Visit-Pattern
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1153-String-Transforms-Into-Another-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1154-Day-of-the-Year
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1155-Number-of-Dice-Rolls-With-Target-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1156-Swap-For-Longest-Repeated-Character-Substring
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1157-Online-Majority-Element-In-Subarray
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1160-Find-Words-That-Can-Be-Formed-by-Characters
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1161-Maximum-Level-Sum-of-a-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1162-As-Far-from-Land-as-Possible
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1165-Single-Row-Keyboard
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1166-Design-File-System
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1167-Minimum-Cost-to-Connect-Sticks
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1168-Optimize-Water-Distribution-in-a-Village
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1169-Invalid-Transactions
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1170-Compare-Strings-by-Frequency-of-the-Smallest-Character
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1171-Remove-Zero-Sum-Consecutive-Nodes-from-Linked-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1172-Dinner-Plate-Stacks
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1175-Prime-Arrangements
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1176-Diet-Plan-Performance
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1184-Distance-Between-Bus-Stops
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1185-Day-of-the-Week
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1186-Maximum-Subarray-Sum-with-One-Deletion
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1187-Make-Array-Strictly-Increasing
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1189-Maximum-Number-of-Balloons
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1190-Reverse-Substrings-Between-Each-Pair-of-Parentheses
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1191-K-Concatenation-Maximum-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1192-Critical-Connections-in-a-Network
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1196-How-Many-Apples-Can-You-Put-into-the-Basket
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1197-Minimum-Knight-Moves
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1198-Find-Smallest-Common-Element-in-All-Rows
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1199-Minimum-Time-to-Build-Blocks
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1200-Minimum-Absolute-Difference
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1201-Ugly-Number-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1202-Smallest-String-With-Swaps
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1207-Unique-Number-of-Occurrences
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1208-Get-Equal-Substrings-Within-Budget
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1209-Remove-All-Adjacent-Duplicates-in-String-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1210-Minimum-Moves-to-Reach-Target-with-Rotations
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1213-Intersection-of-Three-Sorted-Arrays
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1214-Two-Sum-BSTs
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1215-Stepping-Numbers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1216-Valid-Palindrome-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1217-Play-with-Chips
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1218-Longest-Arithmetic-Subsequence-of-Given-Difference
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1219-Path-with-Maximum-Gold
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1220-Count-Vowels-Permutation
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1221-Split-a-String-in-Balanced-Strings
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1222-Queens-That-Can-Attack-the-King
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1223-Dice-Roll-Simulation
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1224-Maximum-Equal-Frequency
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1228-Missing-Number-In-Arithmetic-Progression
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1229-Meeting-Scheduler
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1230-Toss-Strange-Coins
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1231-Divide-Chocolate
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1232-Check-If-It-Is-a-Straight-Line
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1233-Remove-Sub-Folders-from-the-Filesystem
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1234-Replace-the-Substring-for-Balanced-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1235-Maximum-Profit-in-Job-Scheduling
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1237-Find-Positive-Integer-Solution-for-a-Given-Equation
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1238-Circular-Permutation-in-Binary-Representation
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1239-Maximum-Length-of-a-Concatenated-String-with-Unique-Characters
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1240-Tiling-a-Rectangle-with-the-Fewest-Squares
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1243-Array-Transformation
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1244-Design-A-Leaderboard
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1245-Tree-Diameter
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1246-Palindrome-Removal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1247-Minimum-Swaps-to-Make-Strings-Equal
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1248-Count-Number-of-Nice-Subarrays
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1249-Minimum-Remove-to-Make-Valid-Parentheses
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1250-Check-If-It-Is-a-Good-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1252-Cells-with-Odd-Values-in-a-Matrix
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1253-Reconstruct-a-2-Row-Binary-Matrix
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1254-Number-of-Closed-Islands
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1255-Maximum-Score-Words-Formed-by-Letters
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1256-Encode-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1257-Smallest-Common-Region
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1258-Synonymous-Sentences
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1259-Handshakes-That-Don't-Cross
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1260-Shift-2D-Grid
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1261-Find-Elements-in-a-Contaminated-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1262-Greatest-Sum-Divisible-by-Three
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1263-Minimum-Moves-to-Move-a-Box-to-Their-Target-Location
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1266-Minimum-Time-Visiting-All-Points
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1267-Count-Servers-that-Communicate
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1268-Search-Suggestions-System
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1269-Number-of-Ways-to-Stay-in-the-Same-Place-After-Some-Steps
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1271-Hexspeak
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1272-Remove-Interval
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1273-Delete-Tree-Nodes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1274-Number-of-Ships-in-a-Rectangle
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1275-Find-Winner-on-a-Tic-Tac-Toe-Game
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1276-Number-of-Burgers-with-No-Waste-of-Ingredients
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1277-Count-Square-Submatrices-with-All-Ones
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1278-Palindrome-Partitioning-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1282-Group-the-People-Given-the-Group-Size-They-Belong-To
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1283-Find-the-Smallest-Divisor-Given-a-Threshold
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1284-Minimum-Number-of-Flips-to-Convert-Binary-Matrix-to-Zero-Matrix
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1286-Iterator-for-Combination
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1287-Element-Appearing-More-Than-25%-In-Sorted-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1288-Remove-Covered-Intervals
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1289-Minimum-Falling-Path-Sum-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1290-Convert-Binary-Number-in-a-Linked-List-to-Integer
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1291-Sequential-Digits
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1292-Maximum-Side-Length-of-a-Square-with-Sum-Less-than-or-Equal-to-Threshold
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1293-Shortest-Path-in-a-Grid-with-Obstacles-Elimination
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1295-Find-Numbers-with-Even-Number-of-Digits
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1296-Divide-Array-in-Sets-of-K-Consecutive-Numbers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1297-Maximum-Number-of-Occurrences-of-a-Substring
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1298-Maximum-Candies-You-Can-Get-from-Boxes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1299-Replace-Elements-with-Greatest-Element-on-Right-Side
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1300-Sum-of-Mutated-Array-Closest-to-Target
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1301-Number-of-Paths-with-Max-Score
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1302-Deepest-Leaves-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1304-Find-N-Unique-Integers-Sum-up-to-Zero
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1305-All-Elements-in-Two-Binary-Search-Trees
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1306-Jump-Game-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1309-Decrypt-String-from-Alphabet-to-Integer-Mapping
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1310-XOR-Queries-of-a-Subarray
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1311-Get-Watched-Videos-by-Your-Friends
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1313-Decompress-Run-Length-Encoded-List
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1314-Matrix-Block-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1315-Sum-of-Nodes-with-Even-Valued-Grandparent
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1316-Distinct-Echo-Substrings
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1318-Minimum-Flips-to-Make-a-OR-b-Equal-to-c
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1319-Number-of-Operations-to-Make-Network-Connected
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1320-Minimum-Distance-to-Type-a-Word-Using-Two-Fingers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1323-Maximum-69-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1324-Print-Words-Vertically
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1325-Delete-Leaves-With-a-Given-Value
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1326-Minimum-Number-of-Taps-to-Open-to-Water-a-Garden
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1328-Break-a-Palindrome
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1329-Sort-the-Matrix-Diagonally
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1330-Reverse-Subarray-To-Maximize-Array-Value
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1331-Rank-Transform-of-an-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1332-Remove-Palindromic-Subsequences
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1333-Filter-Restaurants-by-Vegan-Friendly,-Price-and-Distance
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1334-Find-the-City-With-the-Smallest-Number-of-Neighbors-at-a-Threshold-Distance
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1335-Minimum-Difficulty-of-a-Job-Schedule
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1337-The-K-Weakest-Rows-in-a-Matrix
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1338-Reduce-Array-Size-to-The-Half
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1339-Maximum-Product-of-Splitted-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1340-Jump-Game-V
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1342-Number-of-Steps-to-Reduce-a-Number-to-Zero
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1343-Number-of-Sub-arrays-of-Size-K-and-Average-Greater-than-or-Equal-to-Threshold
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1344-Angle-Between-Hands-of-a-Clock
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1345-Jump-Game-IV
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1346-Check-If-N-and-Its-Double-Exist
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1347-Minimum-Number-of-Steps-to-Make-Two-Strings-Anagram
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1348-Tweet-Counts-Per-Frequency
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1349-Maximum-Students-Taking-Exam
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1351-Count-Negative-Numbers-in-a-Sorted-Matrix
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1352-Product-of-the-Last-K-Numbers
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1353-Maximum-Number-of-Events-That-Can-Be-Attended
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1354-Construct-Target-Array-With-Multiple-Sums
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1356-Sort-Integers-by-The-Number-of-1-Bits
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1357-Apply-Discount-Every-n-Orders
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1358-Number-of-Substrings-Containing-All-Three-Characters
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1359-Count-All-Valid-Pickup-and-Delivery-Options
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1360-Number-of-Days-Between-Two-Dates
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1361-Validate-Binary-Tree-Nodes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1362-Closest-Divisors
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1363-Largest-Multiple-of-Three
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1366-Rank-Teams-by-Votes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1367-Linked-List-in-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1368-Minimum-Cost-to-Make-at-Least-One-Valid-Path-in-a-Grid
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1370-Increasing-Decreasing-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1371-Find-the-Longest-Substring-Containing-Vowels-in-Even-Counts
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1372-Longest-ZigZag-Path-in-a-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1373-Maximum-Sum-BST-in-Binary-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1374-Generate-a-String-With-Characters-That-Have-Odd-Counts
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1375-Bulb-Switcher-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1376-Time-Needed-to-Inform-All-Employees
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1377-Frog-Position-After-T-Seconds
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1380-Lucky-Numbers-in-a-Matrix
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1381-Design-a-Stack-With-Increment-Operation
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1382-Balance-a-Binary-Search-Tree
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1383-Maximum-Performance-of-a-Team
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1385-Find-the-Distance-Value-Between-Two-Arrays
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1386-Cinema-Seat-Allocation
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1387-Sort-Integers-by-The-Power-Value
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1388-Pizza-With-3n-Slices
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1389-Create-Target-Array-in-the-Given-Order
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1390-Four-Divisors
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1391-Check-if-There-is-a-Valid-Path-in-a-Grid
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1392-Longest-Happy-Prefix
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1394-Find-Lucky-Integer-in-an-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1395-Count-Number-of-Teams
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1396-Design-Underground-System
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1397-Find-All-Good-Strings
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1399-Count-Largest-Group
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1400-Construct-K-Palindrome-Strings
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1401-Circle-and-Rectangle-Overlapping
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1402-Reducing-Dishes
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1403-Minimum-Subsequence-in-Non-Increasing-Order
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1404-Number-of-Steps-to-Reduce-a-Number-in-Binary-Representation-to-One
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1405-Longest-Happy-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1406-Stone-Game-III
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1408-String-Matching-in-an-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1409-Queries-on-a-Permutation-With-Key
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1410-HTML-Entity-Parser
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1411-Number-of-Ways-to-Paint-N×3-Grid
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1414-Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1415-The-k-th-Lexicographical-String-of-All-Happy-Strings-of-Length-n
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1416-Restore-The-Array
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1417-Reformat-The-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1418-Display-Table-of-Food-Orders-in-a-Restaurant
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1419-Minimum-Number-of-Frogs-Croaking
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1420-Build-Array-Where-You-Can-Find-The-Maximum-Exactly-K-Comparisons
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1422-Maximum-Score-After-Splitting-a-String
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1423-Maximum-Points-You-Can-Obtain-from-Cards
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1424-Diagonal-Traverse-II
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1425-Constrained-Subsequence-Sum
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1431-Kids-With-the-Greatest-Number-of-Candies
2025-02-06 17:00:41 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1432-Max-Difference-You-Can-Get-From-Changing-an-Integer
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1433-Check-If-a-String-Can-Break-Another-String
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1434-Number-of-Ways-to-Wear-Different-Hats-to-Each-Other
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1436-Destination-City
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1437-Check-If-All-1's-Are-at-Least-Length-K-Places-Away
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1438-Longest-Continuous-Subarray-With-Absolute-Diff-Less-Than-or-Equal-to-Limit
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1439-Find-the-Kth-Smallest-Sum-of-a-Matrix-With-Sorted-Rows
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1441-Build-an-Array-With-Stack-Operations
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1442-Count-Triplets-That-Can-Form-Two-Arrays-of-Equal-XOR
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1443-Minimum-Time-to-Collect-All-Apples-in-a-Tree
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1444-Number-of-Ways-of-Cutting-a-Pizza
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1470-Shuffle-the-Array
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1472-Design-Browser-History
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1523-Count-Odd-Numbers-in-an-Interval-Range
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1546-Maximum-Number-of-Non-Overlapping-Subarrays-With-Sum-Equals-Target
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1574-Shortest-Subarray-To-Be-Removed-To-Make-Array-Sorted
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1604-Alert-Using-Same-Key-Card-Three-or-More-Times-in-a-One-Hour-Period
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1616-Split-Two-Strings-to-Make-Palindrome
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1626-Best-Team-With-No-Conflicts
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1657-Determine-if-Two-Strings-Are-Close
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1658-Minimum-Operations-to-Reduce-X-to-Zero
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1664-Ways-to-Make-a-Fair-Array
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1669-Merge-In-Between-Linked-Lists
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1673-Find-the-Most-Competitive-Subsequence
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1691-Maximum-Height-by-Stacking-Cuboids
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1704-Determine-if-String-Halves-Are-Alike
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1732-Find-the-Highest-Altitude
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1739-Building-Boxes
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1742-Maximum-Number-of-Balls-in-a-Box
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1750-Minimum-Length-of-String-After-Deleting-Similar-Ends
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1752-Check-if-Array-Is-Sorted-and-Rotated
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1754-Largest-Merge-Of-Two-Strings
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1758-Minimum-Changes-To-Make-Alternating-Binary-String
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1759-Count-Number-of-Homogenous-Substrings
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1779-Find-Nearest-Point-That-Has-the-Same-X-or-Y-Coordinate
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1780-Check-if-Number-is-a-Sum-of-Powers-of-Three
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1781-Sum-of-Beauty-of-All-Substrings
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1796-Second-Largest-Digit-in-a-String
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1798-Maximum-Number-of-Consecutive-Values-You-Can-Make
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1801-Number-of-Orders-in-the-Backlog
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1802-Maximum-Value-at-a-Given-Index-in-a-Bounded-Array
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1805-Number-of-Different-Integers-in-a-String
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1806-Minimum-Number-of-Operations-to-Reinitialize-a-Permutation
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1807-Evaluate-the-Bracket-Pairs-of-a-String
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1812-Determine-Color-of-a-Chessboard-Square
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1813-Sentence-Similarity-III
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1814-Count-Nice-Pairs-in-an-Array
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1819-Number-of-Different-Subsequences-GCDs
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1827-Minimum-Operations-to-Make-the-Array-Increasing
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1832-Check-if-the-Sentence-is-Pangram
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1833-Maximum-Ice-Cream-Bars
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1834-Single-Threaded-CPU
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1926-Nearest-Exit-from-Entrance-in-Maze
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1962-Remove-Stones-to-Minimize-the-Total
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2011-Final-Value-of-Variable-After-Performing-Operations
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2027-Minimum-Moves-to-Convert-String
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2032-Two-Out-of-Three
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2037-Minimum-Number-of-Moves-to-Seat-Everyone
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2042-Check-if-Numbers-Are-Ascending-in-a-Sentence
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2180-Count-Integers-With-Even-Digit-Sum
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2185-Counting-Words-With-a-Given-Prefix
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2225-Find-Players-With-Zero-or-One-Losses
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2244-Minimum-Rounds-to-Complete-All-Tasks
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2256-Minimum-Average-Difference
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2279-Maximum-Bags-With-Full-Capacity-of-Rocks
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2287-Rearrange-Characters-to-Make-Target-String
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2293-Min-Max-Game
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2315-Count-Asterisks
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2319-Check-if-Matrix-Is-X-Matrix
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2325-Decode-the-Message
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2331-Evaluate-Boolean-Binary-Tree
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2341-Maximum-Number-of-Pairs-in-Array
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2347-Best-Poker-Hand
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2351-First-Letter-to-Appear-Twice
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2357-Make-Array-Zero-by-Subtracting-Equal-Amounts
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2389-Longest-Subsequence-With-Limited-Sum
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2395-Find-Subarrays-With-Equal-Sum
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2427-Number-of-Common-Factors
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2439-Minimize-Maximum-of-Array
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2469-Convert-the-Temperature
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2470-Number-of-Subarrays-With-LCM-Equal-to-K
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2471-Minimum-Number-of-Operations-to-Sort-a-Binary-Tree-by-Level
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2477-Minimum-Fuel-Cost-to-Report-to-the-Capital
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2549-Count-Distinct-Numbers-on-Board
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2550-Count-Collisions-of-Monkeys-on-a-Polygon
2025-02-06 17:00:42 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2551-Put-Marbles-in-Bags
2025-02-06 17:00:43 DEBUG ChooseUUTController:520 - [JavaFX Application Thread] Constructed the physical tree corresponding to the source code files list
2025-02-06 17:00:43 DEBUG ChooseUUTController:744 - [JavaFX Application Thread] There are no EnviroLibraryStubNode
2025-02-06 17:00:43 DEBUG ChooseUUTController:383 - [JavaFX Application Thread] Update Choose UUT
2025-02-06 17:00:43 DEBUG ChooseUUTController:390 - [JavaFX Application Thread] Deleted the existing unit names in GUI
2025-02-06 17:00:43 DEBUG ChooseUUTController:393 - [JavaFX Application Thread] Adding new unit names to unit names section
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0001-Two-Sum
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0002-Add-Two-Numbers
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0003-Longest-Substring-Without-Repeating-Characters
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0004-Median-of-Two-Sorted-Arrays
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0005-Longest-Palindromic-Substring
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0006-ZigZag-Conversion
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0007-Reverse-Integer
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0008-String-to-Integer-(atoi)
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0009-Palindrome-Number
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0010-Regular-Expression-Matching
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0011-Container-With-Most-Water
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0012-Integer-to-Roman
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0013-Roman-to-Integer
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0014-Longest-Common-Prefix
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0015-3Sum
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0016-3Sum-Closest
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0017-Letter-Combinations-of-a-Phone-Number
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0018-4Sum
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0019-Remove-Nth-Node-From-End-of-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0020-Valid-Parentheses
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0021-Merge-Two-Sorted-Lists
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0022-Generate-Parentheses
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0023-Merge-k-Sorted-Lists
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0024-Swap-Nodes-in-Pairs
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0025-Reverse-Nodes-in-k-Group
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0026-Remove-Duplicates-from-Sorted-Array
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0027-Remove-Element
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0028-Implement-strStr()
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0029-Divide-Two-Integers
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0030-Substring-with-Concatenation-of-All-Words
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0031-Next-Permutation
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0032-Longest-Valid-Parentheses
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0033-Search-in-Rotated-Sorted-Array
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0034-Find-First-and-Last-Position-of-Element-in-Sorted-Array
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0035-Search-Insert-Position
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0036-Valid-Sudoku
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0037-Sudoku-Solver
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0038-Count-and-Say
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0039-Combination-Sum
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0040-Combination-Sum-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0041-First-Missing-Positive
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0042-Trapping-Rain-Water
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0043-Multiply-Strings
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0044-Wildcard-Matching
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0045-Jump-Game-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0046-Permutations
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0047-Permutations-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0048-Rotate-Image
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0049-Group-Anagrams
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0050-Pow(x,n)
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0051-N-Queens
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0052-N-Queens-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0053-Maximum-Subarray
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0054-Spiral-Matrix
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0055-Jump-Game
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0056-Merge-Intervals
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0057-Insert-Interval
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0058-Length-of-Last-Word
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0059-Spiral-Matrix-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0060-Permutation-Sequence
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0061-Rotate-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0062-Unique-Paths
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0063-Unique-Paths-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0064-Minimum-Path-Sum
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0065-Valid-Number
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0066-Plus-One
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0067-Add-Binary
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0068-Text-Justification
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0069-Sqrt(x)
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0070-Climbing-Stairs
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0071-Simplify-Path
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0072-Edit-Distance
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0073-Set-Matrix-Zeroes
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0074-Search-a-2D-Matrix
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0075-Sort-Colors
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0076-Minimum-Window-Substring
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0077-Combinations
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0078-Subsets
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0079-Word-Search
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0080-Remove-Duplicates-from-Sorted-Array-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0081-Search-in-Rotated-Sorted-Array-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0082-Remove-Duplicates-from-Sorted-List-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0083-Remove-Duplicates-from-Sorted-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0084-Largest-Rectangle-in-Histogram
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0085-Maximal-Rectangle
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0086-Partition-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0087-Scramble-String
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0088-Merge-Sorted-Array
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0089-Gray-Code
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0090-Subsets-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0091-Decode-Ways
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0092-Reverse-Linked-List-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0093-Restore-IP-Addresses
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0094-Binary-Tree-Inorder-Traversal
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0095-Unique-Binary-Search-Trees-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0096-Unique-Binary-Search-Trees
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0097-Interleaving-String
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0098-Validate-Binary-Search-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0099-Recover-Binary-Search-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0100-Same-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0101-Symmetric-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0102-Binary-Tree-Level-Order-Traversal
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0103-Binary-Tree-Zigzag-Level-Order-Traversal
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0104-Maximum-Depth-of-Binary-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0105-Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0106-Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0107-Binary-Tree-Level-Order-Traversal-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0108-Convert-Sorted-Array-to-Binary-Search-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0109-Convert-Sorted-List-to-Binary-Search-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0110-Balanced-Binary-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0111-Minimum-Depth-of-Binary-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0112-Path-Sum
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0113-Path-Sum-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0114-Flatten-Binary-Tree-to-Linked-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0115-Distinct-Subsequences
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0116-Populating-Next-Right-Pointers-in-Each-Node
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0117-Populating-Next-Right-Pointers-in-Each-Node-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0118-Pascal's-Triangle
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0119-Pascal's-Triangle-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0120-Triangle
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0121-Best-Time-to-Buy-and-Sell-Stock
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0122-Best-Time-to-Buy-and-Sell-Stock-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0123-Best-Time-to-Buy-and-Sell-Stock-III
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0124-Binary-Tree-Maximum-Path-Sum
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0125-Valid-Palindrome
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0126-Word-Ladder-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0127-Word-Ladder
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0128-Longest-Consecutive-Sequence
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0129-Sum-Root-to-Leaf-Numbers
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0130-Surrounded-Regions
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0131-Palindrome-Partitioning
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0132-Palindrome-Partitioning-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0133-Clone-Graph
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0134-Gas-Station
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0135-Candy
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0136-Single-Number
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0137-Single-Number-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0138-Copy-List-with-Random-Pointer
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0139-Word-Break
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0140-Word-Break-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0141-Linked-List-Cycle
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0142-Linked-List-Cycle-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0143-Reorder-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0144-Binary-Tree-Preorder-Traversal
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0145-Binary-Tree-Postorder-Traversal
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0146-LRU-Cache
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0147-Insertion-Sort-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0148-Sort-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0149-Max-Points-on-a-Line
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0150-Evaluate-Reverse-Polish-Notation
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0151-Reverse-Words-in-a-String
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0152-Maximum-Product-Subarray
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0153-Find-Minimum-in-Rotated-Sorted-Array
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0154-Find-Minimum-in-Rotated-Sorted-Array-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0155-Min-Stack
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0160-Intersection-of-Two-Linked-Lists
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0162-Find-Peak-Element
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0165-Compare-Version-Numbers
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0166-Fraction-to-Recurring-Decimal
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0167-Two-Sum-II-Input-array-is-sorted
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0168-Excel-Sheet-Column-Title
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0169-Majority-Element
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0171-Excel-Sheet-Column-Number
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0172-Factorial-Trailing-Zeroes
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0173-Binary-Search-Tree-Iterator
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0174-Dungeon-Game
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0179-Largest-Number
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0187-Repeated-DNA-Sequences
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0188-Best-Time-to-Buy-and-Sell-Stock-IV
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0189-Rotate-Array
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0190-Reverse-Bits
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0191-Number-of-1-Bits
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0198-House-Robber
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0199-Binary-Tree-Right-Side-View
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0200-Number-of-Islands
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0201-Bitwise-AND-of-Numbers-Range
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0202-Happy-Number
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0203-Remove-Linked-List-Elements
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0204-Count-Primes
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0205-Isomorphic-Strings
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0206-Reverse-Linked-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0207-Course-Schedule
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0208-Implement-Trie-(Prefix-Tree)
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0209-Minimum-Size-Subarray-Sum
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0210-Course-Schedule-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0211-Add-and-Search-Word-Data-structure-design
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0212-Word-Search-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0213-House-Robber-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0215-Kth-Largest-Element-in-an-Array
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0216-Combination-Sum-III
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0217-Contains-Duplicate
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0218-The-Skyline-Problem
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0219-Contains-Duplicate-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0220-Contains-Duplicate-III
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0221-Maximal-Square
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0222-Count-Complete-Tree-Nodes
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0223-Rectangle-Area
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0224-Basic-Calculator
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0226-Invert-Binary-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0228-Summary-Ranges
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0229-Majority-Element-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0230-Kth-Smallest-Element-in-a-BST
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0231-Power-of-Two
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0234-Palindrome-Linked-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0235-Lowest-Common-Ancestor-of-a-Binary-Search-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0236-Lowest-Common-Ancestor-of-a-Binary-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0237-Delete-Node-in-a-Linked-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0238-Product-of-Array-Except-Self
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0239-Sliding-Window-Maximum
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0240-Search-a-2D-Matrix-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0241-Different-Ways-to-Add-Parentheses
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0242-Valid-Anagram
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0253-Meeting-Rooms-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0257-Binary-Tree-Paths
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0260-Single-Number-III
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0263-Ugly-Number
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0264-Ugly-Number-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0268-Missing-Number
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0274-H-Index
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0275-H-Index-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0278-First-Bad-Version
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0279-Perfect-Squares
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0283-Move-Zeroes
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0287-Find-the-Duplicate-Number
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0289-Game-of-Life
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0290-Word-Pattern
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0297-Serialize-and-Deserialize-Binary-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0300-Longest-Increasing-Subsequence
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0303-Range-Sum-Query-Immutable
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0307-Range-Sum-Query-Mutable
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0309-Best-Time-to-Buy-and-Sel-Stock-with-Cooldown
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0310-Insert-Delete-GetRandom-O(1)
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0316-Remove-Duplicate-Letters
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0319-Bulb-Switcher
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0322-Coin-Change
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0325-Maximum-Size-Subarray-Sum-Equals-k
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0326-Power-of-Three
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0328-Odd-Even-Linked-List
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0331-Verify-Preorder-Serialization-of-a-Binary-Tree
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0337-House-Robber-III
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0341-Flatten-Nested-List-Iterator
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0343-Integer-Break
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0344-Reverse-String
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0345-Reverse-Vowels-of-a-String
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0347-Top-K-Frequent-Elements
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0349-Intersection-of-Two-Arrays
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0350-Intersection-of-Two-Arrays-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0352-Data-Stream-as-Disjoint-Intervals
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0354-Russian-Doll-Envelopes
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0365-Water-and-Jug-Problem
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0371-Sum-of-Two-Integers
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0377-Combination-Sum-IV
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0384-Shuffle-an-Array
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0389-Find-the-Difference
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0392-Is-Subsequence
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0401-Binary-Watch
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0404-Sum-of-Left-Leaves
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0409-Longest-Palindrome
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0416-Partition-Equal-Subset-Sum
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0423-Reconstruct-Original-Digits-from-English
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0424-Longest-Repeating-Character-Replacement
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0435-Non-overlapping-Intervals
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0437-Path-Sum-III
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0438-Find-All-Anagrams-in-a-String
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0445-Add-Two-Numbers-II
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0446-Arithmetic-Slices-II-Subsequence
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0447-Number-of-Boomerangs
2025-02-06 17:00:43 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0450-Delete-Node-in-a-BST
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0451-Sort-Characters-By-Frequency
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0452-Minimum-Number-of-Arrows-to-Burst-Balloons
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0453-Minimum-Moves-to-Equal-Array-Elements
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0454-4Sum-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0455-Assign-Cookies
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0458-Poor-Pigs
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0459-Repeated-Substring-Pattern
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0462-Minimum-Moves-to-Equal-Array-Elements-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0473-Matchsticks-to-Square
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0474-Ones-and-Zeroes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0486-Predict-the-Winner
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0492-Construct-the-Rectangle
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0494-Target-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0496-Next-Greater-Element-I
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0503-Next-Greater-Element-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0520-Detect-Capital
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0524-Longest-Word-in-Dictionary-through-Deleting
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0525-Contiguous-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0528-Random-Pick-with-Weight
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0530-Minimum-Absolute-Difference-in-BST
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0543-Diameter-of-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0547-Friend-Circles
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0559-Maximum-Depth-of-N-ary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0560-Subarray-Sum-Equals-K
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0567-Permutation-in-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0583-Delete-Operation-for-Two-Strings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0587-Erect-the-Fence
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0594-Longest-Harmonious-Subsequence
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0605-Can-Place-Flowers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0637-Average-of-Levels-in-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0650-2-Keys-Keyboard
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0652-Find-Duplicate-Subtrees
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0653-Two-Sum-IV-Input-is-a-BST
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0654-Maximum-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0678-Valid-Parenthesis-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0684-Redundant-Connection
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0687-Longest-Univalue-Path
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0695-Max-Area-of-Island
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0697-Degree-of-an-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0698-Partition-to-K-Equal-Sum-Subsets
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0700-Search-in-a-Binary-Search-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0733-Flood-Fill
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0739-Daily-Temperatures
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0742-Closest-Leaf-in-a-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0776-Toeplitz-Matrix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0783-Minimum-Distance-Between-BST-Nodes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0788-Rotated-Digits
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0790-Domino-and-Tromino-Tiling
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0793-Preimage-Size-of-Factorial-Zeroes-Function
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0795-Number-of-Subarrays-with-Bounded-Maximum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0813-Largest-Sum-of-Averages
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0820-Short-Encoding-of-Words
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0824-Goat-Latin
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0825-Friends-Of-Appropriate-Ages
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0826-Most-Profit-Assigning-Work
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0827-Making-A-Large-Island
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0828-Unique-Letter-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0829-Consecutive-Numbers-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0832-Flipping-an-Image
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0834-Sum-of-Distances-in-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0836-Rectangle-Overlap
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0844-Backspace-String-Compare
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0845-Longest-Mountain-in-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0846-Hand-of-Straights
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0847-Shortest-Path-Visiting-All-Nodes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0852-Peak-Index-in-a-Mountain-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0857-Minimum-Cost-to-Hire-K-Workers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0859-Buddy-Strings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0872-Leaf-Similar-Trees
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0873-Length-of-Longest-Fibonacci-Subsequence
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0874-Walking-Robot-Simulation
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0876-Middle-of-the-Linked-List
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0878-Nth-Magical-Number
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0891-Sum-of-Subsequence-Widths
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0892-Surface-Area-of-3D-Shapes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0895-Maximum-Frequency-Stack
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0901-Online-Stock-Span
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0902-Numbers-At-Most-N-Given-Digit-Set
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0904-Fruit-Into-Baskets
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0907-Sum-of-Subarray-Minimums
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0914-X-of-a-Kind-in-a-Deck-of-Cards
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0917-Reverse-Only-Letters
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0918-Maximum-Sum-Circular-Subarray
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0919-Complete-Binary-Tree-Inserter
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0920-Number-of-Music-Playlists
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0921-Minimum-Add-to-Make-Parentheses-Valid
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0922-Sort-Array-By-Parity-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0923-3Sum-With-Multiplicity
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0925-Long-Pressed-Name
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0926-Flip-String-to-Monotone-Increasing
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0927-Three-Equal-Parts
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0929-Unique-Email-Addresses
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0930-Binary-Subarrays-With-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0931-Minimum-Falling-Path-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0932-Beautiful-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0933-Number-of-Recent-Calls
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0934-Shortest-Bridge
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0935-Knight-Dialer
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0936-Stamping-The-Sequence
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0937-Reorder-Log-Files
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0938-Range-Sum-of-BST
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0939-Minimum-Area-Rectangle
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0940-Distinct-Subsequences-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0941-Valid-Mountain-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0942-DI-String-Match
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0943-Find-the-Shortest-Superstring
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0944-Delete-Columns-to-Make-Sorted
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0945-Minimum-Increment-to-Make-Array-Unique
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0946-Validate-Stack-Sequences
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0947-Most-Stones-Removed-with-Same-Row-or-Column
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0948-Bag-of-Tokens
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0949-Largest-Time-for-Given-Digits
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0950-Reveal-Cards-In-Increasing-Order
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0951-Flip-Equivalent-Binary-Trees
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0953-Verifying-an-Alien-Dictionary
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0954-Array-of-Doubled-Pairs
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0955-Delete-Columns-to-Make-Sorted-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0956-Tallest-Billboard
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0957-Prison-Cells-After-N-Days
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0958-Check-Completeness-of-a-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0959-Regions-Cut-By-Slashes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0960-Delete-Columns-to-Make-Sorted-III
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0961-N-Repeated-Element-in-Size-2N-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0962-Maximum-Width-Ramp
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0963-Minimum-Area-Rectangle-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0965-Univalued-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0966-Vowel-Spellchecker
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0967-Numbers-With-Same-Consecutive-Differences
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0969-Pancake-Sorting
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0970-Powerful-Integers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0971-Flip-Binary-Tree-To-Match-Preorder-Traversal
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0972-Equal-Rational-Numbers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0973-K-Closest-Points-to-Origin
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0974-Subarray-Sums-Divisible-by-K
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0975-Odd-Even-Jump
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0976-Largest-Perimeter-Triangle
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0977-Squares-of-a-Sorted-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0978-Longest-Turbulent-Subarray
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0979-Distribute-Coins-in-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0980-Unique-Paths-III
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0981-Time-Based-Key-Value-Store
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0982-Triples-with-Bitwise-AND-Equal-To-Zero
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0983-Minimum-Cost-For-Tickets
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0984-String-Without-AAA-or-BBB
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0985-Sum-of-Even-Numbers-After-Queries
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0986-Interval-List-Intersections
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0987-Vertical-Order-Traversal-of-a-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0988-Smallest-String-Starting-From-Leaf
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0989-Add-to-Array-Form-of-Integer
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0990-Satisfiability-of-Equality-Equations
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0991-Broken-Calculator
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0992-Subarrays-with-K-Different-Integers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0993-Cousins-in-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0994-Rotting-Oranges
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0995-Minimum-Number-of-K-Consecutive-Bit-Flips
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0996-Number-of-Squareful-Arrays
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0997-Find-the-Town-Judge
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0998-Maximum-Binary-Tree-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0999-Available-Captures-for-Rook
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1000-Minimum-Cost-to-Merge-Stones
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1001-Grid-Illumination
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1002-Find-Common-Characters
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1003-Check-If-Word-Is-Valid-After-Substitutions
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1004-Max-Consecutive-Ones-III
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1005-Maximize-Sum-Of-Array-After-K-Negations
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1006-Clumsy-Factorial
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1007-Minimum-Domino-Rotations-For-Equal-Row
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1008-Construct-Binary-Search-Tree-from-Preorder-Traversal
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1009-Complement-of-Base-10-Integer
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1010-Pairs-of-Songs-With-Total-Durations-Divisible-by-60
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1011-Capacity-To-Ship-Packages-Within-D-Days
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1012-Numbers-With-Repeated-Digits
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1013-Partition-Array-Into-Three-Parts-With-Equal-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1014-Best-Sightseeing-Pair
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1015-Smallest-Integer-Divisible-by-K
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1017-Convert-to-Base-2
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1018-Binary-Prefix-Divisible-By-5
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1019-Next-Greater-Node-In-Linked-List
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1020-Number-of-Enclaves
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1021-Remove-Outermost-Parentheses
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1022-Sum-of-Root-To-Leaf-Binary-Numbers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1023-Camelcase-Matching
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1024-Video-Stitching
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1025-Divisor-Game
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1026-Maximum-Difference-Between-Node-and-Ancestor
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1027-Longest-Arithmetic-Sequence
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1033-Moving-Stones-Until-Consecutive
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1034-Coloring-A-Border
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1035-Uncrossed-Lines
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1037-Valid-Boomerang
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1038-Binary-Search-Tree-to-Greater-Sum-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1039-Minimum-Score-Triangulation-of-Polygon
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1041-Robot-Bounded-In-Circle
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1042-Flower-Planting-With-No-Adjacent
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1043-Partition-Array-for-Maximum-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1046-Last-Stone-Weight
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1047-Remove-All-Adjacent-Duplicates-In-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1048-Longest-String-Chain
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1049-Last-Stone-Weight-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1051-Height-Checker
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1052-Grumpy-Bookstore-Owner
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1053-Previous-Permutation-With-One-Swap
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1054-Distant-Barcodes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1061-Lexicographically-Smallest-Equivalent-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1064-Fixed-Point
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1065-Index-Pairs-of-a-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1066-Campus-Bikes-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1067-Digit-Count-in-Range
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1071-Greatest-Common-Divisor-of-Strings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1072-Flip-Columns-For-Maximum-Number-of-Equal-Rows
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1073-Adding-Two-Negabinary-Numbers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1074-Number-of-Submatrices-That-Sum-to-Target
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1078-Occurrences-After-Bigram
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1079-Letter-Tile-Possibilities
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1080-Insufficient-Nodes-in-Root-to-Leaf-Paths
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1081-Smallest-Subsequence-of-Distinct-Characters
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1085-Sum-of-Digits-in-the-Minimum-Number
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1086-High-Five
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1087-Brace-Expansion
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1089-Duplicate-Zeros
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1090-Largest-Values-From-Labels
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1091-Shortest-Path-in-Binary-Matrix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1093-Statistics-from-a-Large-Sample
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1094-Car-Pooling
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1095-Find-in-Mountain-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1096-Brace-Expansion-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1099-Two-Sum-Less-Than-K
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1100-Find-K-Length-Substrings-With-No-Repeated-Characters
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1101-The-Earliest-Moment-When-Everyone-Become-Friends
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1102-Path-With-Maximum-Minimum-Value
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1103-Distribute-Candies-to-People
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1104-Path-In-Zigzag-Labelled-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1105-Filling-Bookcase-Shelves
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1106-Parsing-A-Boolean-Expression
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1108-Defanging-an-IP-Address
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1109-Corporate-Flight-Bookings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1110-Delete-Nodes-And-Return-Forest
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1111-Maximum-Nesting-Depth-of-Two-Valid-Parentheses-Strings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1118-Number-of-Days-in-a-Month
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1119-Remove-Vowels-from-a-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1120-Maximum-Average-Subtree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1121-Divide-Array-Into-Increasing-Sequences
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1122-Relative-Sort-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1123-Lowest-Common-Ancestor-of-Deepest-Leaves
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1124-Longest-Well-Performing-Interval
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1125-Smallest-Sufficient-Team
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1128-Number-of-Equivalent-Domino-Pairs
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1129-Shortest-Path-with-Alternating-Colors
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1130-Minimum-Cost-Tree-From-Leaf-Values
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1131-Maximum-of-Absolute-Value-Expression
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1133-Largest-Unique-Number
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1134-Armstrong-Number
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1135-Connecting-Cities-With-Minimum-Cost
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1136-Parallel-Courses
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1137-N-th-Tribonacci-Number
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1138-Alphabet-Board-Path
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1139-Largest-1-Bordered-Square
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1140-Stone-Game-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1143-Longest-Common-Subsequence
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1144-Decrease-Elements-To-Make-Array-Zigzag
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1145-Binary-Tree-Coloring-Game
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1146-Snapshot-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1147-Longest-Chunked-Palindrome-Decomposition
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1150-Check-If-a-Number-Is-Majority-Element-in-a-Sorted-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1151-Minimum-Swaps-to-Group-All-1's-Together
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1152-Analyze-User-Website-Visit-Pattern
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1153-String-Transforms-Into-Another-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1154-Day-of-the-Year
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1155-Number-of-Dice-Rolls-With-Target-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1156-Swap-For-Longest-Repeated-Character-Substring
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1157-Online-Majority-Element-In-Subarray
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1160-Find-Words-That-Can-Be-Formed-by-Characters
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1161-Maximum-Level-Sum-of-a-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1162-As-Far-from-Land-as-Possible
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1165-Single-Row-Keyboard
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1166-Design-File-System
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1167-Minimum-Cost-to-Connect-Sticks
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1168-Optimize-Water-Distribution-in-a-Village
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1169-Invalid-Transactions
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1170-Compare-Strings-by-Frequency-of-the-Smallest-Character
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1171-Remove-Zero-Sum-Consecutive-Nodes-from-Linked-List
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1172-Dinner-Plate-Stacks
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1175-Prime-Arrangements
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1176-Diet-Plan-Performance
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1184-Distance-Between-Bus-Stops
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1185-Day-of-the-Week
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1186-Maximum-Subarray-Sum-with-One-Deletion
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1187-Make-Array-Strictly-Increasing
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1189-Maximum-Number-of-Balloons
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1190-Reverse-Substrings-Between-Each-Pair-of-Parentheses
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1191-K-Concatenation-Maximum-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1192-Critical-Connections-in-a-Network
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1196-How-Many-Apples-Can-You-Put-into-the-Basket
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1197-Minimum-Knight-Moves
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1198-Find-Smallest-Common-Element-in-All-Rows
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1199-Minimum-Time-to-Build-Blocks
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1200-Minimum-Absolute-Difference
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1201-Ugly-Number-III
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1202-Smallest-String-With-Swaps
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1207-Unique-Number-of-Occurrences
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1208-Get-Equal-Substrings-Within-Budget
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1209-Remove-All-Adjacent-Duplicates-in-String-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1210-Minimum-Moves-to-Reach-Target-with-Rotations
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1213-Intersection-of-Three-Sorted-Arrays
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1214-Two-Sum-BSTs
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1215-Stepping-Numbers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1216-Valid-Palindrome-III
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1217-Play-with-Chips
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1218-Longest-Arithmetic-Subsequence-of-Given-Difference
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1219-Path-with-Maximum-Gold
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1220-Count-Vowels-Permutation
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1221-Split-a-String-in-Balanced-Strings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1222-Queens-That-Can-Attack-the-King
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1223-Dice-Roll-Simulation
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1224-Maximum-Equal-Frequency
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1228-Missing-Number-In-Arithmetic-Progression
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1229-Meeting-Scheduler
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1230-Toss-Strange-Coins
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1231-Divide-Chocolate
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1232-Check-If-It-Is-a-Straight-Line
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1233-Remove-Sub-Folders-from-the-Filesystem
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1234-Replace-the-Substring-for-Balanced-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1235-Maximum-Profit-in-Job-Scheduling
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1237-Find-Positive-Integer-Solution-for-a-Given-Equation
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1238-Circular-Permutation-in-Binary-Representation
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1239-Maximum-Length-of-a-Concatenated-String-with-Unique-Characters
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1240-Tiling-a-Rectangle-with-the-Fewest-Squares
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1243-Array-Transformation
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1244-Design-A-Leaderboard
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1245-Tree-Diameter
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1246-Palindrome-Removal
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1247-Minimum-Swaps-to-Make-Strings-Equal
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1248-Count-Number-of-Nice-Subarrays
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1249-Minimum-Remove-to-Make-Valid-Parentheses
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1250-Check-If-It-Is-a-Good-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1252-Cells-with-Odd-Values-in-a-Matrix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1253-Reconstruct-a-2-Row-Binary-Matrix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1254-Number-of-Closed-Islands
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1255-Maximum-Score-Words-Formed-by-Letters
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1256-Encode-Number
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1257-Smallest-Common-Region
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1258-Synonymous-Sentences
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1259-Handshakes-That-Don't-Cross
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1260-Shift-2D-Grid
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1261-Find-Elements-in-a-Contaminated-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1262-Greatest-Sum-Divisible-by-Three
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1263-Minimum-Moves-to-Move-a-Box-to-Their-Target-Location
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1266-Minimum-Time-Visiting-All-Points
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1267-Count-Servers-that-Communicate
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1268-Search-Suggestions-System
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1269-Number-of-Ways-to-Stay-in-the-Same-Place-After-Some-Steps
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1271-Hexspeak
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1272-Remove-Interval
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1273-Delete-Tree-Nodes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1274-Number-of-Ships-in-a-Rectangle
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1275-Find-Winner-on-a-Tic-Tac-Toe-Game
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1276-Number-of-Burgers-with-No-Waste-of-Ingredients
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1277-Count-Square-Submatrices-with-All-Ones
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1278-Palindrome-Partitioning-III
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1282-Group-the-People-Given-the-Group-Size-They-Belong-To
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1283-Find-the-Smallest-Divisor-Given-a-Threshold
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1284-Minimum-Number-of-Flips-to-Convert-Binary-Matrix-to-Zero-Matrix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1286-Iterator-for-Combination
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1287-Element-Appearing-More-Than-25%-In-Sorted-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1288-Remove-Covered-Intervals
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1289-Minimum-Falling-Path-Sum-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1290-Convert-Binary-Number-in-a-Linked-List-to-Integer
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1291-Sequential-Digits
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1292-Maximum-Side-Length-of-a-Square-with-Sum-Less-than-or-Equal-to-Threshold
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1293-Shortest-Path-in-a-Grid-with-Obstacles-Elimination
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1295-Find-Numbers-with-Even-Number-of-Digits
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1296-Divide-Array-in-Sets-of-K-Consecutive-Numbers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1297-Maximum-Number-of-Occurrences-of-a-Substring
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1298-Maximum-Candies-You-Can-Get-from-Boxes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1299-Replace-Elements-with-Greatest-Element-on-Right-Side
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1300-Sum-of-Mutated-Array-Closest-to-Target
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1301-Number-of-Paths-with-Max-Score
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1302-Deepest-Leaves-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1304-Find-N-Unique-Integers-Sum-up-to-Zero
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1305-All-Elements-in-Two-Binary-Search-Trees
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1306-Jump-Game-III
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1309-Decrypt-String-from-Alphabet-to-Integer-Mapping
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1310-XOR-Queries-of-a-Subarray
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1311-Get-Watched-Videos-by-Your-Friends
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1313-Decompress-Run-Length-Encoded-List
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1314-Matrix-Block-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1315-Sum-of-Nodes-with-Even-Valued-Grandparent
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1316-Distinct-Echo-Substrings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1318-Minimum-Flips-to-Make-a-OR-b-Equal-to-c
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1319-Number-of-Operations-to-Make-Network-Connected
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1320-Minimum-Distance-to-Type-a-Word-Using-Two-Fingers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1323-Maximum-69-Number
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1324-Print-Words-Vertically
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1325-Delete-Leaves-With-a-Given-Value
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1326-Minimum-Number-of-Taps-to-Open-to-Water-a-Garden
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1328-Break-a-Palindrome
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1329-Sort-the-Matrix-Diagonally
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1330-Reverse-Subarray-To-Maximize-Array-Value
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1331-Rank-Transform-of-an-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1332-Remove-Palindromic-Subsequences
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1333-Filter-Restaurants-by-Vegan-Friendly,-Price-and-Distance
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1334-Find-the-City-With-the-Smallest-Number-of-Neighbors-at-a-Threshold-Distance
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1335-Minimum-Difficulty-of-a-Job-Schedule
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1337-The-K-Weakest-Rows-in-a-Matrix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1338-Reduce-Array-Size-to-The-Half
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1339-Maximum-Product-of-Splitted-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1340-Jump-Game-V
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1342-Number-of-Steps-to-Reduce-a-Number-to-Zero
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1343-Number-of-Sub-arrays-of-Size-K-and-Average-Greater-than-or-Equal-to-Threshold
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1344-Angle-Between-Hands-of-a-Clock
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1345-Jump-Game-IV
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1346-Check-If-N-and-Its-Double-Exist
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1347-Minimum-Number-of-Steps-to-Make-Two-Strings-Anagram
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1348-Tweet-Counts-Per-Frequency
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1349-Maximum-Students-Taking-Exam
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1351-Count-Negative-Numbers-in-a-Sorted-Matrix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1352-Product-of-the-Last-K-Numbers
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1353-Maximum-Number-of-Events-That-Can-Be-Attended
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1354-Construct-Target-Array-With-Multiple-Sums
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1356-Sort-Integers-by-The-Number-of-1-Bits
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1357-Apply-Discount-Every-n-Orders
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1358-Number-of-Substrings-Containing-All-Three-Characters
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1359-Count-All-Valid-Pickup-and-Delivery-Options
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1360-Number-of-Days-Between-Two-Dates
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1361-Validate-Binary-Tree-Nodes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1362-Closest-Divisors
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1363-Largest-Multiple-of-Three
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1366-Rank-Teams-by-Votes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1367-Linked-List-in-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1368-Minimum-Cost-to-Make-at-Least-One-Valid-Path-in-a-Grid
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1370-Increasing-Decreasing-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1371-Find-the-Longest-Substring-Containing-Vowels-in-Even-Counts
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1372-Longest-ZigZag-Path-in-a-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1373-Maximum-Sum-BST-in-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1374-Generate-a-String-With-Characters-That-Have-Odd-Counts
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1375-Bulb-Switcher-III
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1376-Time-Needed-to-Inform-All-Employees
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1377-Frog-Position-After-T-Seconds
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1380-Lucky-Numbers-in-a-Matrix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1381-Design-a-Stack-With-Increment-Operation
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1382-Balance-a-Binary-Search-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1383-Maximum-Performance-of-a-Team
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1385-Find-the-Distance-Value-Between-Two-Arrays
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1386-Cinema-Seat-Allocation
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1387-Sort-Integers-by-The-Power-Value
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1388-Pizza-With-3n-Slices
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1389-Create-Target-Array-in-the-Given-Order
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1390-Four-Divisors
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1391-Check-if-There-is-a-Valid-Path-in-a-Grid
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1392-Longest-Happy-Prefix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1394-Find-Lucky-Integer-in-an-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1395-Count-Number-of-Teams
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1396-Design-Underground-System
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1397-Find-All-Good-Strings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1399-Count-Largest-Group
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1400-Construct-K-Palindrome-Strings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1401-Circle-and-Rectangle-Overlapping
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1402-Reducing-Dishes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1403-Minimum-Subsequence-in-Non-Increasing-Order
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1404-Number-of-Steps-to-Reduce-a-Number-in-Binary-Representation-to-One
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1405-Longest-Happy-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1406-Stone-Game-III
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1408-String-Matching-in-an-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1409-Queries-on-a-Permutation-With-Key
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1410-HTML-Entity-Parser
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1411-Number-of-Ways-to-Paint-N×3-Grid
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1414-Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1415-The-k-th-Lexicographical-String-of-All-Happy-Strings-of-Length-n
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1416-Restore-The-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1417-Reformat-The-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1418-Display-Table-of-Food-Orders-in-a-Restaurant
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1419-Minimum-Number-of-Frogs-Croaking
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1420-Build-Array-Where-You-Can-Find-The-Maximum-Exactly-K-Comparisons
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1422-Maximum-Score-After-Splitting-a-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1423-Maximum-Points-You-Can-Obtain-from-Cards
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1424-Diagonal-Traverse-II
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1425-Constrained-Subsequence-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1431-Kids-With-the-Greatest-Number-of-Candies
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1432-Max-Difference-You-Can-Get-From-Changing-an-Integer
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1433-Check-If-a-String-Can-Break-Another-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1434-Number-of-Ways-to-Wear-Different-Hats-to-Each-Other
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1436-Destination-City
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1437-Check-If-All-1's-Are-at-Least-Length-K-Places-Away
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1438-Longest-Continuous-Subarray-With-Absolute-Diff-Less-Than-or-Equal-to-Limit
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1439-Find-the-Kth-Smallest-Sum-of-a-Matrix-With-Sorted-Rows
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1441-Build-an-Array-With-Stack-Operations
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1442-Count-Triplets-That-Can-Form-Two-Arrays-of-Equal-XOR
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1443-Minimum-Time-to-Collect-All-Apples-in-a-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1444-Number-of-Ways-of-Cutting-a-Pizza
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1470-Shuffle-the-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1472-Design-Browser-History
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1523-Count-Odd-Numbers-in-an-Interval-Range
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1546-Maximum-Number-of-Non-Overlapping-Subarrays-With-Sum-Equals-Target
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1574-Shortest-Subarray-To-Be-Removed-To-Make-Array-Sorted
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1604-Alert-Using-Same-Key-Card-Three-or-More-Times-in-a-One-Hour-Period
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1616-Split-Two-Strings-to-Make-Palindrome
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1626-Best-Team-With-No-Conflicts
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1657-Determine-if-Two-Strings-Are-Close
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1658-Minimum-Operations-to-Reduce-X-to-Zero
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1664-Ways-to-Make-a-Fair-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1669-Merge-In-Between-Linked-Lists
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1673-Find-the-Most-Competitive-Subsequence
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1691-Maximum-Height-by-Stacking-Cuboids
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1704-Determine-if-String-Halves-Are-Alike
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1732-Find-the-Highest-Altitude
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1739-Building-Boxes
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1742-Maximum-Number-of-Balls-in-a-Box
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1750-Minimum-Length-of-String-After-Deleting-Similar-Ends
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1752-Check-if-Array-Is-Sorted-and-Rotated
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1754-Largest-Merge-Of-Two-Strings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1758-Minimum-Changes-To-Make-Alternating-Binary-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1759-Count-Number-of-Homogenous-Substrings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1779-Find-Nearest-Point-That-Has-the-Same-X-or-Y-Coordinate
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1780-Check-if-Number-is-a-Sum-of-Powers-of-Three
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1781-Sum-of-Beauty-of-All-Substrings
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1796-Second-Largest-Digit-in-a-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1798-Maximum-Number-of-Consecutive-Values-You-Can-Make
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1801-Number-of-Orders-in-the-Backlog
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1802-Maximum-Value-at-a-Given-Index-in-a-Bounded-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1805-Number-of-Different-Integers-in-a-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1806-Minimum-Number-of-Operations-to-Reinitialize-a-Permutation
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1807-Evaluate-the-Bracket-Pairs-of-a-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1812-Determine-Color-of-a-Chessboard-Square
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1813-Sentence-Similarity-III
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1814-Count-Nice-Pairs-in-an-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1819-Number-of-Different-Subsequences-GCDs
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1827-Minimum-Operations-to-Make-the-Array-Increasing
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1832-Check-if-the-Sentence-is-Pangram
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1833-Maximum-Ice-Cream-Bars
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1834-Single-Threaded-CPU
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1926-Nearest-Exit-from-Entrance-in-Maze
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1962-Remove-Stones-to-Minimize-the-Total
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2011-Final-Value-of-Variable-After-Performing-Operations
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2027-Minimum-Moves-to-Convert-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2032-Two-Out-of-Three
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2037-Minimum-Number-of-Moves-to-Seat-Everyone
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2042-Check-if-Numbers-Are-Ascending-in-a-Sentence
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2180-Count-Integers-With-Even-Digit-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2185-Counting-Words-With-a-Given-Prefix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2225-Find-Players-With-Zero-or-One-Losses
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2244-Minimum-Rounds-to-Complete-All-Tasks
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2256-Minimum-Average-Difference
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2279-Maximum-Bags-With-Full-Capacity-of-Rocks
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2287-Rearrange-Characters-to-Make-Target-String
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2293-Min-Max-Game
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2315-Count-Asterisks
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2319-Check-if-Matrix-Is-X-Matrix
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2325-Decode-the-Message
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2331-Evaluate-Boolean-Binary-Tree
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2341-Maximum-Number-of-Pairs-in-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2347-Best-Poker-Hand
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2351-First-Letter-to-Appear-Twice
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2357-Make-Array-Zero-by-Subtracting-Equal-Amounts
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2389-Longest-Subsequence-With-Limited-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2395-Find-Subarrays-With-Equal-Sum
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2427-Number-of-Common-Factors
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2439-Minimize-Maximum-of-Array
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2469-Convert-the-Temperature
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2470-Number-of-Subarrays-With-LCM-Equal-to-K
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2471-Minimum-Number-of-Operations-to-Sort-a-Binary-Tree-by-Level
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2477-Minimum-Fuel-Cost-to-Report-to-the-Capital
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2549-Count-Distinct-Numbers-on-Board
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2550-Count-Collisions-of-Monkeys-on-a-Polygon
2025-02-06 17:00:44 DEBUG ProjectLoader:125 - [JavaFX Application Thread] Loading C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2551-Put-Marbles-in-Bags
2025-02-06 17:00:45 DEBUG ChooseUUTController:520 - [JavaFX Application Thread] Constructed the physical tree corresponding to the source code files list
2025-02-06 17:00:46 DEBUG ChooseUUTController:744 - [JavaFX Application Thread] There are no EnviroLibraryStubNode
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0001-Two-Sum\two_sum.c
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0001-Two-Sum\two_sum.c
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0001-Two-Sum\two_sum.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0001-Two-Sum\two_sum.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0002-Add-Two-Numbers\Add_Two_Numbers.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0002-Add-Two-Numbers\Add_Two_Numbers.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0003-Longest-Substring-Without-Repeating-Characters\0003.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0003-Longest-Substring-Without-Repeating-Characters\0003.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0004-Median-of-Two-Sorted-Arrays\0004.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0004-Median-of-Two-Sorted-Arrays\0004.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0005-Longest-Palindromic-Substring\0005.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0005-Longest-Palindromic-Substring\0005.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0006-ZigZag-Conversion\0006.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0006-ZigZag-Conversion\0006.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0007-Reverse-Integer\0007.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0007-Reverse-Integer\0007.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0008-String-to-Integer-(atoi)\0008.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0008-String-to-Integer-(atoi)\0008.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0009-Palindrome-Number\0009.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0009-Palindrome-Number\0009.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0010-Regular-Expression-Matching\0010.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0010-Regular-Expression-Matching\0010.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0011-Container-With-Most-Water\0011.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0011-Container-With-Most-Water\0011.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0012-Integer-to-Roman\0012.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0012-Integer-to-Roman\0012.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0013-Roman-to-Integer\0013.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0013-Roman-to-Integer\0013.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0014-Longest-Common-Prefix\0014.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0014-Longest-Common-Prefix\0014.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0015-3Sum\0015.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0015-3Sum\0015.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0016-3Sum-Closest\0016.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0016-3Sum-Closest\0016.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0017-Letter-Combinations-of-a-Phone-Number\0017.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0017-Letter-Combinations-of-a-Phone-Number\0017.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0018-4Sum\0018.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0018-4Sum\0018.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0019-Remove-Nth-Node-From-End-of-List\0019.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0019-Remove-Nth-Node-From-End-of-List\0019.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0020-Valid-Parentheses\0020.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0020-Valid-Parentheses\0020.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0021-Merge-Two-Sorted-Lists\0021.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0021-Merge-Two-Sorted-Lists\0021.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0022-Generate-Parentheses\0022.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0022-Generate-Parentheses\0022.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0023-Merge-k-Sorted-Lists\0023.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0023-Merge-k-Sorted-Lists\0023.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0024-Swap-Nodes-in-Pairs\0024.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0024-Swap-Nodes-in-Pairs\0024.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0025-Reverse-Nodes-in-k-Group\0025.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0025-Reverse-Nodes-in-k-Group\0025.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0026-Remove-Duplicates-from-Sorted-Array\0026.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0026-Remove-Duplicates-from-Sorted-Array\0026.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0027-Remove-Element\0027.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0027-Remove-Element\0027.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0028-Implement-strStr()\0028.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0028-Implement-strStr()\0028.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0029-Divide-Two-Integers\0029.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0029-Divide-Two-Integers\0029.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0030-Substring-with-Concatenation-of-All-Words\0030.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0030-Substring-with-Concatenation-of-All-Words\0030.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0031-Next-Permutation\0031.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0031-Next-Permutation\0031.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0032-Longest-Valid-Parentheses\0032.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0032-Longest-Valid-Parentheses\0032.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0033-Search-in-Rotated-Sorted-Array\0033.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0033-Search-in-Rotated-Sorted-Array\0033.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0034-Find-First-and-Last-Position-of-Element-in-Sorted-Array\0034.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0034-Find-First-and-Last-Position-of-Element-in-Sorted-Array\0034.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0035-Search-Insert-Position\0035.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0035-Search-Insert-Position\0035.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0036-Valid-Sudoku\0036.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0036-Valid-Sudoku\0036.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0037-Sudoku-Solver\0037.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0037-Sudoku-Solver\0037.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0038-Count-and-Say\0038.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0038-Count-and-Say\0038.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0039-Combination-Sum\0039.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0039-Combination-Sum\0039.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0040-Combination-Sum-II\0040.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0040-Combination-Sum-II\0040.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0041-First-Missing-Positive\0041.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0041-First-Missing-Positive\0041.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0042-Trapping-Rain-Water\0042.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0042-Trapping-Rain-Water\0042.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0043-Multiply-Strings\0043.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0043-Multiply-Strings\0043.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0044-Wildcard-Matching\0044.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0044-Wildcard-Matching\0044.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0045-Jump-Game-II\0045.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0045-Jump-Game-II\0045.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0046-Permutations\0046.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0046-Permutations\0046.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0047-Permutations-II\0047.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0047-Permutations-II\0047.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0048-Rotate-Image\0048.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0048-Rotate-Image\0048.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0049-Group-Anagrams\0049.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0049-Group-Anagrams\0049.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0050-Pow(x,n)\0050.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0050-Pow(x,n)\0050.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0051-N-Queens\0051.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0051-N-Queens\0051.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0052-N-Queens-II\0052.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0052-N-Queens-II\0052.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0053-Maximum-Subarray\0053.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0053-Maximum-Subarray\0053.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0054-Spiral-Matrix\0054.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0054-Spiral-Matrix\0054.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0055-Jump-Game\0055.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0055-Jump-Game\0055.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0056-Merge-Intervals\0056.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0056-Merge-Intervals\0056.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0057-Insert-Interval\0057.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0057-Insert-Interval\0057.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0058-Length-of-Last-Word\0058.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0058-Length-of-Last-Word\0058.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0059-Spiral-Matrix-II\0059.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0059-Spiral-Matrix-II\0059.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0060-Permutation-Sequence\0060.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0060-Permutation-Sequence\0060.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0061-Rotate-List\0061.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0061-Rotate-List\0061.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0062-Unique-Paths\0062.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0062-Unique-Paths\0062.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0063-Unique-Paths-II\0063.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0063-Unique-Paths-II\0063.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0064-Minimum-Path-Sum\0064.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0064-Minimum-Path-Sum\0064.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0065-Valid-Number\0065.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0065-Valid-Number\0065.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0066-Plus-One\0066.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0066-Plus-One\0066.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0067-Add-Binary\0067.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0067-Add-Binary\0067.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0068-Text-Justification\0068.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0068-Text-Justification\0068.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0069-Sqrt(x)\0069.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0069-Sqrt(x)\0069.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0070-Climbing-Stairs\0070.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0070-Climbing-Stairs\0070.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0071-Simplify-Path\0071.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0071-Simplify-Path\0071.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0072-Edit-Distance\0072.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0072-Edit-Distance\0072.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0073-Set-Matrix-Zeroes\0073.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0073-Set-Matrix-Zeroes\0073.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0074-Search-a-2D-Matrix\0074.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0074-Search-a-2D-Matrix\0074.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0075-Sort-Colors\0075.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0075-Sort-Colors\0075.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0076-Minimum-Window-Substring\0076.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0076-Minimum-Window-Substring\0076.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0077-Combinations\0077.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0077-Combinations\0077.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0078-Subsets\0078.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0078-Subsets\0078.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0079-Word-Search\0079.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0079-Word-Search\0079.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0080-Remove-Duplicates-from-Sorted-Array-II\0080.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0080-Remove-Duplicates-from-Sorted-Array-II\0080.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0081-Search-in-Rotated-Sorted-Array-II\0081.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0081-Search-in-Rotated-Sorted-Array-II\0081.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0082-Remove-Duplicates-from-Sorted-List-II\0082.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0082-Remove-Duplicates-from-Sorted-List-II\0082.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0083-Remove-Duplicates-from-Sorted-List\0083.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0083-Remove-Duplicates-from-Sorted-List\0083.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0084-Largest-Rectangle-in-Histogram\0084.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0084-Largest-Rectangle-in-Histogram\0084.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0085-Maximal-Rectangle\0085.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0085-Maximal-Rectangle\0085.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0086-Partition-List\0086.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0086-Partition-List\0086.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0087-Scramble-String\0087.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0087-Scramble-String\0087.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0088-Merge-Sorted-Array\0088.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0088-Merge-Sorted-Array\0088.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0089-Gray-Code\0089.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0089-Gray-Code\0089.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0090-Subsets-II\0090.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0090-Subsets-II\0090.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0091-Decode-Ways\0091.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0091-Decode-Ways\0091.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0092-Reverse-Linked-List-II\0092.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0092-Reverse-Linked-List-II\0092.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0093-Restore-IP-Addresses\0093.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0093-Restore-IP-Addresses\0093.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0094-Binary-Tree-Inorder-Traversal\0094.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0094-Binary-Tree-Inorder-Traversal\0094.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0095-Unique-Binary-Search-Trees-II\0095.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0095-Unique-Binary-Search-Trees-II\0095.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0096-Unique-Binary-Search-Trees\0096.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0096-Unique-Binary-Search-Trees\0096.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0097-Interleaving-String\0097.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0097-Interleaving-String\0097.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0098-Validate-Binary-Search-Tree\0098.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0098-Validate-Binary-Search-Tree\0098.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0099-Recover-Binary-Search-Tree\0099.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0099-Recover-Binary-Search-Tree\0099.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0100-Same-Tree\0100.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0100-Same-Tree\0100.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0101-Symmetric-Tree\0101.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0101-Symmetric-Tree\0101.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0102-Binary-Tree-Level-Order-Traversal\0102.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0102-Binary-Tree-Level-Order-Traversal\0102.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0103-Binary-Tree-Zigzag-Level-Order-Traversal\0103.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0103-Binary-Tree-Zigzag-Level-Order-Traversal\0103.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0104-Maximum-Depth-of-Binary-Tree\0104.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0104-Maximum-Depth-of-Binary-Tree\0104.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0105-Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal\0105.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0105-Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal\0105.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0106-Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal\0106.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0106-Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal\0106.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0107-Binary-Tree-Level-Order-Traversal-II\0107.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0107-Binary-Tree-Level-Order-Traversal-II\0107.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0108-Convert-Sorted-Array-to-Binary-Search-Tree\0108.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0108-Convert-Sorted-Array-to-Binary-Search-Tree\0108.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0109-Convert-Sorted-List-to-Binary-Search-Tree\0109.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0109-Convert-Sorted-List-to-Binary-Search-Tree\0109.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0110-Balanced-Binary-Tree\0110.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0110-Balanced-Binary-Tree\0110.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0111-Minimum-Depth-of-Binary-Tree\0111.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0111-Minimum-Depth-of-Binary-Tree\0111.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0112-Path-Sum\0112.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0112-Path-Sum\0112.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0113-Path-Sum-II\0113.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0113-Path-Sum-II\0113.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0114-Flatten-Binary-Tree-to-Linked-List\0114.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0114-Flatten-Binary-Tree-to-Linked-List\0114.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0115-Distinct-Subsequences\0115.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0115-Distinct-Subsequences\0115.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0116-Populating-Next-Right-Pointers-in-Each-Node\116.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0116-Populating-Next-Right-Pointers-in-Each-Node\116.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0117-Populating-Next-Right-Pointers-in-Each-Node-II\0117.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0117-Populating-Next-Right-Pointers-in-Each-Node-II\0117.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0118-Pascal's-Triangle\0118.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0118-Pascal's-Triangle\0118.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0119-Pascal's-Triangle-II\0119.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0119-Pascal's-Triangle-II\0119.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0120-Triangle\0120.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0120-Triangle\0120.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0121-Best-Time-to-Buy-and-Sell-Stock\0121.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0121-Best-Time-to-Buy-and-Sell-Stock\0121.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0122-Best-Time-to-Buy-and-Sell-Stock-II\0122.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0122-Best-Time-to-Buy-and-Sell-Stock-II\0122.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0123-Best-Time-to-Buy-and-Sell-Stock-III\0123.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0123-Best-Time-to-Buy-and-Sell-Stock-III\0123.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0124-Binary-Tree-Maximum-Path-Sum\0124.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0124-Binary-Tree-Maximum-Path-Sum\0124.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0125-Valid-Palindrome\0125.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0125-Valid-Palindrome\0125.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0126-Word-Ladder-II\0126.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0126-Word-Ladder-II\0126.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0127-Word-Ladder\0127.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0127-Word-Ladder\0127.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0128-Longest-Consecutive-Sequence\0128.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0128-Longest-Consecutive-Sequence\0128.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0129-Sum-Root-to-Leaf-Numbers\0129.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0129-Sum-Root-to-Leaf-Numbers\0129.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0130-Surrounded-Regions\0130.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0130-Surrounded-Regions\0130.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0131-Palindrome-Partitioning\0131.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0131-Palindrome-Partitioning\0131.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0132-Palindrome-Partitioning-II\0132.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0132-Palindrome-Partitioning-II\0132.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0133-Clone-Graph\0133.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0133-Clone-Graph\0133.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0134-Gas-Station\0134.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0134-Gas-Station\0134.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0135-Candy\0135.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0135-Candy\0135.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0136-Single-Number\0136.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0136-Single-Number\0136.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0137-Single-Number-II\0137.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0137-Single-Number-II\0137.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0138-Copy-List-with-Random-Pointer\0138.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0138-Copy-List-with-Random-Pointer\0138.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0139-Word-Break\0139.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0139-Word-Break\0139.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0140-Word-Break-II\0140.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0140-Word-Break-II\0140.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0141-Linked-List-Cycle\0141.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0141-Linked-List-Cycle\0141.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0142-Linked-List-Cycle-II\0142.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0142-Linked-List-Cycle-II\0142.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0143-Reorder-List\0143.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0143-Reorder-List\0143.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0144-Binary-Tree-Preorder-Traversal\0144.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0144-Binary-Tree-Preorder-Traversal\0144.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0145-Binary-Tree-Postorder-Traversal\0145.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0145-Binary-Tree-Postorder-Traversal\0145.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0146-LRU-Cache\0146.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0146-LRU-Cache\0146.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0147-Insertion-Sort-List\0147.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0147-Insertion-Sort-List\0147.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0148-Sort-List\0148.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0148-Sort-List\0148.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0149-Max-Points-on-a-Line\0149.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0149-Max-Points-on-a-Line\0149.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0150-Evaluate-Reverse-Polish-Notation\0150.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0150-Evaluate-Reverse-Polish-Notation\0150.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0151-Reverse-Words-in-a-String\0151.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0151-Reverse-Words-in-a-String\0151.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0152-Maximum-Product-Subarray\0152.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0152-Maximum-Product-Subarray\0152.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0153-Find-Minimum-in-Rotated-Sorted-Array\0153.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0153-Find-Minimum-in-Rotated-Sorted-Array\0153.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0154-Find-Minimum-in-Rotated-Sorted-Array-II\0154.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0154-Find-Minimum-in-Rotated-Sorted-Array-II\0154.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0155-Min-Stack\0155.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0155-Min-Stack\0155.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0160-Intersection-of-Two-Linked-Lists\0160.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0160-Intersection-of-Two-Linked-Lists\0160.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0162-Find-Peak-Element\0162.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0162-Find-Peak-Element\0162.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0165-Compare-Version-Numbers\0165.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0165-Compare-Version-Numbers\0165.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0166-Fraction-to-Recurring-Decimal\0166.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0166-Fraction-to-Recurring-Decimal\0166.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0167-Two-Sum-II-Input-array-is-sorted\0167.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0167-Two-Sum-II-Input-array-is-sorted\0167.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0168-Excel-Sheet-Column-Title\0168.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0168-Excel-Sheet-Column-Title\0168.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0169-Majority-Element\0169.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0169-Majority-Element\0169.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0171-Excel-Sheet-Column-Number\0171.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0171-Excel-Sheet-Column-Number\0171.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0172-Factorial-Trailing-Zeroes\0172.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0172-Factorial-Trailing-Zeroes\0172.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0173-Binary-Search-Tree-Iterator\0173.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0173-Binary-Search-Tree-Iterator\0173.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0174-Dungeon-Game\0174.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0174-Dungeon-Game\0174.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0179-Largest-Number\0179.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0179-Largest-Number\0179.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0187-Repeated-DNA-Sequences\0187.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0187-Repeated-DNA-Sequences\0187.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0188-Best-Time-to-Buy-and-Sell-Stock-IV\0188.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0188-Best-Time-to-Buy-and-Sell-Stock-IV\0188.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0189-Rotate-Array\0189.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0189-Rotate-Array\0189.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0190-Reverse-Bits\0190.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0190-Reverse-Bits\0190.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0191-Number-of-1-Bits\0191.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0191-Number-of-1-Bits\0191.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0198-House-Robber\0198.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0198-House-Robber\0198.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0199-Binary-Tree-Right-Side-View\0199.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0199-Binary-Tree-Right-Side-View\0199.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0200-Number-of-Islands\0200.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0200-Number-of-Islands\0200.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0201-Bitwise-AND-of-Numbers-Range\0201.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0201-Bitwise-AND-of-Numbers-Range\0201.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0202-Happy-Number\0202.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0202-Happy-Number\0202.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0203-Remove-Linked-List-Elements\0203.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0203-Remove-Linked-List-Elements\0203.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0204-Count-Primes\0204.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0204-Count-Primes\0204.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0205-Isomorphic-Strings\0205.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0205-Isomorphic-Strings\0205.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0206-Reverse-Linked-List\0206.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0206-Reverse-Linked-List\0206.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0207-Course-Schedule\0207.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0207-Course-Schedule\0207.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0208-Implement-Trie-(Prefix-Tree)\0208.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0208-Implement-Trie-(Prefix-Tree)\0208.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0209-Minimum-Size-Subarray-Sum\0209.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0209-Minimum-Size-Subarray-Sum\0209.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0210-Course-Schedule-II\0210.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0210-Course-Schedule-II\0210.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0211-Add-and-Search-Word-Data-structure-design\0211.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0211-Add-and-Search-Word-Data-structure-design\0211.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0212-Word-Search-II\0212.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0212-Word-Search-II\0212.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0213-House-Robber-II\0213.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0213-House-Robber-II\0213.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0215-Kth-Largest-Element-in-an-Array\0215.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0215-Kth-Largest-Element-in-an-Array\0215.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0216-Combination-Sum-III\0216.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0216-Combination-Sum-III\0216.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0217-Contains-Duplicate\0217.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0217-Contains-Duplicate\0217.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0218-The-Skyline-Problem\0218.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0218-The-Skyline-Problem\0218.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0219-Contains-Duplicate-II\0219.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0219-Contains-Duplicate-II\0219.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0220-Contains-Duplicate-III\0220.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0220-Contains-Duplicate-III\0220.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0221-Maximal-Square\0221.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0221-Maximal-Square\0221.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0222-Count-Complete-Tree-Nodes\0222.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0222-Count-Complete-Tree-Nodes\0222.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0223-Rectangle-Area\0223.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0223-Rectangle-Area\0223.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0224-Basic-Calculator\0224.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0224-Basic-Calculator\0224.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0226-Invert-Binary-Tree\0226.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0226-Invert-Binary-Tree\0226.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0228-Summary-Ranges\0228.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0228-Summary-Ranges\0228.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0229-Majority-Element-II\0229.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0229-Majority-Element-II\0229.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0230-Kth-Smallest-Element-in-a-BST\0230.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0230-Kth-Smallest-Element-in-a-BST\0230.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0231-Power-of-Two\231.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0231-Power-of-Two\231.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0234-Palindrome-Linked-List\0234.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0234-Palindrome-Linked-List\0234.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0235-Lowest-Common-Ancestor-of-a-Binary-Search-Tree\0235.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0235-Lowest-Common-Ancestor-of-a-Binary-Search-Tree\0235.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0236-Lowest-Common-Ancestor-of-a-Binary-Tree\0236.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0236-Lowest-Common-Ancestor-of-a-Binary-Tree\0236.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0237-Delete-Node-in-a-Linked-List\0237.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0237-Delete-Node-in-a-Linked-List\0237.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0238-Product-of-Array-Except-Self\0238.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0238-Product-of-Array-Except-Self\0238.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0239-Sliding-Window-Maximum\0239.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0239-Sliding-Window-Maximum\0239.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0240-Search-a-2D-Matrix-II\0240.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0240-Search-a-2D-Matrix-II\0240.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0241-Different-Ways-to-Add-Parentheses\0241.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0241-Different-Ways-to-Add-Parentheses\0241.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0242-Valid-Anagram\0242.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0242-Valid-Anagram\0242.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0253-Meeting-Rooms-II\0253.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0253-Meeting-Rooms-II\0253.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0257-Binary-Tree-Paths\0257.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0257-Binary-Tree-Paths\0257.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0260-Single-Number-III\0260.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0260-Single-Number-III\0260.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0263-Ugly-Number\0263.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0263-Ugly-Number\0263.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0264-Ugly-Number-II\0264.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0264-Ugly-Number-II\0264.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0268-Missing-Number\0268.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0268-Missing-Number\0268.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0274-H-Index\0274.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0274-H-Index\0274.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0275-H-Index-II\0275.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0275-H-Index-II\0275.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0278-First-Bad-Version\0278.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0278-First-Bad-Version\0278.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0279-Perfect-Squares\0279.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0279-Perfect-Squares\0279.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0283-Move-Zeroes\0283.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0283-Move-Zeroes\0283.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0287-Find-the-Duplicate-Number\0287.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0287-Find-the-Duplicate-Number\0287.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0289-Game-of-Life\0289.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0289-Game-of-Life\0289.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0290-Word-Pattern\0290.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0290-Word-Pattern\0290.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0297-Serialize-and-Deserialize-Binary-Tree\0297.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0297-Serialize-and-Deserialize-Binary-Tree\0297.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0300-Longest-Increasing-Subsequence\0300.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0300-Longest-Increasing-Subsequence\0300.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0303-Range-Sum-Query-Immutable\0303.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0303-Range-Sum-Query-Immutable\0303.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0307-Range-Sum-Query-Mutable\0307.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0307-Range-Sum-Query-Mutable\0307.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0309-Best-Time-to-Buy-and-Sel-Stock-with-Cooldown\0309.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0309-Best-Time-to-Buy-and-Sel-Stock-with-Cooldown\0309.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0310-Insert-Delete-GetRandom-O(1)\0310.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0310-Insert-Delete-GetRandom-O(1)\0310.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0316-Remove-Duplicate-Letters\0316.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0316-Remove-Duplicate-Letters\0316.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0319-Bulb-Switcher\0319.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0319-Bulb-Switcher\0319.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0322-Coin-Change\0322.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0322-Coin-Change\0322.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0325-Maximum-Size-Subarray-Sum-Equals-k\0325.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0325-Maximum-Size-Subarray-Sum-Equals-k\0325.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0326-Power-of-Three\0326.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0326-Power-of-Three\0326.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0328-Odd-Even-Linked-List\0328.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0328-Odd-Even-Linked-List\0328.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0331-Verify-Preorder-Serialization-of-a-Binary-Tree\0331.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0331-Verify-Preorder-Serialization-of-a-Binary-Tree\0331.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0337-House-Robber-III\0337.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0337-House-Robber-III\0337.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0343-Integer-Break\0343.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0343-Integer-Break\0343.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0344-Reverse-String\0344.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0344-Reverse-String\0344.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0345-Reverse-Vowels-of-a-String\0345.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0345-Reverse-Vowels-of-a-String\0345.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0347-Top-K-Frequent-Elements\0347.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0347-Top-K-Frequent-Elements\0347.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0349-Intersection-of-Two-Arrays\0349.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0349-Intersection-of-Two-Arrays\0349.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0350-Intersection-of-Two-Arrays-II\0350.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0350-Intersection-of-Two-Arrays-II\0350.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0352-Data-Stream-as-Disjoint-Intervals\0352.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0352-Data-Stream-as-Disjoint-Intervals\0352.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0354-Russian-Doll-Envelopes\0354.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0354-Russian-Doll-Envelopes\0354.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0365-Water-and-Jug-Problem\0365.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0365-Water-and-Jug-Problem\0365.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0371-Sum-of-Two-Integers\0371.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0371-Sum-of-Two-Integers\0371.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0377-Combination-Sum-IV\0377.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0377-Combination-Sum-IV\0377.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0384-Shuffle-an-Array\0384.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0384-Shuffle-an-Array\0384.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0389-Find-the-Difference\0389.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0389-Find-the-Difference\0389.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0392-Is-Subsequence\0392.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0392-Is-Subsequence\0392.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0401-Binary-Watch\0401.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0401-Binary-Watch\0401.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0404-Sum-of-Left-Leaves\0404.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0404-Sum-of-Left-Leaves\0404.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0409-Longest-Palindrome\0409.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0409-Longest-Palindrome\0409.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0416-Partition-Equal-Subset-Sum\0416.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0416-Partition-Equal-Subset-Sum\0416.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0423-Reconstruct-Original-Digits-from-English\0423.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0423-Reconstruct-Original-Digits-from-English\0423.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0424-Longest-Repeating-Character-Replacement\0424.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0424-Longest-Repeating-Character-Replacement\0424.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0435-Non-overlapping-Intervals\0435.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0435-Non-overlapping-Intervals\0435.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0437-Path-Sum-III\0437.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0437-Path-Sum-III\0437.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0438-Find-All-Anagrams-in-a-String\0438.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0438-Find-All-Anagrams-in-a-String\0438.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0445-Add-Two-Numbers-II\0445.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0445-Add-Two-Numbers-II\0445.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0446-Arithmetic-Slices-II-Subsequence\0446.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0446-Arithmetic-Slices-II-Subsequence\0446.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0447-Number-of-Boomerangs\0447.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0447-Number-of-Boomerangs\0447.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0450-Delete-Node-in-a-BST\0450.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0450-Delete-Node-in-a-BST\0450.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0451-Sort-Characters-By-Frequency\0451.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0451-Sort-Characters-By-Frequency\0451.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0452-Minimum-Number-of-Arrows-to-Burst-Balloons\0452.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0452-Minimum-Number-of-Arrows-to-Burst-Balloons\0452.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0453-Minimum-Moves-to-Equal-Array-Elements\0453.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0453-Minimum-Moves-to-Equal-Array-Elements\0453.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0454-4Sum-II\0454.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0454-4Sum-II\0454.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0455-Assign-Cookies\0455.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0455-Assign-Cookies\0455.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0458-Poor-Pigs\0458.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0458-Poor-Pigs\0458.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0459-Repeated-Substring-Pattern\0459.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0459-Repeated-Substring-Pattern\0459.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0462-Minimum-Moves-to-Equal-Array-Elements-II\0462.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0462-Minimum-Moves-to-Equal-Array-Elements-II\0462.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0473-Matchsticks-to-Square\0473.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0473-Matchsticks-to-Square\0473.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0474-Ones-and-Zeroes\0474.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0474-Ones-and-Zeroes\0474.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0486-Predict-the-Winner\0486.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0486-Predict-the-Winner\0486.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0492-Construct-the-Rectangle\0492.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0492-Construct-the-Rectangle\0492.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0494-Target-Sum\0494.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0494-Target-Sum\0494.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0496-Next-Greater-Element-I\0496.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0496-Next-Greater-Element-I\0496.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0503-Next-Greater-Element-II\0503.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0503-Next-Greater-Element-II\0503.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0520-Detect-Capital\0520.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0520-Detect-Capital\0520.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0524-Longest-Word-in-Dictionary-through-Deleting\0524.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0524-Longest-Word-in-Dictionary-through-Deleting\0524.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0525-Contiguous-Array\0525.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0525-Contiguous-Array\0525.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0528-Random-Pick-with-Weight\0528.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0528-Random-Pick-with-Weight\0528.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0530-Minimum-Absolute-Difference-in-BST\0530.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0530-Minimum-Absolute-Difference-in-BST\0530.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0543-Diameter-of-Binary-Tree\0543.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0543-Diameter-of-Binary-Tree\0543.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0547-Friend-Circles\0547.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0547-Friend-Circles\0547.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0559-Maximum-Depth-of-N-ary-Tree\0559.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0559-Maximum-Depth-of-N-ary-Tree\0559.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0560-Subarray-Sum-Equals-K\0560.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0560-Subarray-Sum-Equals-K\0560.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0567-Permutation-in-String\0567.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0567-Permutation-in-String\0567.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0583-Delete-Operation-for-Two-Strings\0583.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0583-Delete-Operation-for-Two-Strings\0583.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0587-Erect-the-Fence\0587.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0587-Erect-the-Fence\0587.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0594-Longest-Harmonious-Subsequence\0594.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0594-Longest-Harmonious-Subsequence\0594.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0605-Can-Place-Flowers\0605.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0605-Can-Place-Flowers\0605.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0637-Average-of-Levels-in-Binary-Tree\0637.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0637-Average-of-Levels-in-Binary-Tree\0637.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0650-2-Keys-Keyboard\0650.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0650-2-Keys-Keyboard\0650.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0652-Find-Duplicate-Subtrees\0652.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0652-Find-Duplicate-Subtrees\0652.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0653-Two-Sum-IV-Input-is-a-BST\0653.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0653-Two-Sum-IV-Input-is-a-BST\0653.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0654-Maximum-Binary-Tree\0654.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0654-Maximum-Binary-Tree\0654.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0678-Valid-Parenthesis-String\0678.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0678-Valid-Parenthesis-String\0678.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0684-Redundant-Connection\0684.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0684-Redundant-Connection\0684.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0687-Longest-Univalue-Path\0687.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0687-Longest-Univalue-Path\0687.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0695-Max-Area-of-Island\0695.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0695-Max-Area-of-Island\0695.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0697-Degree-of-an-Array\0697.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0697-Degree-of-an-Array\0697.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0698-Partition-to-K-Equal-Sum-Subsets\0698.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0698-Partition-to-K-Equal-Sum-Subsets\0698.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0700-Search-in-a-Binary-Search-Tree\0700.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0700-Search-in-a-Binary-Search-Tree\0700.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0733-Flood-Fill\0733.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0733-Flood-Fill\0733.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0739-Daily-Temperatures\0739.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0739-Daily-Temperatures\0739.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0742-Closest-Leaf-in-a-Binary-Tree\0742.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0742-Closest-Leaf-in-a-Binary-Tree\0742.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0776-Toeplitz-Matrix\0776.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0776-Toeplitz-Matrix\0776.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0783-Minimum-Distance-Between-BST-Nodes\0783.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0783-Minimum-Distance-Between-BST-Nodes\0783.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0788-Rotated-Digits\0788.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0788-Rotated-Digits\0788.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0790-Domino-and-Tromino-Tiling\0790.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0790-Domino-and-Tromino-Tiling\0790.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0793-Preimage-Size-of-Factorial-Zeroes-Function\0793.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0793-Preimage-Size-of-Factorial-Zeroes-Function\0793.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0795-Number-of-Subarrays-with-Bounded-Maximum\0795.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0795-Number-of-Subarrays-with-Bounded-Maximum\0795.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0813-Largest-Sum-of-Averages\0813.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0813-Largest-Sum-of-Averages\0813.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0820-Short-Encoding-of-Words\0820.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0820-Short-Encoding-of-Words\0820.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0824-Goat-Latin\0824.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0824-Goat-Latin\0824.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0825-Friends-Of-Appropriate-Ages\0825.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0825-Friends-Of-Appropriate-Ages\0825.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0826-Most-Profit-Assigning-Work\0826.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0826-Most-Profit-Assigning-Work\0826.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0827-Making-A-Large-Island\0827.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0827-Making-A-Large-Island\0827.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0828-Unique-Letter-String\0828.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0828-Unique-Letter-String\0828.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0829-Consecutive-Numbers-Sum\0829.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0829-Consecutive-Numbers-Sum\0829.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0832-Flipping-an-Image\0832.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0832-Flipping-an-Image\0832.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0834-Sum-of-Distances-in-Tree\0834.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0834-Sum-of-Distances-in-Tree\0834.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0836-Rectangle-Overlap\0836.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0836-Rectangle-Overlap\0836.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0844-Backspace-String-Compare\0844.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0844-Backspace-String-Compare\0844.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0845-Longest-Mountain-in-Array\0845.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0845-Longest-Mountain-in-Array\0845.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0846-Hand-of-Straights\0846.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0846-Hand-of-Straights\0846.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0847-Shortest-Path-Visiting-All-Nodes\0847.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0847-Shortest-Path-Visiting-All-Nodes\0847.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0852-Peak-Index-in-a-Mountain-Array\0852.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0852-Peak-Index-in-a-Mountain-Array\0852.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0857-Minimum-Cost-to-Hire-K-Workers\0857.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0857-Minimum-Cost-to-Hire-K-Workers\0857.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0859-Buddy-Strings\0859.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0859-Buddy-Strings\0859.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0872-Leaf-Similar-Trees\0872.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0872-Leaf-Similar-Trees\0872.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0873-Length-of-Longest-Fibonacci-Subsequence\0873.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0873-Length-of-Longest-Fibonacci-Subsequence\0873.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0874-Walking-Robot-Simulation\0874.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0874-Walking-Robot-Simulation\0874.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0876-Middle-of-the-Linked-List\0876.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0876-Middle-of-the-Linked-List\0876.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0878-Nth-Magical-Number\0878.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0878-Nth-Magical-Number\0878.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0891-Sum-of-Subsequence-Widths\0891.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0891-Sum-of-Subsequence-Widths\0891.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0892-Surface-Area-of-3D-Shapes\0892.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0892-Surface-Area-of-3D-Shapes\0892.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0895-Maximum-Frequency-Stack\0895.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0895-Maximum-Frequency-Stack\0895.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0901-Online-Stock-Span\0901.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0901-Online-Stock-Span\0901.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0902-Numbers-At-Most-N-Given-Digit-Set\0902.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0902-Numbers-At-Most-N-Given-Digit-Set\0902.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0904-Fruit-Into-Baskets\0904.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0904-Fruit-Into-Baskets\0904.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0907-Sum-of-Subarray-Minimums\0907.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0907-Sum-of-Subarray-Minimums\0907.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0914-X-of-a-Kind-in-a-Deck-of-Cards\0914.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0914-X-of-a-Kind-in-a-Deck-of-Cards\0914.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0917-Reverse-Only-Letters\0917.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0917-Reverse-Only-Letters\0917.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0918-Maximum-Sum-Circular-Subarray\0918.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0918-Maximum-Sum-Circular-Subarray\0918.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0919-Complete-Binary-Tree-Inserter\0919.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0919-Complete-Binary-Tree-Inserter\0919.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0920-Number-of-Music-Playlists\0920.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0920-Number-of-Music-Playlists\0920.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0921-Minimum-Add-to-Make-Parentheses-Valid\0921.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0921-Minimum-Add-to-Make-Parentheses-Valid\0921.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0922-Sort-Array-By-Parity-II\0922.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0922-Sort-Array-By-Parity-II\0922.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0923-3Sum-With-Multiplicity\0923.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0923-3Sum-With-Multiplicity\0923.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0925-Long-Pressed-Name\0925.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0925-Long-Pressed-Name\0925.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0926-Flip-String-to-Monotone-Increasing\0926.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0926-Flip-String-to-Monotone-Increasing\0926.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0927-Three-Equal-Parts\0927.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0927-Three-Equal-Parts\0927.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0929-Unique-Email-Addresses\0929.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0929-Unique-Email-Addresses\0929.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0930-Binary-Subarrays-With-Sum\0930.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0930-Binary-Subarrays-With-Sum\0930.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0931-Minimum-Falling-Path-Sum\0931.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0931-Minimum-Falling-Path-Sum\0931.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0932-Beautiful-Array\0932.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0932-Beautiful-Array\0932.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0933-Number-of-Recent-Calls\0933.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0933-Number-of-Recent-Calls\0933.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0934-Shortest-Bridge\0934.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0934-Shortest-Bridge\0934.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0935-Knight-Dialer\0935.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0935-Knight-Dialer\0935.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0936-Stamping-The-Sequence\0936.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0936-Stamping-The-Sequence\0936.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0937-Reorder-Log-Files\0937.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0937-Reorder-Log-Files\0937.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0938-Range-Sum-of-BST\0938.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0938-Range-Sum-of-BST\0938.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0939-Minimum-Area-Rectangle\0939.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0939-Minimum-Area-Rectangle\0939.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0940-Distinct-Subsequences-II\0940.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0940-Distinct-Subsequences-II\0940.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0941-Valid-Mountain-Array\0941.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0941-Valid-Mountain-Array\0941.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0942-DI-String-Match\0942.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0942-DI-String-Match\0942.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0943-Find-the-Shortest-Superstring\0943.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0943-Find-the-Shortest-Superstring\0943.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0944-Delete-Columns-to-Make-Sorted\0944.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0944-Delete-Columns-to-Make-Sorted\0944.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0945-Minimum-Increment-to-Make-Array-Unique\0945.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0945-Minimum-Increment-to-Make-Array-Unique\0945.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0946-Validate-Stack-Sequences\0946.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0946-Validate-Stack-Sequences\0946.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0947-Most-Stones-Removed-with-Same-Row-or-Column\0947.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0947-Most-Stones-Removed-with-Same-Row-or-Column\0947.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0948-Bag-of-Tokens\0948.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0948-Bag-of-Tokens\0948.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0949-Largest-Time-for-Given-Digits\0949.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0949-Largest-Time-for-Given-Digits\0949.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0950-Reveal-Cards-In-Increasing-Order\0950.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0950-Reveal-Cards-In-Increasing-Order\0950.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0951-Flip-Equivalent-Binary-Trees\0951.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0951-Flip-Equivalent-Binary-Trees\0951.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0953-Verifying-an-Alien-Dictionary\0953.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0953-Verifying-an-Alien-Dictionary\0953.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0954-Array-of-Doubled-Pairs\0954.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0954-Array-of-Doubled-Pairs\0954.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0955-Delete-Columns-to-Make-Sorted-II\0955.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0955-Delete-Columns-to-Make-Sorted-II\0955.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0956-Tallest-Billboard\0956.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0956-Tallest-Billboard\0956.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0957-Prison-Cells-After-N-Days\0957.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0957-Prison-Cells-After-N-Days\0957.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0958-Check-Completeness-of-a-Binary-Tree\0958.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0958-Check-Completeness-of-a-Binary-Tree\0958.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0959-Regions-Cut-By-Slashes\0959.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0959-Regions-Cut-By-Slashes\0959.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0960-Delete-Columns-to-Make-Sorted-III\0960.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0960-Delete-Columns-to-Make-Sorted-III\0960.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0961-N-Repeated-Element-in-Size-2N-Array\0961.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0961-N-Repeated-Element-in-Size-2N-Array\0961.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0962-Maximum-Width-Ramp\0962.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0962-Maximum-Width-Ramp\0962.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0963-Minimum-Area-Rectangle-II\0963.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0963-Minimum-Area-Rectangle-II\0963.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0965-Univalued-Binary-Tree\0965.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0965-Univalued-Binary-Tree\0965.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0966-Vowel-Spellchecker\0966.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0966-Vowel-Spellchecker\0966.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0967-Numbers-With-Same-Consecutive-Differences\0967.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0967-Numbers-With-Same-Consecutive-Differences\0967.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0969-Pancake-Sorting\0969.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0969-Pancake-Sorting\0969.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0970-Powerful-Integers\0970.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0970-Powerful-Integers\0970.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0971-Flip-Binary-Tree-To-Match-Preorder-Traversal\0971.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0971-Flip-Binary-Tree-To-Match-Preorder-Traversal\0971.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0972-Equal-Rational-Numbers\0972.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0972-Equal-Rational-Numbers\0972.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0973-K-Closest-Points-to-Origin\0973.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0973-K-Closest-Points-to-Origin\0973.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0974-Subarray-Sums-Divisible-by-K\0974.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0974-Subarray-Sums-Divisible-by-K\0974.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0975-Odd-Even-Jump\0975.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0975-Odd-Even-Jump\0975.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0976-Largest-Perimeter-Triangle\0976.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0976-Largest-Perimeter-Triangle\0976.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0977-Squares-of-a-Sorted-Array\0977.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0977-Squares-of-a-Sorted-Array\0977.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0978-Longest-Turbulent-Subarray\0978.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0978-Longest-Turbulent-Subarray\0978.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0979-Distribute-Coins-in-Binary-Tree\0979.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0979-Distribute-Coins-in-Binary-Tree\0979.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0980-Unique-Paths-III\0980.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0980-Unique-Paths-III\0980.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0981-Time-Based-Key-Value-Store\0981.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0981-Time-Based-Key-Value-Store\0981.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0982-Triples-with-Bitwise-AND-Equal-To-Zero\0982.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0982-Triples-with-Bitwise-AND-Equal-To-Zero\0982.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0983-Minimum-Cost-For-Tickets\0983.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0983-Minimum-Cost-For-Tickets\0983.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0984-String-Without-AAA-or-BBB\0984.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0984-String-Without-AAA-or-BBB\0984.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0985-Sum-of-Even-Numbers-After-Queries\0985.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0985-Sum-of-Even-Numbers-After-Queries\0985.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0986-Interval-List-Intersections\0986.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0986-Interval-List-Intersections\0986.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0987-Vertical-Order-Traversal-of-a-Binary-Tree\0987.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0987-Vertical-Order-Traversal-of-a-Binary-Tree\0987.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0988-Smallest-String-Starting-From-Leaf\0988.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0988-Smallest-String-Starting-From-Leaf\0988.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0989-Add-to-Array-Form-of-Integer\0989.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0989-Add-to-Array-Form-of-Integer\0989.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0990-Satisfiability-of-Equality-Equations\0990.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0990-Satisfiability-of-Equality-Equations\0990.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0991-Broken-Calculator\0991.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0991-Broken-Calculator\0991.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0992-Subarrays-with-K-Different-Integers\0992.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0992-Subarrays-with-K-Different-Integers\0992.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0993-Cousins-in-Binary-Tree\0993.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0993-Cousins-in-Binary-Tree\0993.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0994-Rotting-Oranges\0994.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0994-Rotting-Oranges\0994.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0995-Minimum-Number-of-K-Consecutive-Bit-Flips\0995.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0995-Minimum-Number-of-K-Consecutive-Bit-Flips\0995.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0996-Number-of-Squareful-Arrays\0996.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0996-Number-of-Squareful-Arrays\0996.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0997-Find-the-Town-Judge\0997.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0997-Find-the-Town-Judge\0997.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0998-Maximum-Binary-Tree-II\0998.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0998-Maximum-Binary-Tree-II\0998.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0999-Available-Captures-for-Rook\0999.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\0999-Available-Captures-for-Rook\0999.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1000-Minimum-Cost-to-Merge-Stones\1000.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1000-Minimum-Cost-to-Merge-Stones\1000.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1001-Grid-Illumination\1001.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1001-Grid-Illumination\1001.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1002-Find-Common-Characters\1002.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1002-Find-Common-Characters\1002.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1003-Check-If-Word-Is-Valid-After-Substitutions\1003.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1003-Check-If-Word-Is-Valid-After-Substitutions\1003.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1004-Max-Consecutive-Ones-III\1004.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1004-Max-Consecutive-Ones-III\1004.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1005-Maximize-Sum-Of-Array-After-K-Negations\1005.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1005-Maximize-Sum-Of-Array-After-K-Negations\1005.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1006-Clumsy-Factorial\1006.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1006-Clumsy-Factorial\1006.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1007-Minimum-Domino-Rotations-For-Equal-Row\1007.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1007-Minimum-Domino-Rotations-For-Equal-Row\1007.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1008-Construct-Binary-Search-Tree-from-Preorder-Traversal\1008.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1008-Construct-Binary-Search-Tree-from-Preorder-Traversal\1008.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1009-Complement-of-Base-10-Integer\1009.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1009-Complement-of-Base-10-Integer\1009.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1010-Pairs-of-Songs-With-Total-Durations-Divisible-by-60\1010.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1010-Pairs-of-Songs-With-Total-Durations-Divisible-by-60\1010.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1011-Capacity-To-Ship-Packages-Within-D-Days\1011.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1011-Capacity-To-Ship-Packages-Within-D-Days\1011.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1012-Numbers-With-Repeated-Digits\1012.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1012-Numbers-With-Repeated-Digits\1012.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1013-Partition-Array-Into-Three-Parts-With-Equal-Sum\1013.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1013-Partition-Array-Into-Three-Parts-With-Equal-Sum\1013.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1014-Best-Sightseeing-Pair\1014.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1014-Best-Sightseeing-Pair\1014.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1015-Smallest-Integer-Divisible-by-K\1015.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1015-Smallest-Integer-Divisible-by-K\1015.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1017-Convert-to-Base-2\1017.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1017-Convert-to-Base-2\1017.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1018-Binary-Prefix-Divisible-By-5\1018.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1018-Binary-Prefix-Divisible-By-5\1018.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1019-Next-Greater-Node-In-Linked-List\1019.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1019-Next-Greater-Node-In-Linked-List\1019.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1020-Number-of-Enclaves\1020.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1020-Number-of-Enclaves\1020.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1021-Remove-Outermost-Parentheses\1021.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1021-Remove-Outermost-Parentheses\1021.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1022-Sum-of-Root-To-Leaf-Binary-Numbers\1022.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1022-Sum-of-Root-To-Leaf-Binary-Numbers\1022.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1023-Camelcase-Matching\1023.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1023-Camelcase-Matching\1023.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1024-Video-Stitching\1024.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1024-Video-Stitching\1024.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1025-Divisor-Game\1025.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1025-Divisor-Game\1025.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1026-Maximum-Difference-Between-Node-and-Ancestor\1026.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1026-Maximum-Difference-Between-Node-and-Ancestor\1026.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1027-Longest-Arithmetic-Sequence\1027.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1027-Longest-Arithmetic-Sequence\1027.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1033-Moving-Stones-Until-Consecutive\1033.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1033-Moving-Stones-Until-Consecutive\1033.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1034-Coloring-A-Border\1034.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1034-Coloring-A-Border\1034.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1035-Uncrossed-Lines\1035.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1035-Uncrossed-Lines\1035.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1037-Valid-Boomerang\1037.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1037-Valid-Boomerang\1037.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1038-Binary-Search-Tree-to-Greater-Sum-Tree\1038.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1038-Binary-Search-Tree-to-Greater-Sum-Tree\1038.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1039-Minimum-Score-Triangulation-of-Polygon\1039.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1039-Minimum-Score-Triangulation-of-Polygon\1039.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1041-Robot-Bounded-In-Circle\1041.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1041-Robot-Bounded-In-Circle\1041.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1042-Flower-Planting-With-No-Adjacent\1042.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1042-Flower-Planting-With-No-Adjacent\1042.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1043-Partition-Array-for-Maximum-Sum\1043.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1043-Partition-Array-for-Maximum-Sum\1043.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1046-Last-Stone-Weight\1046.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1046-Last-Stone-Weight\1046.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1047-Remove-All-Adjacent-Duplicates-In-String\1047.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1047-Remove-All-Adjacent-Duplicates-In-String\1047.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1048-Longest-String-Chain\1048.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1048-Longest-String-Chain\1048.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1049-Last-Stone-Weight-II\1049.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1049-Last-Stone-Weight-II\1049.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1051-Height-Checker\1051.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1051-Height-Checker\1051.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1052-Grumpy-Bookstore-Owner\1052.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1052-Grumpy-Bookstore-Owner\1052.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1053-Previous-Permutation-With-One-Swap\1053.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1053-Previous-Permutation-With-One-Swap\1053.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1054-Distant-Barcodes\1054.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1054-Distant-Barcodes\1054.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1061-Lexicographically-Smallest-Equivalent-String\1061.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1061-Lexicographically-Smallest-Equivalent-String\1061.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1064-Fixed-Point\1064.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1064-Fixed-Point\1064.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1065-Index-Pairs-of-a-String\1065.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1065-Index-Pairs-of-a-String\1065.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1066-Campus-Bikes-II\1066.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1066-Campus-Bikes-II\1066.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1067-Digit-Count-in-Range\1067.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1067-Digit-Count-in-Range\1067.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1071-Greatest-Common-Divisor-of-Strings\1071.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1071-Greatest-Common-Divisor-of-Strings\1071.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1072-Flip-Columns-For-Maximum-Number-of-Equal-Rows\1072.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1072-Flip-Columns-For-Maximum-Number-of-Equal-Rows\1072.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1073-Adding-Two-Negabinary-Numbers\1073.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1073-Adding-Two-Negabinary-Numbers\1073.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1074-Number-of-Submatrices-That-Sum-to-Target\1074.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1074-Number-of-Submatrices-That-Sum-to-Target\1074.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1078-Occurrences-After-Bigram\1078.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1078-Occurrences-After-Bigram\1078.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1079-Letter-Tile-Possibilities\1079.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1079-Letter-Tile-Possibilities\1079.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1080-Insufficient-Nodes-in-Root-to-Leaf-Paths\1080.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1080-Insufficient-Nodes-in-Root-to-Leaf-Paths\1080.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1081-Smallest-Subsequence-of-Distinct-Characters\1081.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1081-Smallest-Subsequence-of-Distinct-Characters\1081.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1085-Sum-of-Digits-in-the-Minimum-Number\1085.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1085-Sum-of-Digits-in-the-Minimum-Number\1085.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1086-High-Five\1086.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1086-High-Five\1086.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1087-Brace-Expansion\1087.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1087-Brace-Expansion\1087.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1089-Duplicate-Zeros\1089.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1089-Duplicate-Zeros\1089.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1090-Largest-Values-From-Labels\1090.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1090-Largest-Values-From-Labels\1090.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1091-Shortest-Path-in-Binary-Matrix\1091.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1091-Shortest-Path-in-Binary-Matrix\1091.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1093-Statistics-from-a-Large-Sample\1093.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1093-Statistics-from-a-Large-Sample\1093.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1094-Car-Pooling\1094.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1094-Car-Pooling\1094.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1095-Find-in-Mountain-Array\1095.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1095-Find-in-Mountain-Array\1095.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1096-Brace-Expansion-II\1096.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1096-Brace-Expansion-II\1096.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1099-Two-Sum-Less-Than-K\1099.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1099-Two-Sum-Less-Than-K\1099.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1100-Find-K-Length-Substrings-With-No-Repeated-Characters\1100.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1100-Find-K-Length-Substrings-With-No-Repeated-Characters\1100.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1101-The-Earliest-Moment-When-Everyone-Become-Friends\1101.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1101-The-Earliest-Moment-When-Everyone-Become-Friends\1101.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1102-Path-With-Maximum-Minimum-Value\1102.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1102-Path-With-Maximum-Minimum-Value\1102.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1103-Distribute-Candies-to-People\1103.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1103-Distribute-Candies-to-People\1103.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1104-Path-In-Zigzag-Labelled-Binary-Tree\1104.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1104-Path-In-Zigzag-Labelled-Binary-Tree\1104.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1105-Filling-Bookcase-Shelves\1105.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1105-Filling-Bookcase-Shelves\1105.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1106-Parsing-A-Boolean-Expression\1106.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1106-Parsing-A-Boolean-Expression\1106.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1108-Defanging-an-IP-Address\1108.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1108-Defanging-an-IP-Address\1108.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1109-Corporate-Flight-Bookings\1109.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1109-Corporate-Flight-Bookings\1109.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1110-Delete-Nodes-And-Return-Forest\1110.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1110-Delete-Nodes-And-Return-Forest\1110.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1111-Maximum-Nesting-Depth-of-Two-Valid-Parentheses-Strings\1111.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1111-Maximum-Nesting-Depth-of-Two-Valid-Parentheses-Strings\1111.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1118-Number-of-Days-in-a-Month\1118.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1118-Number-of-Days-in-a-Month\1118.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1119-Remove-Vowels-from-a-String\1119.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1119-Remove-Vowels-from-a-String\1119.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1120-Maximum-Average-Subtree\1120.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1120-Maximum-Average-Subtree\1120.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1121-Divide-Array-Into-Increasing-Sequences\1121.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1121-Divide-Array-Into-Increasing-Sequences\1121.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1122-Relative-Sort-Array\1122.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1122-Relative-Sort-Array\1122.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1123-Lowest-Common-Ancestor-of-Deepest-Leaves\1123.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1123-Lowest-Common-Ancestor-of-Deepest-Leaves\1123.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1124-Longest-Well-Performing-Interval\1124.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1124-Longest-Well-Performing-Interval\1124.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1125-Smallest-Sufficient-Team\1125.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1125-Smallest-Sufficient-Team\1125.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1128-Number-of-Equivalent-Domino-Pairs\1128.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1128-Number-of-Equivalent-Domino-Pairs\1128.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1129-Shortest-Path-with-Alternating-Colors\1129.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1129-Shortest-Path-with-Alternating-Colors\1129.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1130-Minimum-Cost-Tree-From-Leaf-Values\1130.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1130-Minimum-Cost-Tree-From-Leaf-Values\1130.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1131-Maximum-of-Absolute-Value-Expression\1131.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1131-Maximum-of-Absolute-Value-Expression\1131.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1133-Largest-Unique-Number\1133.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1133-Largest-Unique-Number\1133.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1134-Armstrong-Number\1134.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1134-Armstrong-Number\1134.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1135-Connecting-Cities-With-Minimum-Cost\1135.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1135-Connecting-Cities-With-Minimum-Cost\1135.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1136-Parallel-Courses\1136.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1136-Parallel-Courses\1136.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1137-N-th-Tribonacci-Number\1137.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1137-N-th-Tribonacci-Number\1137.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1138-Alphabet-Board-Path\1138.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1138-Alphabet-Board-Path\1138.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1139-Largest-1-Bordered-Square\1139.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1139-Largest-1-Bordered-Square\1139.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1140-Stone-Game-II\1140.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1140-Stone-Game-II\1140.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1143-Longest-Common-Subsequence\1143.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1143-Longest-Common-Subsequence\1143.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1144-Decrease-Elements-To-Make-Array-Zigzag\1144.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1144-Decrease-Elements-To-Make-Array-Zigzag\1144.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1145-Binary-Tree-Coloring-Game\1145.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1145-Binary-Tree-Coloring-Game\1145.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1146-Snapshot-Array\1146.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1146-Snapshot-Array\1146.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1147-Longest-Chunked-Palindrome-Decomposition\1147.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1147-Longest-Chunked-Palindrome-Decomposition\1147.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1150-Check-If-a-Number-Is-Majority-Element-in-a-Sorted-Array\1150.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1150-Check-If-a-Number-Is-Majority-Element-in-a-Sorted-Array\1150.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1151-Minimum-Swaps-to-Group-All-1's-Together\1151.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1151-Minimum-Swaps-to-Group-All-1's-Together\1151.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1152-Analyze-User-Website-Visit-Pattern\1152.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1152-Analyze-User-Website-Visit-Pattern\1152.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1153-String-Transforms-Into-Another-String\1153.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1153-String-Transforms-Into-Another-String\1153.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1154-Day-of-the-Year\1154.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1154-Day-of-the-Year\1154.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1155-Number-of-Dice-Rolls-With-Target-Sum\1155.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1155-Number-of-Dice-Rolls-With-Target-Sum\1155.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1156-Swap-For-Longest-Repeated-Character-Substring\1156.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1156-Swap-For-Longest-Repeated-Character-Substring\1156.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1157-Online-Majority-Element-In-Subarray\1157.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1157-Online-Majority-Element-In-Subarray\1157.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1160-Find-Words-That-Can-Be-Formed-by-Characters\1160.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1160-Find-Words-That-Can-Be-Formed-by-Characters\1160.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1161-Maximum-Level-Sum-of-a-Binary-Tree\1161.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1161-Maximum-Level-Sum-of-a-Binary-Tree\1161.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1162-As-Far-from-Land-as-Possible\1162.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1162-As-Far-from-Land-as-Possible\1162.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1165-Single-Row-Keyboard\1165.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1165-Single-Row-Keyboard\1165.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1166-Design-File-System\1166.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1166-Design-File-System\1166.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1167-Minimum-Cost-to-Connect-Sticks\1167.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1167-Minimum-Cost-to-Connect-Sticks\1167.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1168-Optimize-Water-Distribution-in-a-Village\1168.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1168-Optimize-Water-Distribution-in-a-Village\1168.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1169-Invalid-Transactions\1169.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1169-Invalid-Transactions\1169.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1170-Compare-Strings-by-Frequency-of-the-Smallest-Character\1170.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1170-Compare-Strings-by-Frequency-of-the-Smallest-Character\1170.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1171-Remove-Zero-Sum-Consecutive-Nodes-from-Linked-List\1171.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1171-Remove-Zero-Sum-Consecutive-Nodes-from-Linked-List\1171.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1172-Dinner-Plate-Stacks\1172.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1172-Dinner-Plate-Stacks\1172.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1175-Prime-Arrangements\1175.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1175-Prime-Arrangements\1175.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1176-Diet-Plan-Performance\1176.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1176-Diet-Plan-Performance\1176.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1184-Distance-Between-Bus-Stops\1184.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1184-Distance-Between-Bus-Stops\1184.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1185-Day-of-the-Week\1185.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1185-Day-of-the-Week\1185.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1186-Maximum-Subarray-Sum-with-One-Deletion\1186.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1186-Maximum-Subarray-Sum-with-One-Deletion\1186.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1187-Make-Array-Strictly-Increasing\1187.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1187-Make-Array-Strictly-Increasing\1187.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1189-Maximum-Number-of-Balloons\1189.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1189-Maximum-Number-of-Balloons\1189.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1190-Reverse-Substrings-Between-Each-Pair-of-Parentheses\1190.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1190-Reverse-Substrings-Between-Each-Pair-of-Parentheses\1190.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1191-K-Concatenation-Maximum-Sum\1191.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1191-K-Concatenation-Maximum-Sum\1191.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1192-Critical-Connections-in-a-Network\1192.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1192-Critical-Connections-in-a-Network\1192.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1196-How-Many-Apples-Can-You-Put-into-the-Basket\1196.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1196-How-Many-Apples-Can-You-Put-into-the-Basket\1196.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1197-Minimum-Knight-Moves\1197.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1197-Minimum-Knight-Moves\1197.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1198-Find-Smallest-Common-Element-in-All-Rows\1198.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1198-Find-Smallest-Common-Element-in-All-Rows\1198.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1199-Minimum-Time-to-Build-Blocks\1199.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1199-Minimum-Time-to-Build-Blocks\1199.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1200-Minimum-Absolute-Difference\1200.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1200-Minimum-Absolute-Difference\1200.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1201-Ugly-Number-III\1201.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1201-Ugly-Number-III\1201.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1202-Smallest-String-With-Swaps\1202.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1202-Smallest-String-With-Swaps\1202.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1207-Unique-Number-of-Occurrences\1207.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1207-Unique-Number-of-Occurrences\1207.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1208-Get-Equal-Substrings-Within-Budget\1208.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1208-Get-Equal-Substrings-Within-Budget\1208.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1209-Remove-All-Adjacent-Duplicates-in-String-II\1209.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1209-Remove-All-Adjacent-Duplicates-in-String-II\1209.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1210-Minimum-Moves-to-Reach-Target-with-Rotations\1210.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1210-Minimum-Moves-to-Reach-Target-with-Rotations\1210.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1213-Intersection-of-Three-Sorted-Arrays\1213.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1213-Intersection-of-Three-Sorted-Arrays\1213.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1214-Two-Sum-BSTs\1214.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1214-Two-Sum-BSTs\1214.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1215-Stepping-Numbers\1215.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1215-Stepping-Numbers\1215.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1216-Valid-Palindrome-III\1216.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1216-Valid-Palindrome-III\1216.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1217-Play-with-Chips\1217.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1217-Play-with-Chips\1217.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1218-Longest-Arithmetic-Subsequence-of-Given-Difference\1218.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1218-Longest-Arithmetic-Subsequence-of-Given-Difference\1218.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1219-Path-with-Maximum-Gold\1219.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1219-Path-with-Maximum-Gold\1219.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1220-Count-Vowels-Permutation\1220.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1220-Count-Vowels-Permutation\1220.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1221-Split-a-String-in-Balanced-Strings\1221.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1221-Split-a-String-in-Balanced-Strings\1221.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1222-Queens-That-Can-Attack-the-King\1222.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1222-Queens-That-Can-Attack-the-King\1222.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1223-Dice-Roll-Simulation\1223.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1223-Dice-Roll-Simulation\1223.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1224-Maximum-Equal-Frequency\1224.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1224-Maximum-Equal-Frequency\1224.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1228-Missing-Number-In-Arithmetic-Progression\1228.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1228-Missing-Number-In-Arithmetic-Progression\1228.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1229-Meeting-Scheduler\1229.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1229-Meeting-Scheduler\1229.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1230-Toss-Strange-Coins\1230.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1230-Toss-Strange-Coins\1230.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1231-Divide-Chocolate\1231.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1231-Divide-Chocolate\1231.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1232-Check-If-It-Is-a-Straight-Line\1232.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1232-Check-If-It-Is-a-Straight-Line\1232.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1233-Remove-Sub-Folders-from-the-Filesystem\1233.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1233-Remove-Sub-Folders-from-the-Filesystem\1233.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1234-Replace-the-Substring-for-Balanced-String\1234.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1234-Replace-the-Substring-for-Balanced-String\1234.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1235-Maximum-Profit-in-Job-Scheduling\1235.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1235-Maximum-Profit-in-Job-Scheduling\1235.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1237-Find-Positive-Integer-Solution-for-a-Given-Equation\1237.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1237-Find-Positive-Integer-Solution-for-a-Given-Equation\1237.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1238-Circular-Permutation-in-Binary-Representation\1238.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1238-Circular-Permutation-in-Binary-Representation\1238.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1239-Maximum-Length-of-a-Concatenated-String-with-Unique-Characters\1239.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1239-Maximum-Length-of-a-Concatenated-String-with-Unique-Characters\1239.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1240-Tiling-a-Rectangle-with-the-Fewest-Squares\1240.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1240-Tiling-a-Rectangle-with-the-Fewest-Squares\1240.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1243-Array-Transformation\1243.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1243-Array-Transformation\1243.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1244-Design-A-Leaderboard\1244.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1244-Design-A-Leaderboard\1244.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1245-Tree-Diameter\1245.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1245-Tree-Diameter\1245.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1246-Palindrome-Removal\1246.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1246-Palindrome-Removal\1246.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1247-Minimum-Swaps-to-Make-Strings-Equal\1247.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1247-Minimum-Swaps-to-Make-Strings-Equal\1247.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1248-Count-Number-of-Nice-Subarrays\1248.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1248-Count-Number-of-Nice-Subarrays\1248.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1249-Minimum-Remove-to-Make-Valid-Parentheses\1249.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1249-Minimum-Remove-to-Make-Valid-Parentheses\1249.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1250-Check-If-It-Is-a-Good-Array\1250.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1250-Check-If-It-Is-a-Good-Array\1250.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1252-Cells-with-Odd-Values-in-a-Matrix\1252.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1252-Cells-with-Odd-Values-in-a-Matrix\1252.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1253-Reconstruct-a-2-Row-Binary-Matrix\1253.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1253-Reconstruct-a-2-Row-Binary-Matrix\1253.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1254-Number-of-Closed-Islands\1254.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1254-Number-of-Closed-Islands\1254.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1255-Maximum-Score-Words-Formed-by-Letters\1255.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1255-Maximum-Score-Words-Formed-by-Letters\1255.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1256-Encode-Number\1256.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1256-Encode-Number\1256.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1257-Smallest-Common-Region\1257.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1257-Smallest-Common-Region\1257.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1258-Synonymous-Sentences\1258.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1258-Synonymous-Sentences\1258.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1259-Handshakes-That-Don't-Cross\1259.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1259-Handshakes-That-Don't-Cross\1259.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1260-Shift-2D-Grid\1260.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1260-Shift-2D-Grid\1260.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1261-Find-Elements-in-a-Contaminated-Binary-Tree\1261.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1261-Find-Elements-in-a-Contaminated-Binary-Tree\1261.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1262-Greatest-Sum-Divisible-by-Three\1262.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1262-Greatest-Sum-Divisible-by-Three\1262.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1263-Minimum-Moves-to-Move-a-Box-to-Their-Target-Location\1263.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1263-Minimum-Moves-to-Move-a-Box-to-Their-Target-Location\1263.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1266-Minimum-Time-Visiting-All-Points\1266.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1266-Minimum-Time-Visiting-All-Points\1266.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1267-Count-Servers-that-Communicate\1267.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1267-Count-Servers-that-Communicate\1267.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1268-Search-Suggestions-System\1268.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1268-Search-Suggestions-System\1268.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1269-Number-of-Ways-to-Stay-in-the-Same-Place-After-Some-Steps\1269.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1269-Number-of-Ways-to-Stay-in-the-Same-Place-After-Some-Steps\1269.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1271-Hexspeak\1271.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1271-Hexspeak\1271.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1272-Remove-Interval\1272.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1272-Remove-Interval\1272.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1273-Delete-Tree-Nodes\1273.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1273-Delete-Tree-Nodes\1273.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1274-Number-of-Ships-in-a-Rectangle\1274.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1274-Number-of-Ships-in-a-Rectangle\1274.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1275-Find-Winner-on-a-Tic-Tac-Toe-Game\1275.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1275-Find-Winner-on-a-Tic-Tac-Toe-Game\1275.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1276-Number-of-Burgers-with-No-Waste-of-Ingredients\1276.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1276-Number-of-Burgers-with-No-Waste-of-Ingredients\1276.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1277-Count-Square-Submatrices-with-All-Ones\1277.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1277-Count-Square-Submatrices-with-All-Ones\1277.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1278-Palindrome-Partitioning-III\1278.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1278-Palindrome-Partitioning-III\1278.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer\1281.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer\1281.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1282-Group-the-People-Given-the-Group-Size-They-Belong-To\1282.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1282-Group-the-People-Given-the-Group-Size-They-Belong-To\1282.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1283-Find-the-Smallest-Divisor-Given-a-Threshold\1283.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1283-Find-the-Smallest-Divisor-Given-a-Threshold\1283.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1284-Minimum-Number-of-Flips-to-Convert-Binary-Matrix-to-Zero-Matrix\1284.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1284-Minimum-Number-of-Flips-to-Convert-Binary-Matrix-to-Zero-Matrix\1284.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1286-Iterator-for-Combination\1286.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1286-Iterator-for-Combination\1286.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1287-Element-Appearing-More-Than-25%-In-Sorted-Array\1287.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1287-Element-Appearing-More-Than-25%-In-Sorted-Array\1287.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1288-Remove-Covered-Intervals\1288.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1288-Remove-Covered-Intervals\1288.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1289-Minimum-Falling-Path-Sum-II\1289.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1289-Minimum-Falling-Path-Sum-II\1289.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1290-Convert-Binary-Number-in-a-Linked-List-to-Integer\1290.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1290-Convert-Binary-Number-in-a-Linked-List-to-Integer\1290.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1291-Sequential-Digits\1291.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1291-Sequential-Digits\1291.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1292-Maximum-Side-Length-of-a-Square-with-Sum-Less-than-or-Equal-to-Threshold\1292.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1292-Maximum-Side-Length-of-a-Square-with-Sum-Less-than-or-Equal-to-Threshold\1292.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1293-Shortest-Path-in-a-Grid-with-Obstacles-Elimination\1293.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1293-Shortest-Path-in-a-Grid-with-Obstacles-Elimination\1293.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1295-Find-Numbers-with-Even-Number-of-Digits\1295.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1295-Find-Numbers-with-Even-Number-of-Digits\1295.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1296-Divide-Array-in-Sets-of-K-Consecutive-Numbers\1296.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1296-Divide-Array-in-Sets-of-K-Consecutive-Numbers\1296.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1297-Maximum-Number-of-Occurrences-of-a-Substring\1297.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1297-Maximum-Number-of-Occurrences-of-a-Substring\1297.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1298-Maximum-Candies-You-Can-Get-from-Boxes\1298.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1298-Maximum-Candies-You-Can-Get-from-Boxes\1298.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1299-Replace-Elements-with-Greatest-Element-on-Right-Side\1299.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1299-Replace-Elements-with-Greatest-Element-on-Right-Side\1299.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1300-Sum-of-Mutated-Array-Closest-to-Target\1300.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1300-Sum-of-Mutated-Array-Closest-to-Target\1300.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1301-Number-of-Paths-with-Max-Score\1301.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1301-Number-of-Paths-with-Max-Score\1301.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1302-Deepest-Leaves-Sum\1302.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1302-Deepest-Leaves-Sum\1302.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1304-Find-N-Unique-Integers-Sum-up-to-Zero\1304.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1304-Find-N-Unique-Integers-Sum-up-to-Zero\1304.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1305-All-Elements-in-Two-Binary-Search-Trees\1305.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1305-All-Elements-in-Two-Binary-Search-Trees\1305.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1306-Jump-Game-III\1306.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1306-Jump-Game-III\1306.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1309-Decrypt-String-from-Alphabet-to-Integer-Mapping\1309.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1309-Decrypt-String-from-Alphabet-to-Integer-Mapping\1309.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1310-XOR-Queries-of-a-Subarray\1310.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1310-XOR-Queries-of-a-Subarray\1310.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1311-Get-Watched-Videos-by-Your-Friends\1311.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1311-Get-Watched-Videos-by-Your-Friends\1311.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1313-Decompress-Run-Length-Encoded-List\1313.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1313-Decompress-Run-Length-Encoded-List\1313.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1314-Matrix-Block-Sum\1314.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1314-Matrix-Block-Sum\1314.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1315-Sum-of-Nodes-with-Even-Valued-Grandparent\1315.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1315-Sum-of-Nodes-with-Even-Valued-Grandparent\1315.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1316-Distinct-Echo-Substrings\1316.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1316-Distinct-Echo-Substrings\1316.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers\1317.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers\1317.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1318-Minimum-Flips-to-Make-a-OR-b-Equal-to-c\1318.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1318-Minimum-Flips-to-Make-a-OR-b-Equal-to-c\1318.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1319-Number-of-Operations-to-Make-Network-Connected\1319.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1319-Number-of-Operations-to-Make-Network-Connected\1319.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1320-Minimum-Distance-to-Type-a-Word-Using-Two-Fingers\1320.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1320-Minimum-Distance-to-Type-a-Word-Using-Two-Fingers\1320.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1323-Maximum-69-Number\1323.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1323-Maximum-69-Number\1323.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1324-Print-Words-Vertically\1324.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1324-Print-Words-Vertically\1324.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1325-Delete-Leaves-With-a-Given-Value\1325.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1325-Delete-Leaves-With-a-Given-Value\1325.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1326-Minimum-Number-of-Taps-to-Open-to-Water-a-Garden\1326.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1326-Minimum-Number-of-Taps-to-Open-to-Water-a-Garden\1326.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1328-Break-a-Palindrome\1328.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1328-Break-a-Palindrome\1328.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1329-Sort-the-Matrix-Diagonally\1329.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1329-Sort-the-Matrix-Diagonally\1329.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1330-Reverse-Subarray-To-Maximize-Array-Value\1330.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1330-Reverse-Subarray-To-Maximize-Array-Value\1330.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1331-Rank-Transform-of-an-Array\1331.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1331-Rank-Transform-of-an-Array\1331.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1332-Remove-Palindromic-Subsequences\1332.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1332-Remove-Palindromic-Subsequences\1332.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1333-Filter-Restaurants-by-Vegan-Friendly,-Price-and-Distance\1333.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1333-Filter-Restaurants-by-Vegan-Friendly,-Price-and-Distance\1333.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1334-Find-the-City-With-the-Smallest-Number-of-Neighbors-at-a-Threshold-Distance\1334.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1334-Find-the-City-With-the-Smallest-Number-of-Neighbors-at-a-Threshold-Distance\1334.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1335-Minimum-Difficulty-of-a-Job-Schedule\1335.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1335-Minimum-Difficulty-of-a-Job-Schedule\1335.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1337-The-K-Weakest-Rows-in-a-Matrix\1337.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1337-The-K-Weakest-Rows-in-a-Matrix\1337.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1338-Reduce-Array-Size-to-The-Half\1338.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1338-Reduce-Array-Size-to-The-Half\1338.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1339-Maximum-Product-of-Splitted-Binary-Tree\1339.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1339-Maximum-Product-of-Splitted-Binary-Tree\1339.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1340-Jump-Game-V\1340.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1340-Jump-Game-V\1340.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1342-Number-of-Steps-to-Reduce-a-Number-to-Zero\1342.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1342-Number-of-Steps-to-Reduce-a-Number-to-Zero\1342.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1343-Number-of-Sub-arrays-of-Size-K-and-Average-Greater-than-or-Equal-to-Threshold\1343.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1343-Number-of-Sub-arrays-of-Size-K-and-Average-Greater-than-or-Equal-to-Threshold\1343.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1344-Angle-Between-Hands-of-a-Clock\1344.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1344-Angle-Between-Hands-of-a-Clock\1344.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1345-Jump-Game-IV\1345.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1345-Jump-Game-IV\1345.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1346-Check-If-N-and-Its-Double-Exist\1346.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1346-Check-If-N-and-Its-Double-Exist\1346.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1347-Minimum-Number-of-Steps-to-Make-Two-Strings-Anagram\1347.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1347-Minimum-Number-of-Steps-to-Make-Two-Strings-Anagram\1347.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1348-Tweet-Counts-Per-Frequency\1348.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1348-Tweet-Counts-Per-Frequency\1348.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1349-Maximum-Students-Taking-Exam\1349.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1349-Maximum-Students-Taking-Exam\1349.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1351-Count-Negative-Numbers-in-a-Sorted-Matrix\1351.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1351-Count-Negative-Numbers-in-a-Sorted-Matrix\1351.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1352-Product-of-the-Last-K-Numbers\1352.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1352-Product-of-the-Last-K-Numbers\1352.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1353-Maximum-Number-of-Events-That-Can-Be-Attended\1353.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1353-Maximum-Number-of-Events-That-Can-Be-Attended\1353.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1354-Construct-Target-Array-With-Multiple-Sums\1354.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1354-Construct-Target-Array-With-Multiple-Sums\1354.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1356-Sort-Integers-by-The-Number-of-1-Bits\1356.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1356-Sort-Integers-by-The-Number-of-1-Bits\1356.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1357-Apply-Discount-Every-n-Orders\1357.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1357-Apply-Discount-Every-n-Orders\1357.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1358-Number-of-Substrings-Containing-All-Three-Characters\1358.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1358-Number-of-Substrings-Containing-All-Three-Characters\1358.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1359-Count-All-Valid-Pickup-and-Delivery-Options\1359.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1359-Count-All-Valid-Pickup-and-Delivery-Options\1359.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1360-Number-of-Days-Between-Two-Dates\1360.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1360-Number-of-Days-Between-Two-Dates\1360.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1361-Validate-Binary-Tree-Nodes\1361.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1361-Validate-Binary-Tree-Nodes\1361.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1362-Closest-Divisors\1362.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1362-Closest-Divisors\1362.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1363-Largest-Multiple-of-Three\1363.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1363-Largest-Multiple-of-Three\1363.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number\1365.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number\1365.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1366-Rank-Teams-by-Votes\1366.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1366-Rank-Teams-by-Votes\1366.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1367-Linked-List-in-Binary-Tree\1367.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1367-Linked-List-in-Binary-Tree\1367.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1368-Minimum-Cost-to-Make-at-Least-One-Valid-Path-in-a-Grid\1368.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1368-Minimum-Cost-to-Make-at-Least-One-Valid-Path-in-a-Grid\1368.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1370-Increasing-Decreasing-String\1370.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1370-Increasing-Decreasing-String\1370.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1371-Find-the-Longest-Substring-Containing-Vowels-in-Even-Counts\1371.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1371-Find-the-Longest-Substring-Containing-Vowels-in-Even-Counts\1371.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1372-Longest-ZigZag-Path-in-a-Binary-Tree\1372.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1372-Longest-ZigZag-Path-in-a-Binary-Tree\1372.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1373-Maximum-Sum-BST-in-Binary-Tree\1373.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1373-Maximum-Sum-BST-in-Binary-Tree\1373.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1374-Generate-a-String-With-Characters-That-Have-Odd-Counts\1374.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1374-Generate-a-String-With-Characters-That-Have-Odd-Counts\1374.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1375-Bulb-Switcher-III\1375.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1375-Bulb-Switcher-III\1375.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1376-Time-Needed-to-Inform-All-Employees\1376.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1376-Time-Needed-to-Inform-All-Employees\1376.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1377-Frog-Position-After-T-Seconds\1377.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1377-Frog-Position-After-T-Seconds\1377.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1380-Lucky-Numbers-in-a-Matrix\1380.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1380-Lucky-Numbers-in-a-Matrix\1380.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1381-Design-a-Stack-With-Increment-Operation\1381.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1381-Design-a-Stack-With-Increment-Operation\1381.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1382-Balance-a-Binary-Search-Tree\1382.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1382-Balance-a-Binary-Search-Tree\1382.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1383-Maximum-Performance-of-a-Team\1383.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1383-Maximum-Performance-of-a-Team\1383.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1385-Find-the-Distance-Value-Between-Two-Arrays\1385.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1385-Find-the-Distance-Value-Between-Two-Arrays\1385.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1386-Cinema-Seat-Allocation\1386.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1386-Cinema-Seat-Allocation\1386.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1387-Sort-Integers-by-The-Power-Value\1387.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1387-Sort-Integers-by-The-Power-Value\1387.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1388-Pizza-With-3n-Slices\1388.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1388-Pizza-With-3n-Slices\1388.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1389-Create-Target-Array-in-the-Given-Order\1389.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1389-Create-Target-Array-in-the-Given-Order\1389.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1390-Four-Divisors\1390.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1390-Four-Divisors\1390.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1391-Check-if-There-is-a-Valid-Path-in-a-Grid\1391.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1391-Check-if-There-is-a-Valid-Path-in-a-Grid\1391.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1392-Longest-Happy-Prefix\1392.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1392-Longest-Happy-Prefix\1392.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1394-Find-Lucky-Integer-in-an-Array\1394.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1394-Find-Lucky-Integer-in-an-Array\1394.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1395-Count-Number-of-Teams\1395.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1395-Count-Number-of-Teams\1395.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1396-Design-Underground-System\1396.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1396-Design-Underground-System\1396.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1397-Find-All-Good-Strings\1397.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1397-Find-All-Good-Strings\1397.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1399-Count-Largest-Group\1399.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1399-Count-Largest-Group\1399.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1400-Construct-K-Palindrome-Strings\1400.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1400-Construct-K-Palindrome-Strings\1400.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1401-Circle-and-Rectangle-Overlapping\1401.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1401-Circle-and-Rectangle-Overlapping\1401.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1402-Reducing-Dishes\1402.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1402-Reducing-Dishes\1402.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1403-Minimum-Subsequence-in-Non-Increasing-Order\1403.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1403-Minimum-Subsequence-in-Non-Increasing-Order\1403.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1404-Number-of-Steps-to-Reduce-a-Number-in-Binary-Representation-to-One\1404.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1404-Number-of-Steps-to-Reduce-a-Number-in-Binary-Representation-to-One\1404.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1405-Longest-Happy-String\1405.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1405-Longest-Happy-String\1405.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1406-Stone-Game-III\1406.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1406-Stone-Game-III\1406.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1408-String-Matching-in-an-Array\1408.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1408-String-Matching-in-an-Array\1408.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1409-Queries-on-a-Permutation-With-Key\1409.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1409-Queries-on-a-Permutation-With-Key\1409.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1410-HTML-Entity-Parser\1410.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1410-HTML-Entity-Parser\1410.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1411-Number-of-Ways-to-Paint-N×3-Grid\1411.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1411-Number-of-Ways-to-Paint-N×3-Grid\1411.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum\1413.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum\1413.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1414-Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K\1414.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1414-Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K\1414.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1415-The-k-th-Lexicographical-String-of-All-Happy-Strings-of-Length-n\1415.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1415-The-k-th-Lexicographical-String-of-All-Happy-Strings-of-Length-n\1415.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1416-Restore-The-Array\1416.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1416-Restore-The-Array\1416.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1417-Reformat-The-String\1417.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1417-Reformat-The-String\1417.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1418-Display-Table-of-Food-Orders-in-a-Restaurant\1418.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1418-Display-Table-of-Food-Orders-in-a-Restaurant\1418.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1419-Minimum-Number-of-Frogs-Croaking\1419.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1419-Minimum-Number-of-Frogs-Croaking\1419.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1420-Build-Array-Where-You-Can-Find-The-Maximum-Exactly-K-Comparisons\1420.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1420-Build-Array-Where-You-Can-Find-The-Maximum-Exactly-K-Comparisons\1420.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1422-Maximum-Score-After-Splitting-a-String\1422.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1422-Maximum-Score-After-Splitting-a-String\1422.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1423-Maximum-Points-You-Can-Obtain-from-Cards\1423.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1423-Maximum-Points-You-Can-Obtain-from-Cards\1423.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1424-Diagonal-Traverse-II\1424.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1424-Diagonal-Traverse-II\1424.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1425-Constrained-Subsequence-Sum\1425.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1425-Constrained-Subsequence-Sum\1425.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1431-Kids-With-the-Greatest-Number-of-Candies\1431.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1431-Kids-With-the-Greatest-Number-of-Candies\1431.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1432-Max-Difference-You-Can-Get-From-Changing-an-Integer\1432.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1432-Max-Difference-You-Can-Get-From-Changing-an-Integer\1432.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1433-Check-If-a-String-Can-Break-Another-String\1433.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1433-Check-If-a-String-Can-Break-Another-String\1433.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1434-Number-of-Ways-to-Wear-Different-Hats-to-Each-Other\1434.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1434-Number-of-Ways-to-Wear-Different-Hats-to-Each-Other\1434.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1436-Destination-City\1436.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1436-Destination-City\1436.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1437-Check-If-All-1's-Are-at-Least-Length-K-Places-Away\1437.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1437-Check-If-All-1's-Are-at-Least-Length-K-Places-Away\1437.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1438-Longest-Continuous-Subarray-With-Absolute-Diff-Less-Than-or-Equal-to-Limit\1438.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1438-Longest-Continuous-Subarray-With-Absolute-Diff-Less-Than-or-Equal-to-Limit\1438.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1439-Find-the-Kth-Smallest-Sum-of-a-Matrix-With-Sorted-Rows\1439.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1439-Find-the-Kth-Smallest-Sum-of-a-Matrix-With-Sorted-Rows\1439.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1441-Build-an-Array-With-Stack-Operations\1441.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1441-Build-an-Array-With-Stack-Operations\1441.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1442-Count-Triplets-That-Can-Form-Two-Arrays-of-Equal-XOR\1442.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1442-Count-Triplets-That-Can-Form-Two-Arrays-of-Equal-XOR\1442.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1443-Minimum-Time-to-Collect-All-Apples-in-a-Tree\1443.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1443-Minimum-Time-to-Collect-All-Apples-in-a-Tree\1443.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1444-Number-of-Ways-of-Cutting-a-Pizza\1444.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1444-Number-of-Ways-of-Cutting-a-Pizza\1444.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1470-Shuffle-the-Array\1470.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1470-Shuffle-the-Array\1470.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1472-Design-Browser-History\1472.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1472-Design-Browser-History\1472.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1523-Count-Odd-Numbers-in-an-Interval-Range\1523.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1523-Count-Odd-Numbers-in-an-Interval-Range\1523.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1546-Maximum-Number-of-Non-Overlapping-Subarrays-With-Sum-Equals-Target\maximum_number_of_nonoverlapping_with_sum_equals_target.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1546-Maximum-Number-of-Non-Overlapping-Subarrays-With-Sum-Equals-Target\maximum_number_of_nonoverlapping_with_sum_equals_target.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1574-Shortest-Subarray-To-Be-Removed-To-Make-Array-Sorted\1574.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1574-Shortest-Subarray-To-Be-Removed-To-Make-Array-Sorted\1574.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1604-Alert-Using-Same-Key-Card-Three-or-More-Times-in-a-One-Hour-Period\1604.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1604-Alert-Using-Same-Key-Card-Three-or-More-Times-in-a-One-Hour-Period\1604.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1616-Split-Two-Strings-to-Make-Palindrome\1616.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1616-Split-Two-Strings-to-Make-Palindrome\1616.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1626-Best-Team-With-No-Conflicts\1626.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1626-Best-Team-With-No-Conflicts\1626.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1657-Determine-if-Two-Strings-Are-Close\1657.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1657-Determine-if-Two-Strings-Are-Close\1657.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1658-Minimum-Operations-to-Reduce-X-to-Zero\1658.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1658-Minimum-Operations-to-Reduce-X-to-Zero\1658.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1664-Ways-to-Make-a-Fair-Array\1664.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1664-Ways-to-Make-a-Fair-Array\1664.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1669-Merge-In-Between-Linked-Lists\1669.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1669-Merge-In-Between-Linked-Lists\1669.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1673-Find-the-Most-Competitive-Subsequence\1673.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1673-Find-the-Most-Competitive-Subsequence\1673.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1691-Maximum-Height-by-Stacking-Cuboids\1691.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1691-Maximum-Height-by-Stacking-Cuboids\1691.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1704-Determine-if-String-Halves-Are-Alike\1704.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1704-Determine-if-String-Halves-Are-Alike\1704.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1732-Find-the-Highest-Altitude\1732.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1732-Find-the-Highest-Altitude\1732.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1739-Building-Boxes\1739.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1739-Building-Boxes\1739.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1742-Maximum-Number-of-Balls-in-a-Box\1742.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1742-Maximum-Number-of-Balls-in-a-Box\1742.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1750-Minimum-Length-of-String-After-Deleting-Similar-Ends\1750.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1750-Minimum-Length-of-String-After-Deleting-Similar-Ends\1750.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1752-Check-if-Array-Is-Sorted-and-Rotated\1752.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1752-Check-if-Array-Is-Sorted-and-Rotated\1752.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1754-Largest-Merge-Of-Two-Strings\1754.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1754-Largest-Merge-Of-Two-Strings\1754.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1758-Minimum-Changes-To-Make-Alternating-Binary-String\1758.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1758-Minimum-Changes-To-Make-Alternating-Binary-String\1758.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1759-Count-Number-of-Homogenous-Substrings\1759.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1759-Count-Number-of-Homogenous-Substrings\1759.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1779-Find-Nearest-Point-That-Has-the-Same-X-or-Y-Coordinate\1779.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1779-Find-Nearest-Point-That-Has-the-Same-X-or-Y-Coordinate\1779.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1780-Check-if-Number-is-a-Sum-of-Powers-of-Three\1780.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1780-Check-if-Number-is-a-Sum-of-Powers-of-Three\1780.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1781-Sum-of-Beauty-of-All-Substrings\1781.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1781-Sum-of-Beauty-of-All-Substrings\1781.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1796-Second-Largest-Digit-in-a-String\1796.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1796-Second-Largest-Digit-in-a-String\1796.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1798-Maximum-Number-of-Consecutive-Values-You-Can-Make\1798.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1798-Maximum-Number-of-Consecutive-Values-You-Can-Make\1798.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1801-Number-of-Orders-in-the-Backlog\1801.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1801-Number-of-Orders-in-the-Backlog\1801.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1802-Maximum-Value-at-a-Given-Index-in-a-Bounded-Array\1802.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1802-Maximum-Value-at-a-Given-Index-in-a-Bounded-Array\1802.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1805-Number-of-Different-Integers-in-a-String\1805.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1805-Number-of-Different-Integers-in-a-String\1805.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1806-Minimum-Number-of-Operations-to-Reinitialize-a-Permutation\1806.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1806-Minimum-Number-of-Operations-to-Reinitialize-a-Permutation\1806.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1807-Evaluate-the-Bracket-Pairs-of-a-String\1807.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1807-Evaluate-the-Bracket-Pairs-of-a-String\1807.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1812-Determine-Color-of-a-Chessboard-Square\1812.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1812-Determine-Color-of-a-Chessboard-Square\1812.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1813-Sentence-Similarity-III\1813.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1813-Sentence-Similarity-III\1813.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1814-Count-Nice-Pairs-in-an-Array\1814.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1814-Count-Nice-Pairs-in-an-Array\1814.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1819-Number-of-Different-Subsequences-GCDs\1819.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1819-Number-of-Different-Subsequences-GCDs\1819.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1827-Minimum-Operations-to-Make-the-Array-Increasing\1827.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1827-Minimum-Operations-to-Make-the-Array-Increasing\1827.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1832-Check-if-the-Sentence-is-Pangram\1832.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1832-Check-if-the-Sentence-is-Pangram\1832.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1833-Maximum-Ice-Cream-Bars\1833.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1833-Maximum-Ice-Cream-Bars\1833.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1834-Single-Threaded-CPU\1834.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1834-Single-Threaded-CPU\1834.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1926-Nearest-Exit-from-Entrance-in-Maze\1926.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1926-Nearest-Exit-from-Entrance-in-Maze\1926.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1962-Remove-Stones-to-Minimize-the-Total\1962.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\1962-Remove-Stones-to-Minimize-the-Total\1962.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2011-Final-Value-of-Variable-After-Performing-Operations\2011.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2011-Final-Value-of-Variable-After-Performing-Operations\2011.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2027-Minimum-Moves-to-Convert-String\2027.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2027-Minimum-Moves-to-Convert-String\2027.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2032-Two-Out-of-Three\2032.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2032-Two-Out-of-Three\2032.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2037-Minimum-Number-of-Moves-to-Seat-Everyone\2037.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2037-Minimum-Number-of-Moves-to-Seat-Everyone\2037.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2042-Check-if-Numbers-Are-Ascending-in-a-Sentence\2042.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2042-Check-if-Numbers-Are-Ascending-in-a-Sentence\2042.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2180-Count-Integers-With-Even-Digit-Sum\2180.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2180-Count-Integers-With-Even-Digit-Sum\2180.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2185-Counting-Words-With-a-Given-Prefix\2185.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2185-Counting-Words-With-a-Given-Prefix\2185.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2225-Find-Players-With-Zero-or-One-Losses\2225.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2225-Find-Players-With-Zero-or-One-Losses\2225.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2244-Minimum-Rounds-to-Complete-All-Tasks\2244.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2244-Minimum-Rounds-to-Complete-All-Tasks\2244.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2256-Minimum-Average-Difference\2256.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2256-Minimum-Average-Difference\2256.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2279-Maximum-Bags-With-Full-Capacity-of-Rocks\2279.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2279-Maximum-Bags-With-Full-Capacity-of-Rocks\2279.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2287-Rearrange-Characters-to-Make-Target-String\2287.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2287-Rearrange-Characters-to-Make-Target-String\2287.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2293-Min-Max-Game\2293.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2293-Min-Max-Game\2293.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2315-Count-Asterisks\2315.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2315-Count-Asterisks\2315.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2319-Check-if-Matrix-Is-X-Matrix\2319.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2319-Check-if-Matrix-Is-X-Matrix\2319.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2325-Decode-the-Message\2325.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2325-Decode-the-Message\2325.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2331-Evaluate-Boolean-Binary-Tree\2331.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2331-Evaluate-Boolean-Binary-Tree\2331.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2341-Maximum-Number-of-Pairs-in-Array\2341.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2341-Maximum-Number-of-Pairs-in-Array\2341.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2347-Best-Poker-Hand\2347.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2347-Best-Poker-Hand\2347.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2351-First-Letter-to-Appear-Twice\2351.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2351-First-Letter-to-Appear-Twice\2351.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2357-Make-Array-Zero-by-Subtracting-Equal-Amounts\2357.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2357-Make-Array-Zero-by-Subtracting-Equal-Amounts\2357.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2389-Longest-Subsequence-With-Limited-Sum\2389.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2389-Longest-Subsequence-With-Limited-Sum\2389.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2395-Find-Subarrays-With-Equal-Sum\2395.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2395-Find-Subarrays-With-Equal-Sum\2395.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2427-Number-of-Common-Factors\2427.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2427-Number-of-Common-Factors\2427.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2439-Minimize-Maximum-of-Array\2439.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2439-Minimize-Maximum-of-Array\2439.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2469-Convert-the-Temperature\2469.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2469-Convert-the-Temperature\2469.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2470-Number-of-Subarrays-With-LCM-Equal-to-K\2470.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2470-Number-of-Subarrays-With-LCM-Equal-to-K\2470.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2471-Minimum-Number-of-Operations-to-Sort-a-Binary-Tree-by-Level\2471.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2471-Minimum-Number-of-Operations-to-Sort-a-Binary-Tree-by-Level\2471.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2477-Minimum-Fuel-Cost-to-Report-to-the-Capital\2477.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2477-Minimum-Fuel-Cost-to-Report-to-the-Capital\2477.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2549-Count-Distinct-Numbers-on-Board\2549.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2549-Count-Distinct-Numbers-on-Board\2549.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2550-Count-Collisions-of-Monkeys-on-a-Polygon\2550.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2550-Count-Collisions-of-Monkeys-on-a-Polygon\2550.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:811 - [JavaFX Application Thread] add unit under test: C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2551-Put-Marbles-in-Bags\2551.cpp
2025-02-06 17:00:48 DEBUG ChooseUUTController:814 - [JavaFX Application Thread] Load dependencies of C:\Users\daidu\Projects\SQA-LAB\AKA\prj-data\luliyucoordinate_Leetcode\src\2551-Put-Marbles-in-Bags\2551.cpp
2025-02-06 17:00:56 DEBUG ChooseUUTController:888 - [JavaFX Application Thread] Environment configuration:
ENVIRO.NEW
ENVIRO.COMPILER.NEW
ENVIRO.COMPILER.NAME: [MinGW] C++ 14
ENVIRO.COMPILER.COMPILE_CMD: g++ -c -std=gnu++14 -w
ENVIRO.COMPILER.PREPROCESS_CMD: g++ -c -E -std=gnu++14
ENVIRO.COMPILER.LINK_CMD: g++ -std=gnu++14 -w
ENVIRO.COMPILER.DEBUG_CMD: gdb
ENVIRO.COMPILER.INCLUDE_FLAG: -I
ENVIRO.COMPILER.DEFINE_FLAG: -D
ENVIRO.COMPILER.OUTPUT_FLAG: -o
ENVIRO.COMPILER.DEBUG_FLAG: -ggdb
ENVIRO.COMPILER.OUTPUT_EXT: .out
ENVIRO.COMPILER.IS_USE_GTEST: false
ENVIRO.COMPILER.END
ENVIRO.CMAKE.NEW
ENVIRO.CMAKE.IS_CMAKE_PROJECT: false
ENVIRO.CMAKE.IS_AKA_CMAKE_PROJECT: false
ENVIRO.CMAKE.GENERATOR: unknown
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_CMD: cmake
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_OPTIONS: 
ENVIRO.CMAKE.BUILD_CMD: cmake --build
ENVIRO.CMAKE.BUILD_OPTIONS: 
ENVIRO.CMAKE.PROJ_DIRECTORY: 
ENVIRO.CMAKE.END
ENVIRO.NAME: luliyucoordinate
ENVIRO.TESTING_METHOD: TRADITIONAL_UNIT_TESTING
ENVIRO.WHITE_BOX: YES
ENVIRO.COVERAGE_TYPE: STATEMENT+MCDC
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\000. Two Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\001. Add Two Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\solution.h
ENVIRO.UUT: .\pezy_LeetCode\002. Longest Substring Without Repeating Characters\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\solution.h
ENVIRO.UUT: .\pezy_LeetCode\004. Longest Palindromic Substring\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\solution.h
ENVIRO.UUT: .\pezy_LeetCode\005. ZigZag Conversion\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\006. Reverse Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\007. Linked List Cycle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\008. Palindrome Number\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\solution.h
ENVIRO.UUT: .\pezy_LeetCode\009. Regular Expression Matching\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\main.cc
ENVIRO.UUT: .\pezy_LeetCode\010. Container With Most Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\solution.h
ENVIRO.UUT: .\pezy_LeetCode\011. Integer to Roman\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\012. Roman to Integer\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\013. Longest Common Prefix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\solution.h
ENVIRO.UUT: .\pezy_LeetCode\015. 3Sum Closest\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\016. Letter Combinations of a Phone Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\017. 4Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\018. Remove Nth Node from End of List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\019. Valid Parentheses\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\020. Merge Two Sorted Lists\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\main.cc
ENVIRO.UUT: .\pezy_LeetCode\021. Generate Parentheses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\022. Merge k Sorted Lists\solution.h
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\main.cc
ENVIRO.UUT: .\pezy_LeetCode\023. Swap Nodes in Pairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\024. Reverse Nodes in k-Group\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\025. Remove Duplicates from Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\solution.h
ENVIRO.UUT: .\pezy_LeetCode\026. Remove Element\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\solution.h
ENVIRO.UUT: .\pezy_LeetCode\027. Implement strStr()\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\030. Next Permutation\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\032. Search in Rotated Sorted Array\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\solution.h
ENVIRO.UUT: .\pezy_LeetCode\033. Search for a Range\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\main.cc
ENVIRO.UUT: .\pezy_LeetCode\034. Search Insert Position\solution.h
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\main.cc
ENVIRO.UUT: .\pezy_LeetCode\035. Valid Sudoku\solution.h
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\036. Sudoku Solver\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\solution.h
ENVIRO.UUT: .\pezy_LeetCode\037. Count and Say\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\038. Combination Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\039. Combination Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\solution.h
ENVIRO.UUT: .\pezy_LeetCode\040. First Missing Positive\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\solution.h
ENVIRO.UUT: .\pezy_LeetCode\041. Trapping Rain Water\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\solution.h
ENVIRO.UUT: .\pezy_LeetCode\042. Multiply Strings\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\044. Jump Game II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\045. Permutations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\046. Permutations II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\main.cc
ENVIRO.UUT: .\pezy_LeetCode\047. Rotate Image\solution.h
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\048. Group Anagrams\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\049. Pow(x, n)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\main.cc
ENVIRO.UUT: .\pezy_LeetCode\050. N-Queens\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\051. N-Queens II\TEST.cpp
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\divide_conquer.h
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\main.cc
ENVIRO.UUT: .\pezy_LeetCode\052. Maximum Subarray\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\053. Spiral Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\solution.h
ENVIRO.UUT: .\pezy_LeetCode\054. Jump Game\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\055. Merge Intervals\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\solution.h
ENVIRO.UUT: .\pezy_LeetCode\056. Insert Interval\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\solution_string.h
ENVIRO.UUT: .\pezy_LeetCode\057. Length of Last Word\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\058. Spiral Matrix II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\059. Permutation Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\060. Rotate List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\main.cc
ENVIRO.UUT: .\pezy_LeetCode\061. Unique Paths\solution.h
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\062. Unique Paths II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\main.cc
ENVIRO.UUT: .\pezy_LeetCode\063. Minimum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\main.cc
ENVIRO.UUT: .\pezy_LeetCode\065. Plus One\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\solution.h
ENVIRO.UUT: .\pezy_LeetCode\066. Add Binary\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\solution.h
ENVIRO.UUT: .\pezy_LeetCode\068. Sqrt(x)\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution.h
ENVIRO.UUT: .\pezy_LeetCode\069. Climbing Stairs\solution_dp.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\solution.h
ENVIRO.UUT: .\pezy_LeetCode\070. Simplify Path\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\solution.h
ENVIRO.UUT: .\pezy_LeetCode\071. Edit Distance\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\main.cc
ENVIRO.UUT: .\pezy_LeetCode\072. Set Matrix Zeroes\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\solution.h
ENVIRO.UUT: .\pezy_LeetCode\073. Search a 2D Matrix\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\main.cc
ENVIRO.UUT: .\pezy_LeetCode\074. Sort Colors\solution.h
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\main.cc
ENVIRO.UUT: .\pezy_LeetCode\076. Combinations\solution.h
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\main.cc
ENVIRO.UUT: .\pezy_LeetCode\077. Subsets\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\079. Remove Duplicates from Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\080. Search in Rotated Sorted Array II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\081. Remove Duplicates from Sorted List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\082. Remove Duplicates from Sorted List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\solution.h
ENVIRO.UUT: .\pezy_LeetCode\083. Largest Rectangle in Histogram\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\084. Maximal Rectangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\085. Partition List\solution_lambda.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\solution.h
ENVIRO.UUT: .\pezy_LeetCode\086. Scramble String\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\087. Merge Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\main.cc
ENVIRO.UUT: .\pezy_LeetCode\088. Gray Code\solution.h
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\089. Subsets II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\090. Insertion Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\091. Reverse Linked List II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\092. Restore IP Addresses\solution.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\recursion.h
ENVIRO.UUT: .\pezy_LeetCode\093. Binary Tree Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\094. Unique Binary Search Trees II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\095. Unique Binary Search Trees\solution.h
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\097. Validate Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\098. Recover Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\099. Same Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\100. Symmetric Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\101. Binary Tree Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\102. Binary Tree Zigzag Level Order Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\103. Maximum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\104. Construct Binary Tree from Preorder and Inorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\105. Construct Binary Tree from Inorder and Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\106. Binary Tree Level Order Traversal II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\107. Convert Sorted Array to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\108. Convert Sorted List to Binary Search Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\109. Balanced Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\110. Minimum Depth of Binary Tree\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\111. Path Sum\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\112. Path Sum II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\main.cc
ENVIRO.UUT: .\pezy_LeetCode\113. Flatten Binary Tree to Linked List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\solution.h
ENVIRO.UUT: .\pezy_LeetCode\114. Distinct Subsequences\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\115. Populating Next Right Pointers in Each Node\solution.h
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\116. Populating Next Right Pointers in Each Node II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\main.cc
ENVIRO.UUT: .\pezy_LeetCode\117. Pascal's Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\118. Pascal's Triangle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\solution.h
ENVIRO.UUT: .\pezy_LeetCode\119. Triangle\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\main.cc
ENVIRO.UUT: .\pezy_LeetCode\120. Best Time to Buy and Sell Stock\solution.h
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\121. Best Time to Buy and Sell Stock II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\solution.h
ENVIRO.UUT: .\pezy_LeetCode\122. Best Time to Buy and Sell Stock III\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\122. Sort List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\123. Binary Tree Maximum Path Sum\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\solution.h
ENVIRO.UUT: .\pezy_LeetCode\124. Valid Palindrome\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\125. Reorder List\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\solution.h
ENVIRO.UUT: .\pezy_LeetCode\127. Longest Consecutive Sequence\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\main.cc
ENVIRO.UUT: .\pezy_LeetCode\128. Sum Root to Leaf Numbers\solution.h
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\main.cc
ENVIRO.UUT: .\pezy_LeetCode\130. Palindrome Partitioning\solution.h
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\132. Clone Graph\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\solution.h
ENVIRO.UUT: .\pezy_LeetCode\133. Gas Station\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\135. Single Number\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\136. Single Number II\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\137. Copy List with Random Pointer\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\solution.h
ENVIRO.UUT: .\pezy_LeetCode\138. Word Break\TEST.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\main.cc
ENVIRO.UUT: .\pezy_LeetCode\141. Linked List Cycle II\solution.h
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\main.cpp
ENVIRO.UUT: .\pezy_LeetCode\143. Binary Tree Preorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\main.cc
ENVIRO.UUT: .\pezy_LeetCode\144. Binary Tree Postorder Traversal\solution.h
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\152. Find Minimum in Rotated Sorted Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\main.cc
ENVIRO.UUT: .\pezy_LeetCode\435. Find All Duplicates in an Array\solution.h
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\main.cc
ENVIRO.UUT: .\pezy_LeetCode\619. Maximum Average Subarray I\solution.h
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\main.cc
ENVIRO.UUT: .\pezy_LeetCode\630. Maximum Binary Tree\solution.h
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0001-Two-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0002-Add-Two-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0003-Longest-Substring-Without-Repeating-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0004-Median-of-Two-Sorted-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0005-Longest-Palindromic-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0006-ZigZag-Conversion
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0007-Reverse-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0008-String-to-Integer-(atoi)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0009-Palindrome-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0010-Regular-Expression-Matching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0011-Container-With-Most-Water
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0012-Integer-to-Roman
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0013-Roman-to-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0014-Longest-Common-Prefix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0015-3Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0016-3Sum-Closest
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0017-Letter-Combinations-of-a-Phone-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0018-4Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0019-Remove-Nth-Node-From-End-of-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0020-Valid-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0021-Merge-Two-Sorted-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0022-Generate-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0023-Merge-k-Sorted-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0024-Swap-Nodes-in-Pairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0025-Reverse-Nodes-in-k-Group
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0026-Remove-Duplicates-from-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0027-Remove-Element
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0028-Implement-strStr()
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0029-Divide-Two-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0030-Substring-with-Concatenation-of-All-Words
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0031-Next-Permutation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0032-Longest-Valid-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0033-Search-in-Rotated-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0034-Find-First-and-Last-Position-of-Element-in-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0035-Search-Insert-Position
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0036-Valid-Sudoku
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0037-Sudoku-Solver
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0038-Count-and-Say
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0039-Combination-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0040-Combination-Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0041-First-Missing-Positive
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0042-Trapping-Rain-Water
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0043-Multiply-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0044-Wildcard-Matching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0045-Jump-Game-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0046-Permutations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0047-Permutations-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0048-Rotate-Image
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0049-Group-Anagrams
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0050-Pow(x,n)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0051-N-Queens
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0052-N-Queens-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0053-Maximum-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0054-Spiral-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0055-Jump-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0056-Merge-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0057-Insert-Interval
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0058-Length-of-Last-Word
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0059-Spiral-Matrix-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0060-Permutation-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0061-Rotate-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0062-Unique-Paths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0063-Unique-Paths-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0064-Minimum-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0065-Valid-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0066-Plus-One
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0067-Add-Binary
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0068-Text-Justification
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0069-Sqrt(x)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0070-Climbing-Stairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0071-Simplify-Path
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0072-Edit-Distance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0073-Set-Matrix-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0074-Search-a-2D-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0075-Sort-Colors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0076-Minimum-Window-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0077-Combinations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0078-Subsets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0079-Word-Search
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0080-Remove-Duplicates-from-Sorted-Array-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0081-Search-in-Rotated-Sorted-Array-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0082-Remove-Duplicates-from-Sorted-List-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0083-Remove-Duplicates-from-Sorted-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0084-Largest-Rectangle-in-Histogram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0085-Maximal-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0086-Partition-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0087-Scramble-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0088-Merge-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0089-Gray-Code
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0090-Subsets-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0091-Decode-Ways
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0092-Reverse-Linked-List-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0093-Restore-IP-Addresses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0094-Binary-Tree-Inorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0095-Unique-Binary-Search-Trees-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0096-Unique-Binary-Search-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0097-Interleaving-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0098-Validate-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0099-Recover-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0100-Same-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0101-Symmetric-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0102-Binary-Tree-Level-Order-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0103-Binary-Tree-Zigzag-Level-Order-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0104-Maximum-Depth-of-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0105-Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0106-Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0107-Binary-Tree-Level-Order-Traversal-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0108-Convert-Sorted-Array-to-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0109-Convert-Sorted-List-to-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0110-Balanced-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0111-Minimum-Depth-of-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0112-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0113-Path-Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0114-Flatten-Binary-Tree-to-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0115-Distinct-Subsequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0116-Populating-Next-Right-Pointers-in-Each-Node
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0117-Populating-Next-Right-Pointers-in-Each-Node-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0118-Pascal's-Triangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0119-Pascal's-Triangle-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0120-Triangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0121-Best-Time-to-Buy-and-Sell-Stock
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0122-Best-Time-to-Buy-and-Sell-Stock-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0123-Best-Time-to-Buy-and-Sell-Stock-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0124-Binary-Tree-Maximum-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0125-Valid-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0126-Word-Ladder-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0127-Word-Ladder
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0128-Longest-Consecutive-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0129-Sum-Root-to-Leaf-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0130-Surrounded-Regions
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0131-Palindrome-Partitioning
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0132-Palindrome-Partitioning-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0133-Clone-Graph
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0134-Gas-Station
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0135-Candy
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0136-Single-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0137-Single-Number-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0138-Copy-List-with-Random-Pointer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0139-Word-Break
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0140-Word-Break-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0141-Linked-List-Cycle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0142-Linked-List-Cycle-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0143-Reorder-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0144-Binary-Tree-Preorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0145-Binary-Tree-Postorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0146-LRU-Cache
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0147-Insertion-Sort-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0148-Sort-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0149-Max-Points-on-a-Line
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0150-Evaluate-Reverse-Polish-Notation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0151-Reverse-Words-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0152-Maximum-Product-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0153-Find-Minimum-in-Rotated-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0154-Find-Minimum-in-Rotated-Sorted-Array-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0155-Min-Stack
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0160-Intersection-of-Two-Linked-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0162-Find-Peak-Element
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0165-Compare-Version-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0166-Fraction-to-Recurring-Decimal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0167-Two-Sum-II-Input-array-is-sorted
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0168-Excel-Sheet-Column-Title
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0169-Majority-Element
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0171-Excel-Sheet-Column-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0172-Factorial-Trailing-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0173-Binary-Search-Tree-Iterator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0174-Dungeon-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0179-Largest-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0187-Repeated-DNA-Sequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0188-Best-Time-to-Buy-and-Sell-Stock-IV
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0189-Rotate-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0190-Reverse-Bits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0191-Number-of-1-Bits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0198-House-Robber
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0199-Binary-Tree-Right-Side-View
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0200-Number-of-Islands
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0201-Bitwise-AND-of-Numbers-Range
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0202-Happy-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0203-Remove-Linked-List-Elements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0204-Count-Primes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0205-Isomorphic-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0206-Reverse-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0207-Course-Schedule
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0208-Implement-Trie-(Prefix-Tree)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0209-Minimum-Size-Subarray-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0210-Course-Schedule-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0211-Add-and-Search-Word-Data-structure-design
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0212-Word-Search-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0213-House-Robber-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0215-Kth-Largest-Element-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0216-Combination-Sum-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0217-Contains-Duplicate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0218-The-Skyline-Problem
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0219-Contains-Duplicate-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0220-Contains-Duplicate-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0221-Maximal-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0222-Count-Complete-Tree-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0223-Rectangle-Area
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0224-Basic-Calculator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0226-Invert-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0228-Summary-Ranges
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0229-Majority-Element-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0230-Kth-Smallest-Element-in-a-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0231-Power-of-Two
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0234-Palindrome-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0235-Lowest-Common-Ancestor-of-a-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0236-Lowest-Common-Ancestor-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0237-Delete-Node-in-a-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0238-Product-of-Array-Except-Self
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0239-Sliding-Window-Maximum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0240-Search-a-2D-Matrix-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0241-Different-Ways-to-Add-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0242-Valid-Anagram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0253-Meeting-Rooms-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0257-Binary-Tree-Paths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0260-Single-Number-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0263-Ugly-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0264-Ugly-Number-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0268-Missing-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0274-H-Index
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0275-H-Index-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0278-First-Bad-Version
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0279-Perfect-Squares
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0283-Move-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0287-Find-the-Duplicate-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0289-Game-of-Life
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0290-Word-Pattern
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0297-Serialize-and-Deserialize-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0300-Longest-Increasing-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0303-Range-Sum-Query-Immutable
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0307-Range-Sum-Query-Mutable
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0309-Best-Time-to-Buy-and-Sel-Stock-with-Cooldown
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0310-Insert-Delete-GetRandom-O(1)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0316-Remove-Duplicate-Letters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0319-Bulb-Switcher
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0322-Coin-Change
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0325-Maximum-Size-Subarray-Sum-Equals-k
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0326-Power-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0328-Odd-Even-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0331-Verify-Preorder-Serialization-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0337-House-Robber-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0341-Flatten-Nested-List-Iterator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0343-Integer-Break
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0344-Reverse-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0345-Reverse-Vowels-of-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0347-Top-K-Frequent-Elements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0349-Intersection-of-Two-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0350-Intersection-of-Two-Arrays-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0352-Data-Stream-as-Disjoint-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0354-Russian-Doll-Envelopes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0365-Water-and-Jug-Problem
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0371-Sum-of-Two-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0377-Combination-Sum-IV
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0384-Shuffle-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0389-Find-the-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0392-Is-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0401-Binary-Watch
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0404-Sum-of-Left-Leaves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0409-Longest-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0416-Partition-Equal-Subset-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0423-Reconstruct-Original-Digits-from-English
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0424-Longest-Repeating-Character-Replacement
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0435-Non-overlapping-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0437-Path-Sum-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0438-Find-All-Anagrams-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0445-Add-Two-Numbers-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0446-Arithmetic-Slices-II-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0447-Number-of-Boomerangs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0450-Delete-Node-in-a-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0451-Sort-Characters-By-Frequency
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0452-Minimum-Number-of-Arrows-to-Burst-Balloons
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0453-Minimum-Moves-to-Equal-Array-Elements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0454-4Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0455-Assign-Cookies
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0458-Poor-Pigs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0459-Repeated-Substring-Pattern
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0462-Minimum-Moves-to-Equal-Array-Elements-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0473-Matchsticks-to-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0474-Ones-and-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0486-Predict-the-Winner
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0492-Construct-the-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0494-Target-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0496-Next-Greater-Element-I
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0503-Next-Greater-Element-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0520-Detect-Capital
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0524-Longest-Word-in-Dictionary-through-Deleting
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0525-Contiguous-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0528-Random-Pick-with-Weight
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0530-Minimum-Absolute-Difference-in-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0543-Diameter-of-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0547-Friend-Circles
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0559-Maximum-Depth-of-N-ary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0560-Subarray-Sum-Equals-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0567-Permutation-in-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0583-Delete-Operation-for-Two-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0587-Erect-the-Fence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0594-Longest-Harmonious-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0605-Can-Place-Flowers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0637-Average-of-Levels-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0650-2-Keys-Keyboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0652-Find-Duplicate-Subtrees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0653-Two-Sum-IV-Input-is-a-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0654-Maximum-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0678-Valid-Parenthesis-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0684-Redundant-Connection
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0687-Longest-Univalue-Path
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0695-Max-Area-of-Island
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0697-Degree-of-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0698-Partition-to-K-Equal-Sum-Subsets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0700-Search-in-a-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0733-Flood-Fill
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0739-Daily-Temperatures
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0742-Closest-Leaf-in-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0776-Toeplitz-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0783-Minimum-Distance-Between-BST-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0788-Rotated-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0790-Domino-and-Tromino-Tiling
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0793-Preimage-Size-of-Factorial-Zeroes-Function
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0795-Number-of-Subarrays-with-Bounded-Maximum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0813-Largest-Sum-of-Averages
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0820-Short-Encoding-of-Words
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0824-Goat-Latin
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0825-Friends-Of-Appropriate-Ages
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0826-Most-Profit-Assigning-Work
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0827-Making-A-Large-Island
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0828-Unique-Letter-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0829-Consecutive-Numbers-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0832-Flipping-an-Image
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0834-Sum-of-Distances-in-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0836-Rectangle-Overlap
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0844-Backspace-String-Compare
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0845-Longest-Mountain-in-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0846-Hand-of-Straights
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0847-Shortest-Path-Visiting-All-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0852-Peak-Index-in-a-Mountain-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0857-Minimum-Cost-to-Hire-K-Workers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0859-Buddy-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0872-Leaf-Similar-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0873-Length-of-Longest-Fibonacci-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0874-Walking-Robot-Simulation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0876-Middle-of-the-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0878-Nth-Magical-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0891-Sum-of-Subsequence-Widths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0892-Surface-Area-of-3D-Shapes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0895-Maximum-Frequency-Stack
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0901-Online-Stock-Span
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0902-Numbers-At-Most-N-Given-Digit-Set
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0904-Fruit-Into-Baskets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0907-Sum-of-Subarray-Minimums
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0914-X-of-a-Kind-in-a-Deck-of-Cards
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0917-Reverse-Only-Letters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0918-Maximum-Sum-Circular-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0919-Complete-Binary-Tree-Inserter
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0920-Number-of-Music-Playlists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0921-Minimum-Add-to-Make-Parentheses-Valid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0922-Sort-Array-By-Parity-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0923-3Sum-With-Multiplicity
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0925-Long-Pressed-Name
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0926-Flip-String-to-Monotone-Increasing
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0927-Three-Equal-Parts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0929-Unique-Email-Addresses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0930-Binary-Subarrays-With-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0931-Minimum-Falling-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0932-Beautiful-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0933-Number-of-Recent-Calls
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0934-Shortest-Bridge
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0935-Knight-Dialer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0936-Stamping-The-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0937-Reorder-Log-Files
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0938-Range-Sum-of-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0939-Minimum-Area-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0940-Distinct-Subsequences-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0941-Valid-Mountain-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0942-DI-String-Match
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0943-Find-the-Shortest-Superstring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0944-Delete-Columns-to-Make-Sorted
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0945-Minimum-Increment-to-Make-Array-Unique
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0946-Validate-Stack-Sequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0947-Most-Stones-Removed-with-Same-Row-or-Column
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0948-Bag-of-Tokens
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0949-Largest-Time-for-Given-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0950-Reveal-Cards-In-Increasing-Order
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0951-Flip-Equivalent-Binary-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0953-Verifying-an-Alien-Dictionary
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0954-Array-of-Doubled-Pairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0955-Delete-Columns-to-Make-Sorted-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0956-Tallest-Billboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0957-Prison-Cells-After-N-Days
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0958-Check-Completeness-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0959-Regions-Cut-By-Slashes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0960-Delete-Columns-to-Make-Sorted-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0961-N-Repeated-Element-in-Size-2N-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0962-Maximum-Width-Ramp
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0963-Minimum-Area-Rectangle-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0965-Univalued-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0966-Vowel-Spellchecker
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0967-Numbers-With-Same-Consecutive-Differences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0969-Pancake-Sorting
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0970-Powerful-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0971-Flip-Binary-Tree-To-Match-Preorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0972-Equal-Rational-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0973-K-Closest-Points-to-Origin
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0974-Subarray-Sums-Divisible-by-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0975-Odd-Even-Jump
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0976-Largest-Perimeter-Triangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0977-Squares-of-a-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0978-Longest-Turbulent-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0979-Distribute-Coins-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0980-Unique-Paths-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0981-Time-Based-Key-Value-Store
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0982-Triples-with-Bitwise-AND-Equal-To-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0983-Minimum-Cost-For-Tickets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0984-String-Without-AAA-or-BBB
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0985-Sum-of-Even-Numbers-After-Queries
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0986-Interval-List-Intersections
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0987-Vertical-Order-Traversal-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0988-Smallest-String-Starting-From-Leaf
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0989-Add-to-Array-Form-of-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0990-Satisfiability-of-Equality-Equations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0991-Broken-Calculator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0992-Subarrays-with-K-Different-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0993-Cousins-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0994-Rotting-Oranges
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0995-Minimum-Number-of-K-Consecutive-Bit-Flips
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0996-Number-of-Squareful-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0997-Find-the-Town-Judge
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0998-Maximum-Binary-Tree-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0999-Available-Captures-for-Rook
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1000-Minimum-Cost-to-Merge-Stones
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1001-Grid-Illumination
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1002-Find-Common-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1003-Check-If-Word-Is-Valid-After-Substitutions
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1004-Max-Consecutive-Ones-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1005-Maximize-Sum-Of-Array-After-K-Negations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1006-Clumsy-Factorial
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1007-Minimum-Domino-Rotations-For-Equal-Row
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1008-Construct-Binary-Search-Tree-from-Preorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1009-Complement-of-Base-10-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1010-Pairs-of-Songs-With-Total-Durations-Divisible-by-60
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1011-Capacity-To-Ship-Packages-Within-D-Days
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1012-Numbers-With-Repeated-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1013-Partition-Array-Into-Three-Parts-With-Equal-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1014-Best-Sightseeing-Pair
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1015-Smallest-Integer-Divisible-by-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1017-Convert-to-Base-2
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1018-Binary-Prefix-Divisible-By-5
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1019-Next-Greater-Node-In-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1020-Number-of-Enclaves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1021-Remove-Outermost-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1022-Sum-of-Root-To-Leaf-Binary-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1023-Camelcase-Matching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1024-Video-Stitching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1025-Divisor-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1026-Maximum-Difference-Between-Node-and-Ancestor
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1027-Longest-Arithmetic-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1033-Moving-Stones-Until-Consecutive
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1034-Coloring-A-Border
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1035-Uncrossed-Lines
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1037-Valid-Boomerang
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1038-Binary-Search-Tree-to-Greater-Sum-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1039-Minimum-Score-Triangulation-of-Polygon
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1041-Robot-Bounded-In-Circle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1042-Flower-Planting-With-No-Adjacent
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1043-Partition-Array-for-Maximum-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1046-Last-Stone-Weight
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1047-Remove-All-Adjacent-Duplicates-In-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1048-Longest-String-Chain
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1049-Last-Stone-Weight-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1051-Height-Checker
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1052-Grumpy-Bookstore-Owner
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1053-Previous-Permutation-With-One-Swap
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1054-Distant-Barcodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1061-Lexicographically-Smallest-Equivalent-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1064-Fixed-Point
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1065-Index-Pairs-of-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1066-Campus-Bikes-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1067-Digit-Count-in-Range
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1071-Greatest-Common-Divisor-of-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1072-Flip-Columns-For-Maximum-Number-of-Equal-Rows
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1073-Adding-Two-Negabinary-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1074-Number-of-Submatrices-That-Sum-to-Target
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1078-Occurrences-After-Bigram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1079-Letter-Tile-Possibilities
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1080-Insufficient-Nodes-in-Root-to-Leaf-Paths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1081-Smallest-Subsequence-of-Distinct-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1085-Sum-of-Digits-in-the-Minimum-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1086-High-Five
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1087-Brace-Expansion
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1089-Duplicate-Zeros
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1090-Largest-Values-From-Labels
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1091-Shortest-Path-in-Binary-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1093-Statistics-from-a-Large-Sample
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1094-Car-Pooling
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1095-Find-in-Mountain-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1096-Brace-Expansion-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1099-Two-Sum-Less-Than-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1100-Find-K-Length-Substrings-With-No-Repeated-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1101-The-Earliest-Moment-When-Everyone-Become-Friends
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1102-Path-With-Maximum-Minimum-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1103-Distribute-Candies-to-People
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1104-Path-In-Zigzag-Labelled-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1105-Filling-Bookcase-Shelves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1106-Parsing-A-Boolean-Expression
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1108-Defanging-an-IP-Address
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1109-Corporate-Flight-Bookings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1110-Delete-Nodes-And-Return-Forest
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1111-Maximum-Nesting-Depth-of-Two-Valid-Parentheses-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1118-Number-of-Days-in-a-Month
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1119-Remove-Vowels-from-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1120-Maximum-Average-Subtree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1121-Divide-Array-Into-Increasing-Sequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1122-Relative-Sort-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1123-Lowest-Common-Ancestor-of-Deepest-Leaves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1124-Longest-Well-Performing-Interval
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1125-Smallest-Sufficient-Team
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1128-Number-of-Equivalent-Domino-Pairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1129-Shortest-Path-with-Alternating-Colors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1130-Minimum-Cost-Tree-From-Leaf-Values
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1131-Maximum-of-Absolute-Value-Expression
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1133-Largest-Unique-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1134-Armstrong-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1135-Connecting-Cities-With-Minimum-Cost
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1136-Parallel-Courses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1137-N-th-Tribonacci-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1138-Alphabet-Board-Path
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1139-Largest-1-Bordered-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1140-Stone-Game-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1143-Longest-Common-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1144-Decrease-Elements-To-Make-Array-Zigzag
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1145-Binary-Tree-Coloring-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1146-Snapshot-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1147-Longest-Chunked-Palindrome-Decomposition
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1150-Check-If-a-Number-Is-Majority-Element-in-a-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1151-Minimum-Swaps-to-Group-All-1's-Together
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1152-Analyze-User-Website-Visit-Pattern
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1153-String-Transforms-Into-Another-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1154-Day-of-the-Year
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1155-Number-of-Dice-Rolls-With-Target-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1156-Swap-For-Longest-Repeated-Character-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1157-Online-Majority-Element-In-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1160-Find-Words-That-Can-Be-Formed-by-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1161-Maximum-Level-Sum-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1162-As-Far-from-Land-as-Possible
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1165-Single-Row-Keyboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1166-Design-File-System
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1167-Minimum-Cost-to-Connect-Sticks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1168-Optimize-Water-Distribution-in-a-Village
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1169-Invalid-Transactions
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1170-Compare-Strings-by-Frequency-of-the-Smallest-Character
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1171-Remove-Zero-Sum-Consecutive-Nodes-from-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1172-Dinner-Plate-Stacks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1175-Prime-Arrangements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1176-Diet-Plan-Performance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1184-Distance-Between-Bus-Stops
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1185-Day-of-the-Week
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1186-Maximum-Subarray-Sum-with-One-Deletion
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1187-Make-Array-Strictly-Increasing
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1189-Maximum-Number-of-Balloons
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1190-Reverse-Substrings-Between-Each-Pair-of-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1191-K-Concatenation-Maximum-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1192-Critical-Connections-in-a-Network
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1196-How-Many-Apples-Can-You-Put-into-the-Basket
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1197-Minimum-Knight-Moves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1198-Find-Smallest-Common-Element-in-All-Rows
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1199-Minimum-Time-to-Build-Blocks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1200-Minimum-Absolute-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1201-Ugly-Number-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1202-Smallest-String-With-Swaps
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1207-Unique-Number-of-Occurrences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1208-Get-Equal-Substrings-Within-Budget
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1209-Remove-All-Adjacent-Duplicates-in-String-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1210-Minimum-Moves-to-Reach-Target-with-Rotations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1213-Intersection-of-Three-Sorted-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1214-Two-Sum-BSTs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1215-Stepping-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1216-Valid-Palindrome-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1217-Play-with-Chips
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1218-Longest-Arithmetic-Subsequence-of-Given-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1219-Path-with-Maximum-Gold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1220-Count-Vowels-Permutation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1221-Split-a-String-in-Balanced-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1222-Queens-That-Can-Attack-the-King
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1223-Dice-Roll-Simulation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1224-Maximum-Equal-Frequency
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1228-Missing-Number-In-Arithmetic-Progression
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1229-Meeting-Scheduler
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1230-Toss-Strange-Coins
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1231-Divide-Chocolate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1232-Check-If-It-Is-a-Straight-Line
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1233-Remove-Sub-Folders-from-the-Filesystem
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1234-Replace-the-Substring-for-Balanced-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1235-Maximum-Profit-in-Job-Scheduling
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1237-Find-Positive-Integer-Solution-for-a-Given-Equation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1238-Circular-Permutation-in-Binary-Representation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1239-Maximum-Length-of-a-Concatenated-String-with-Unique-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1240-Tiling-a-Rectangle-with-the-Fewest-Squares
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1243-Array-Transformation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1244-Design-A-Leaderboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1245-Tree-Diameter
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1246-Palindrome-Removal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1247-Minimum-Swaps-to-Make-Strings-Equal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1248-Count-Number-of-Nice-Subarrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1249-Minimum-Remove-to-Make-Valid-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1250-Check-If-It-Is-a-Good-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1252-Cells-with-Odd-Values-in-a-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1253-Reconstruct-a-2-Row-Binary-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1254-Number-of-Closed-Islands
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1255-Maximum-Score-Words-Formed-by-Letters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1256-Encode-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1257-Smallest-Common-Region
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1258-Synonymous-Sentences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1259-Handshakes-That-Don't-Cross
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1260-Shift-2D-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1261-Find-Elements-in-a-Contaminated-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1262-Greatest-Sum-Divisible-by-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1263-Minimum-Moves-to-Move-a-Box-to-Their-Target-Location
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1266-Minimum-Time-Visiting-All-Points
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1267-Count-Servers-that-Communicate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1268-Search-Suggestions-System
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1269-Number-of-Ways-to-Stay-in-the-Same-Place-After-Some-Steps
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1271-Hexspeak
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1272-Remove-Interval
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1273-Delete-Tree-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1274-Number-of-Ships-in-a-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1275-Find-Winner-on-a-Tic-Tac-Toe-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1276-Number-of-Burgers-with-No-Waste-of-Ingredients
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1277-Count-Square-Submatrices-with-All-Ones
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1278-Palindrome-Partitioning-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1282-Group-the-People-Given-the-Group-Size-They-Belong-To
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1283-Find-the-Smallest-Divisor-Given-a-Threshold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1284-Minimum-Number-of-Flips-to-Convert-Binary-Matrix-to-Zero-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1286-Iterator-for-Combination
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1287-Element-Appearing-More-Than-25%-In-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1288-Remove-Covered-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1289-Minimum-Falling-Path-Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1290-Convert-Binary-Number-in-a-Linked-List-to-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1291-Sequential-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1292-Maximum-Side-Length-of-a-Square-with-Sum-Less-than-or-Equal-to-Threshold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1293-Shortest-Path-in-a-Grid-with-Obstacles-Elimination
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1295-Find-Numbers-with-Even-Number-of-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1296-Divide-Array-in-Sets-of-K-Consecutive-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1297-Maximum-Number-of-Occurrences-of-a-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1298-Maximum-Candies-You-Can-Get-from-Boxes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1299-Replace-Elements-with-Greatest-Element-on-Right-Side
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1300-Sum-of-Mutated-Array-Closest-to-Target
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1301-Number-of-Paths-with-Max-Score
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1302-Deepest-Leaves-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1304-Find-N-Unique-Integers-Sum-up-to-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1305-All-Elements-in-Two-Binary-Search-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1306-Jump-Game-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1309-Decrypt-String-from-Alphabet-to-Integer-Mapping
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1310-XOR-Queries-of-a-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1311-Get-Watched-Videos-by-Your-Friends
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1313-Decompress-Run-Length-Encoded-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1314-Matrix-Block-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1315-Sum-of-Nodes-with-Even-Valued-Grandparent
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1316-Distinct-Echo-Substrings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1318-Minimum-Flips-to-Make-a-OR-b-Equal-to-c
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1319-Number-of-Operations-to-Make-Network-Connected
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1320-Minimum-Distance-to-Type-a-Word-Using-Two-Fingers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1323-Maximum-69-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1324-Print-Words-Vertically
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1325-Delete-Leaves-With-a-Given-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1326-Minimum-Number-of-Taps-to-Open-to-Water-a-Garden
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1328-Break-a-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1329-Sort-the-Matrix-Diagonally
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1330-Reverse-Subarray-To-Maximize-Array-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1331-Rank-Transform-of-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1332-Remove-Palindromic-Subsequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1333-Filter-Restaurants-by-Vegan-Friendly,-Price-and-Distance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1334-Find-the-City-With-the-Smallest-Number-of-Neighbors-at-a-Threshold-Distance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1335-Minimum-Difficulty-of-a-Job-Schedule
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1337-The-K-Weakest-Rows-in-a-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1338-Reduce-Array-Size-to-The-Half
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1339-Maximum-Product-of-Splitted-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1340-Jump-Game-V
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1342-Number-of-Steps-to-Reduce-a-Number-to-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1343-Number-of-Sub-arrays-of-Size-K-and-Average-Greater-than-or-Equal-to-Threshold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1344-Angle-Between-Hands-of-a-Clock
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1345-Jump-Game-IV
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1346-Check-If-N-and-Its-Double-Exist
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1347-Minimum-Number-of-Steps-to-Make-Two-Strings-Anagram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1348-Tweet-Counts-Per-Frequency
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1349-Maximum-Students-Taking-Exam
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1351-Count-Negative-Numbers-in-a-Sorted-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1352-Product-of-the-Last-K-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1353-Maximum-Number-of-Events-That-Can-Be-Attended
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1354-Construct-Target-Array-With-Multiple-Sums
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1356-Sort-Integers-by-The-Number-of-1-Bits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1357-Apply-Discount-Every-n-Orders
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1358-Number-of-Substrings-Containing-All-Three-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1359-Count-All-Valid-Pickup-and-Delivery-Options
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1360-Number-of-Days-Between-Two-Dates
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1361-Validate-Binary-Tree-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1362-Closest-Divisors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1363-Largest-Multiple-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1366-Rank-Teams-by-Votes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1367-Linked-List-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1368-Minimum-Cost-to-Make-at-Least-One-Valid-Path-in-a-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1370-Increasing-Decreasing-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1371-Find-the-Longest-Substring-Containing-Vowels-in-Even-Counts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1372-Longest-ZigZag-Path-in-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1373-Maximum-Sum-BST-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1374-Generate-a-String-With-Characters-That-Have-Odd-Counts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1375-Bulb-Switcher-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1376-Time-Needed-to-Inform-All-Employees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1377-Frog-Position-After-T-Seconds
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1380-Lucky-Numbers-in-a-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1381-Design-a-Stack-With-Increment-Operation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1382-Balance-a-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1383-Maximum-Performance-of-a-Team
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1385-Find-the-Distance-Value-Between-Two-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1386-Cinema-Seat-Allocation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1387-Sort-Integers-by-The-Power-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1388-Pizza-With-3n-Slices
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1389-Create-Target-Array-in-the-Given-Order
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1390-Four-Divisors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1391-Check-if-There-is-a-Valid-Path-in-a-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1392-Longest-Happy-Prefix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1394-Find-Lucky-Integer-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1395-Count-Number-of-Teams
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1396-Design-Underground-System
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1397-Find-All-Good-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1399-Count-Largest-Group
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1400-Construct-K-Palindrome-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1401-Circle-and-Rectangle-Overlapping
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1402-Reducing-Dishes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1403-Minimum-Subsequence-in-Non-Increasing-Order
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1404-Number-of-Steps-to-Reduce-a-Number-in-Binary-Representation-to-One
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1405-Longest-Happy-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1406-Stone-Game-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1408-String-Matching-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1409-Queries-on-a-Permutation-With-Key
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1410-HTML-Entity-Parser
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1411-Number-of-Ways-to-Paint-N×3-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1414-Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1415-The-k-th-Lexicographical-String-of-All-Happy-Strings-of-Length-n
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1416-Restore-The-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1417-Reformat-The-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1418-Display-Table-of-Food-Orders-in-a-Restaurant
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1419-Minimum-Number-of-Frogs-Croaking
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1420-Build-Array-Where-You-Can-Find-The-Maximum-Exactly-K-Comparisons
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1422-Maximum-Score-After-Splitting-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1423-Maximum-Points-You-Can-Obtain-from-Cards
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1424-Diagonal-Traverse-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1425-Constrained-Subsequence-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1431-Kids-With-the-Greatest-Number-of-Candies
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1432-Max-Difference-You-Can-Get-From-Changing-an-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1433-Check-If-a-String-Can-Break-Another-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1434-Number-of-Ways-to-Wear-Different-Hats-to-Each-Other
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1436-Destination-City
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1437-Check-If-All-1's-Are-at-Least-Length-K-Places-Away
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1438-Longest-Continuous-Subarray-With-Absolute-Diff-Less-Than-or-Equal-to-Limit
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1439-Find-the-Kth-Smallest-Sum-of-a-Matrix-With-Sorted-Rows
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1441-Build-an-Array-With-Stack-Operations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1442-Count-Triplets-That-Can-Form-Two-Arrays-of-Equal-XOR
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1443-Minimum-Time-to-Collect-All-Apples-in-a-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1444-Number-of-Ways-of-Cutting-a-Pizza
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1470-Shuffle-the-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1472-Design-Browser-History
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1523-Count-Odd-Numbers-in-an-Interval-Range
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1546-Maximum-Number-of-Non-Overlapping-Subarrays-With-Sum-Equals-Target
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1574-Shortest-Subarray-To-Be-Removed-To-Make-Array-Sorted
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1604-Alert-Using-Same-Key-Card-Three-or-More-Times-in-a-One-Hour-Period
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1616-Split-Two-Strings-to-Make-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1626-Best-Team-With-No-Conflicts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1657-Determine-if-Two-Strings-Are-Close
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1658-Minimum-Operations-to-Reduce-X-to-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1664-Ways-to-Make-a-Fair-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1669-Merge-In-Between-Linked-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1673-Find-the-Most-Competitive-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1691-Maximum-Height-by-Stacking-Cuboids
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1704-Determine-if-String-Halves-Are-Alike
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1732-Find-the-Highest-Altitude
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1739-Building-Boxes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1742-Maximum-Number-of-Balls-in-a-Box
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1750-Minimum-Length-of-String-After-Deleting-Similar-Ends
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1752-Check-if-Array-Is-Sorted-and-Rotated
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1754-Largest-Merge-Of-Two-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1758-Minimum-Changes-To-Make-Alternating-Binary-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1759-Count-Number-of-Homogenous-Substrings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1779-Find-Nearest-Point-That-Has-the-Same-X-or-Y-Coordinate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1780-Check-if-Number-is-a-Sum-of-Powers-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1781-Sum-of-Beauty-of-All-Substrings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1796-Second-Largest-Digit-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1798-Maximum-Number-of-Consecutive-Values-You-Can-Make
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1801-Number-of-Orders-in-the-Backlog
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1802-Maximum-Value-at-a-Given-Index-in-a-Bounded-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1805-Number-of-Different-Integers-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1806-Minimum-Number-of-Operations-to-Reinitialize-a-Permutation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1807-Evaluate-the-Bracket-Pairs-of-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1812-Determine-Color-of-a-Chessboard-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1813-Sentence-Similarity-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1814-Count-Nice-Pairs-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1819-Number-of-Different-Subsequences-GCDs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1827-Minimum-Operations-to-Make-the-Array-Increasing
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1832-Check-if-the-Sentence-is-Pangram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1833-Maximum-Ice-Cream-Bars
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1834-Single-Threaded-CPU
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1926-Nearest-Exit-from-Entrance-in-Maze
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1962-Remove-Stones-to-Minimize-the-Total
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2011-Final-Value-of-Variable-After-Performing-Operations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2027-Minimum-Moves-to-Convert-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2032-Two-Out-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2037-Minimum-Number-of-Moves-to-Seat-Everyone
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2042-Check-if-Numbers-Are-Ascending-in-a-Sentence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2180-Count-Integers-With-Even-Digit-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2185-Counting-Words-With-a-Given-Prefix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2225-Find-Players-With-Zero-or-One-Losses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2244-Minimum-Rounds-to-Complete-All-Tasks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2256-Minimum-Average-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2279-Maximum-Bags-With-Full-Capacity-of-Rocks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2287-Rearrange-Characters-to-Make-Target-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2293-Min-Max-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2315-Count-Asterisks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2319-Check-if-Matrix-Is-X-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2325-Decode-the-Message
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2331-Evaluate-Boolean-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2341-Maximum-Number-of-Pairs-in-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2347-Best-Poker-Hand
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2351-First-Letter-to-Appear-Twice
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2357-Make-Array-Zero-by-Subtracting-Equal-Amounts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2389-Longest-Subsequence-With-Limited-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2395-Find-Subarrays-With-Equal-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2427-Number-of-Common-Factors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2439-Minimize-Maximum-of-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2469-Convert-the-Temperature
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2470-Number-of-Subarrays-With-LCM-Equal-to-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2471-Minimum-Number-of-Operations-to-Sort-a-Binary-Tree-by-Level
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2477-Minimum-Fuel-Cost-to-Report-to-the-Capital
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2549-Count-Distinct-Numbers-on-Board
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2550-Count-Collisions-of-Monkeys-on-a-Polygon
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2551-Put-Marbles-in-Bags
ENVIRO.PARSE_ALL_FILES: NO
ENVIRO.END
2025-02-06 17:00:56 DEBUG ChooseUUTController:923 - [JavaFX Application Thread] Environment configuration: 
ENVIRO.NEW
ENVIRO.COMPILER.NEW
ENVIRO.COMPILER.NAME: [MinGW] C++ 14
ENVIRO.COMPILER.COMPILE_CMD: g++ -c -std=gnu++14 -w
ENVIRO.COMPILER.PREPROCESS_CMD: g++ -c -E -std=gnu++14
ENVIRO.COMPILER.LINK_CMD: g++ -std=gnu++14 -w
ENVIRO.COMPILER.DEBUG_CMD: gdb
ENVIRO.COMPILER.INCLUDE_FLAG: -I
ENVIRO.COMPILER.DEFINE_FLAG: -D
ENVIRO.COMPILER.OUTPUT_FLAG: -o
ENVIRO.COMPILER.DEBUG_FLAG: -ggdb
ENVIRO.COMPILER.OUTPUT_EXT: .out
ENVIRO.COMPILER.IS_USE_GTEST: false
ENVIRO.COMPILER.END
ENVIRO.CMAKE.NEW
ENVIRO.CMAKE.IS_CMAKE_PROJECT: false
ENVIRO.CMAKE.IS_AKA_CMAKE_PROJECT: false
ENVIRO.CMAKE.GENERATOR: unknown
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_CMD: cmake
ENVIRO.CMAKE.BUILDSYSTEM_GENERATION_OPTIONS: 
ENVIRO.CMAKE.BUILD_CMD: cmake --build
ENVIRO.CMAKE.BUILD_OPTIONS: 
ENVIRO.CMAKE.PROJ_DIRECTORY: 
ENVIRO.CMAKE.END
ENVIRO.NAME: luliyucoordinate
ENVIRO.TESTING_METHOD: TRADITIONAL_UNIT_TESTING
ENVIRO.WHITE_BOX: YES
ENVIRO.COVERAGE_TYPE: STATEMENT+MCDC
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0001-Two-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0002-Add-Two-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0003-Longest-Substring-Without-Repeating-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0004-Median-of-Two-Sorted-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0005-Longest-Palindromic-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0006-ZigZag-Conversion
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0007-Reverse-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0008-String-to-Integer-(atoi)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0009-Palindrome-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0010-Regular-Expression-Matching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0011-Container-With-Most-Water
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0012-Integer-to-Roman
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0013-Roman-to-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0014-Longest-Common-Prefix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0015-3Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0016-3Sum-Closest
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0017-Letter-Combinations-of-a-Phone-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0018-4Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0019-Remove-Nth-Node-From-End-of-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0020-Valid-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0021-Merge-Two-Sorted-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0022-Generate-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0023-Merge-k-Sorted-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0024-Swap-Nodes-in-Pairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0025-Reverse-Nodes-in-k-Group
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0026-Remove-Duplicates-from-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0027-Remove-Element
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0028-Implement-strStr()
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0029-Divide-Two-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0030-Substring-with-Concatenation-of-All-Words
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0031-Next-Permutation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0032-Longest-Valid-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0033-Search-in-Rotated-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0034-Find-First-and-Last-Position-of-Element-in-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0035-Search-Insert-Position
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0036-Valid-Sudoku
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0037-Sudoku-Solver
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0038-Count-and-Say
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0039-Combination-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0040-Combination-Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0041-First-Missing-Positive
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0042-Trapping-Rain-Water
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0043-Multiply-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0044-Wildcard-Matching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0045-Jump-Game-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0046-Permutations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0047-Permutations-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0048-Rotate-Image
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0049-Group-Anagrams
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0050-Pow(x,n)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0051-N-Queens
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0052-N-Queens-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0053-Maximum-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0054-Spiral-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0055-Jump-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0056-Merge-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0057-Insert-Interval
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0058-Length-of-Last-Word
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0059-Spiral-Matrix-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0060-Permutation-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0061-Rotate-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0062-Unique-Paths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0063-Unique-Paths-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0064-Minimum-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0065-Valid-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0066-Plus-One
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0067-Add-Binary
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0068-Text-Justification
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0069-Sqrt(x)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0070-Climbing-Stairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0071-Simplify-Path
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0072-Edit-Distance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0073-Set-Matrix-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0074-Search-a-2D-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0075-Sort-Colors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0076-Minimum-Window-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0077-Combinations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0078-Subsets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0079-Word-Search
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0080-Remove-Duplicates-from-Sorted-Array-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0081-Search-in-Rotated-Sorted-Array-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0082-Remove-Duplicates-from-Sorted-List-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0083-Remove-Duplicates-from-Sorted-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0084-Largest-Rectangle-in-Histogram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0085-Maximal-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0086-Partition-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0087-Scramble-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0088-Merge-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0089-Gray-Code
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0090-Subsets-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0091-Decode-Ways
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0092-Reverse-Linked-List-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0093-Restore-IP-Addresses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0094-Binary-Tree-Inorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0095-Unique-Binary-Search-Trees-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0096-Unique-Binary-Search-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0097-Interleaving-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0098-Validate-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0099-Recover-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0100-Same-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0101-Symmetric-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0102-Binary-Tree-Level-Order-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0103-Binary-Tree-Zigzag-Level-Order-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0104-Maximum-Depth-of-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0105-Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0106-Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0107-Binary-Tree-Level-Order-Traversal-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0108-Convert-Sorted-Array-to-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0109-Convert-Sorted-List-to-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0110-Balanced-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0111-Minimum-Depth-of-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0112-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0113-Path-Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0114-Flatten-Binary-Tree-to-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0115-Distinct-Subsequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0116-Populating-Next-Right-Pointers-in-Each-Node
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0117-Populating-Next-Right-Pointers-in-Each-Node-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0118-Pascal's-Triangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0119-Pascal's-Triangle-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0120-Triangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0121-Best-Time-to-Buy-and-Sell-Stock
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0122-Best-Time-to-Buy-and-Sell-Stock-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0123-Best-Time-to-Buy-and-Sell-Stock-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0124-Binary-Tree-Maximum-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0125-Valid-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0126-Word-Ladder-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0127-Word-Ladder
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0128-Longest-Consecutive-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0129-Sum-Root-to-Leaf-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0130-Surrounded-Regions
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0131-Palindrome-Partitioning
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0132-Palindrome-Partitioning-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0133-Clone-Graph
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0134-Gas-Station
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0135-Candy
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0136-Single-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0137-Single-Number-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0138-Copy-List-with-Random-Pointer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0139-Word-Break
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0140-Word-Break-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0141-Linked-List-Cycle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0142-Linked-List-Cycle-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0143-Reorder-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0144-Binary-Tree-Preorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0145-Binary-Tree-Postorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0146-LRU-Cache
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0147-Insertion-Sort-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0148-Sort-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0149-Max-Points-on-a-Line
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0150-Evaluate-Reverse-Polish-Notation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0151-Reverse-Words-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0152-Maximum-Product-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0153-Find-Minimum-in-Rotated-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0154-Find-Minimum-in-Rotated-Sorted-Array-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0155-Min-Stack
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0160-Intersection-of-Two-Linked-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0162-Find-Peak-Element
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0165-Compare-Version-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0166-Fraction-to-Recurring-Decimal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0167-Two-Sum-II-Input-array-is-sorted
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0168-Excel-Sheet-Column-Title
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0169-Majority-Element
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0171-Excel-Sheet-Column-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0172-Factorial-Trailing-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0173-Binary-Search-Tree-Iterator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0174-Dungeon-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0179-Largest-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0187-Repeated-DNA-Sequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0188-Best-Time-to-Buy-and-Sell-Stock-IV
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0189-Rotate-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0190-Reverse-Bits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0191-Number-of-1-Bits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0198-House-Robber
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0199-Binary-Tree-Right-Side-View
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0200-Number-of-Islands
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0201-Bitwise-AND-of-Numbers-Range
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0202-Happy-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0203-Remove-Linked-List-Elements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0204-Count-Primes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0205-Isomorphic-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0206-Reverse-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0207-Course-Schedule
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0208-Implement-Trie-(Prefix-Tree)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0209-Minimum-Size-Subarray-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0210-Course-Schedule-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0211-Add-and-Search-Word-Data-structure-design
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0212-Word-Search-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0213-House-Robber-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0215-Kth-Largest-Element-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0216-Combination-Sum-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0217-Contains-Duplicate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0218-The-Skyline-Problem
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0219-Contains-Duplicate-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0220-Contains-Duplicate-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0221-Maximal-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0222-Count-Complete-Tree-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0223-Rectangle-Area
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0224-Basic-Calculator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0226-Invert-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0228-Summary-Ranges
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0229-Majority-Element-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0230-Kth-Smallest-Element-in-a-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0231-Power-of-Two
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0234-Palindrome-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0235-Lowest-Common-Ancestor-of-a-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0236-Lowest-Common-Ancestor-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0237-Delete-Node-in-a-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0238-Product-of-Array-Except-Self
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0239-Sliding-Window-Maximum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0240-Search-a-2D-Matrix-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0241-Different-Ways-to-Add-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0242-Valid-Anagram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0253-Meeting-Rooms-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0257-Binary-Tree-Paths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0260-Single-Number-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0263-Ugly-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0264-Ugly-Number-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0268-Missing-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0274-H-Index
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0275-H-Index-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0278-First-Bad-Version
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0279-Perfect-Squares
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0283-Move-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0287-Find-the-Duplicate-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0289-Game-of-Life
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0290-Word-Pattern
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0297-Serialize-and-Deserialize-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0300-Longest-Increasing-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0303-Range-Sum-Query-Immutable
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0307-Range-Sum-Query-Mutable
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0309-Best-Time-to-Buy-and-Sel-Stock-with-Cooldown
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0310-Insert-Delete-GetRandom-O(1)
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0316-Remove-Duplicate-Letters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0319-Bulb-Switcher
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0322-Coin-Change
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0325-Maximum-Size-Subarray-Sum-Equals-k
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0326-Power-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0328-Odd-Even-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0331-Verify-Preorder-Serialization-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0337-House-Robber-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0341-Flatten-Nested-List-Iterator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0343-Integer-Break
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0344-Reverse-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0345-Reverse-Vowels-of-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0347-Top-K-Frequent-Elements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0349-Intersection-of-Two-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0350-Intersection-of-Two-Arrays-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0352-Data-Stream-as-Disjoint-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0354-Russian-Doll-Envelopes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0365-Water-and-Jug-Problem
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0371-Sum-of-Two-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0377-Combination-Sum-IV
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0384-Shuffle-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0389-Find-the-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0392-Is-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0401-Binary-Watch
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0404-Sum-of-Left-Leaves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0409-Longest-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0416-Partition-Equal-Subset-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0423-Reconstruct-Original-Digits-from-English
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0424-Longest-Repeating-Character-Replacement
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0435-Non-overlapping-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0437-Path-Sum-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0438-Find-All-Anagrams-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0445-Add-Two-Numbers-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0446-Arithmetic-Slices-II-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0447-Number-of-Boomerangs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0450-Delete-Node-in-a-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0451-Sort-Characters-By-Frequency
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0452-Minimum-Number-of-Arrows-to-Burst-Balloons
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0453-Minimum-Moves-to-Equal-Array-Elements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0454-4Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0455-Assign-Cookies
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0458-Poor-Pigs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0459-Repeated-Substring-Pattern
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0462-Minimum-Moves-to-Equal-Array-Elements-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0473-Matchsticks-to-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0474-Ones-and-Zeroes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0486-Predict-the-Winner
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0492-Construct-the-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0494-Target-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0496-Next-Greater-Element-I
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0503-Next-Greater-Element-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0520-Detect-Capital
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0524-Longest-Word-in-Dictionary-through-Deleting
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0525-Contiguous-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0528-Random-Pick-with-Weight
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0530-Minimum-Absolute-Difference-in-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0543-Diameter-of-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0547-Friend-Circles
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0559-Maximum-Depth-of-N-ary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0560-Subarray-Sum-Equals-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0567-Permutation-in-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0583-Delete-Operation-for-Two-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0587-Erect-the-Fence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0594-Longest-Harmonious-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0605-Can-Place-Flowers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0637-Average-of-Levels-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0650-2-Keys-Keyboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0652-Find-Duplicate-Subtrees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0653-Two-Sum-IV-Input-is-a-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0654-Maximum-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0678-Valid-Parenthesis-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0684-Redundant-Connection
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0687-Longest-Univalue-Path
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0695-Max-Area-of-Island
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0697-Degree-of-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0698-Partition-to-K-Equal-Sum-Subsets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0700-Search-in-a-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0733-Flood-Fill
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0739-Daily-Temperatures
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0742-Closest-Leaf-in-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0776-Toeplitz-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0783-Minimum-Distance-Between-BST-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0788-Rotated-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0790-Domino-and-Tromino-Tiling
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0793-Preimage-Size-of-Factorial-Zeroes-Function
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0795-Number-of-Subarrays-with-Bounded-Maximum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0813-Largest-Sum-of-Averages
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0820-Short-Encoding-of-Words
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0824-Goat-Latin
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0825-Friends-Of-Appropriate-Ages
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0826-Most-Profit-Assigning-Work
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0827-Making-A-Large-Island
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0828-Unique-Letter-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0829-Consecutive-Numbers-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0832-Flipping-an-Image
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0834-Sum-of-Distances-in-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0836-Rectangle-Overlap
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0844-Backspace-String-Compare
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0845-Longest-Mountain-in-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0846-Hand-of-Straights
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0847-Shortest-Path-Visiting-All-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0852-Peak-Index-in-a-Mountain-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0857-Minimum-Cost-to-Hire-K-Workers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0859-Buddy-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0872-Leaf-Similar-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0873-Length-of-Longest-Fibonacci-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0874-Walking-Robot-Simulation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0876-Middle-of-the-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0878-Nth-Magical-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0891-Sum-of-Subsequence-Widths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0892-Surface-Area-of-3D-Shapes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0895-Maximum-Frequency-Stack
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0901-Online-Stock-Span
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0902-Numbers-At-Most-N-Given-Digit-Set
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0904-Fruit-Into-Baskets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0907-Sum-of-Subarray-Minimums
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0914-X-of-a-Kind-in-a-Deck-of-Cards
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0917-Reverse-Only-Letters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0918-Maximum-Sum-Circular-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0919-Complete-Binary-Tree-Inserter
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0920-Number-of-Music-Playlists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0921-Minimum-Add-to-Make-Parentheses-Valid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0922-Sort-Array-By-Parity-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0923-3Sum-With-Multiplicity
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0925-Long-Pressed-Name
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0926-Flip-String-to-Monotone-Increasing
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0927-Three-Equal-Parts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0929-Unique-Email-Addresses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0930-Binary-Subarrays-With-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0931-Minimum-Falling-Path-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0932-Beautiful-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0933-Number-of-Recent-Calls
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0934-Shortest-Bridge
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0935-Knight-Dialer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0936-Stamping-The-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0937-Reorder-Log-Files
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0938-Range-Sum-of-BST
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0939-Minimum-Area-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0940-Distinct-Subsequences-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0941-Valid-Mountain-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0942-DI-String-Match
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0943-Find-the-Shortest-Superstring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0944-Delete-Columns-to-Make-Sorted
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0945-Minimum-Increment-to-Make-Array-Unique
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0946-Validate-Stack-Sequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0947-Most-Stones-Removed-with-Same-Row-or-Column
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0948-Bag-of-Tokens
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0949-Largest-Time-for-Given-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0950-Reveal-Cards-In-Increasing-Order
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0951-Flip-Equivalent-Binary-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0953-Verifying-an-Alien-Dictionary
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0954-Array-of-Doubled-Pairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0955-Delete-Columns-to-Make-Sorted-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0956-Tallest-Billboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0957-Prison-Cells-After-N-Days
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0958-Check-Completeness-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0959-Regions-Cut-By-Slashes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0960-Delete-Columns-to-Make-Sorted-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0961-N-Repeated-Element-in-Size-2N-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0962-Maximum-Width-Ramp
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0963-Minimum-Area-Rectangle-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0965-Univalued-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0966-Vowel-Spellchecker
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0967-Numbers-With-Same-Consecutive-Differences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0969-Pancake-Sorting
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0970-Powerful-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0971-Flip-Binary-Tree-To-Match-Preorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0972-Equal-Rational-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0973-K-Closest-Points-to-Origin
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0974-Subarray-Sums-Divisible-by-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0975-Odd-Even-Jump
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0976-Largest-Perimeter-Triangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0977-Squares-of-a-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0978-Longest-Turbulent-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0979-Distribute-Coins-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0980-Unique-Paths-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0981-Time-Based-Key-Value-Store
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0982-Triples-with-Bitwise-AND-Equal-To-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0983-Minimum-Cost-For-Tickets
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0984-String-Without-AAA-or-BBB
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0985-Sum-of-Even-Numbers-After-Queries
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0986-Interval-List-Intersections
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0987-Vertical-Order-Traversal-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0988-Smallest-String-Starting-From-Leaf
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0989-Add-to-Array-Form-of-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0990-Satisfiability-of-Equality-Equations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0991-Broken-Calculator
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0992-Subarrays-with-K-Different-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0993-Cousins-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0994-Rotting-Oranges
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0995-Minimum-Number-of-K-Consecutive-Bit-Flips
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0996-Number-of-Squareful-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0997-Find-the-Town-Judge
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0998-Maximum-Binary-Tree-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\0999-Available-Captures-for-Rook
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1000-Minimum-Cost-to-Merge-Stones
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1001-Grid-Illumination
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1002-Find-Common-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1003-Check-If-Word-Is-Valid-After-Substitutions
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1004-Max-Consecutive-Ones-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1005-Maximize-Sum-Of-Array-After-K-Negations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1006-Clumsy-Factorial
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1007-Minimum-Domino-Rotations-For-Equal-Row
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1008-Construct-Binary-Search-Tree-from-Preorder-Traversal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1009-Complement-of-Base-10-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1010-Pairs-of-Songs-With-Total-Durations-Divisible-by-60
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1011-Capacity-To-Ship-Packages-Within-D-Days
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1012-Numbers-With-Repeated-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1013-Partition-Array-Into-Three-Parts-With-Equal-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1014-Best-Sightseeing-Pair
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1015-Smallest-Integer-Divisible-by-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1017-Convert-to-Base-2
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1018-Binary-Prefix-Divisible-By-5
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1019-Next-Greater-Node-In-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1020-Number-of-Enclaves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1021-Remove-Outermost-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1022-Sum-of-Root-To-Leaf-Binary-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1023-Camelcase-Matching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1024-Video-Stitching
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1025-Divisor-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1026-Maximum-Difference-Between-Node-and-Ancestor
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1027-Longest-Arithmetic-Sequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1033-Moving-Stones-Until-Consecutive
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1034-Coloring-A-Border
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1035-Uncrossed-Lines
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1037-Valid-Boomerang
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1038-Binary-Search-Tree-to-Greater-Sum-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1039-Minimum-Score-Triangulation-of-Polygon
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1041-Robot-Bounded-In-Circle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1042-Flower-Planting-With-No-Adjacent
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1043-Partition-Array-for-Maximum-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1046-Last-Stone-Weight
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1047-Remove-All-Adjacent-Duplicates-In-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1048-Longest-String-Chain
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1049-Last-Stone-Weight-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1051-Height-Checker
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1052-Grumpy-Bookstore-Owner
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1053-Previous-Permutation-With-One-Swap
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1054-Distant-Barcodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1061-Lexicographically-Smallest-Equivalent-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1064-Fixed-Point
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1065-Index-Pairs-of-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1066-Campus-Bikes-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1067-Digit-Count-in-Range
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1071-Greatest-Common-Divisor-of-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1072-Flip-Columns-For-Maximum-Number-of-Equal-Rows
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1073-Adding-Two-Negabinary-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1074-Number-of-Submatrices-That-Sum-to-Target
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1078-Occurrences-After-Bigram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1079-Letter-Tile-Possibilities
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1080-Insufficient-Nodes-in-Root-to-Leaf-Paths
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1081-Smallest-Subsequence-of-Distinct-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1085-Sum-of-Digits-in-the-Minimum-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1086-High-Five
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1087-Brace-Expansion
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1089-Duplicate-Zeros
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1090-Largest-Values-From-Labels
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1091-Shortest-Path-in-Binary-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1093-Statistics-from-a-Large-Sample
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1094-Car-Pooling
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1095-Find-in-Mountain-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1096-Brace-Expansion-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1099-Two-Sum-Less-Than-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1100-Find-K-Length-Substrings-With-No-Repeated-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1101-The-Earliest-Moment-When-Everyone-Become-Friends
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1102-Path-With-Maximum-Minimum-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1103-Distribute-Candies-to-People
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1104-Path-In-Zigzag-Labelled-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1105-Filling-Bookcase-Shelves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1106-Parsing-A-Boolean-Expression
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1108-Defanging-an-IP-Address
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1109-Corporate-Flight-Bookings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1110-Delete-Nodes-And-Return-Forest
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1111-Maximum-Nesting-Depth-of-Two-Valid-Parentheses-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1118-Number-of-Days-in-a-Month
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1119-Remove-Vowels-from-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1120-Maximum-Average-Subtree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1121-Divide-Array-Into-Increasing-Sequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1122-Relative-Sort-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1123-Lowest-Common-Ancestor-of-Deepest-Leaves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1124-Longest-Well-Performing-Interval
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1125-Smallest-Sufficient-Team
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1128-Number-of-Equivalent-Domino-Pairs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1129-Shortest-Path-with-Alternating-Colors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1130-Minimum-Cost-Tree-From-Leaf-Values
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1131-Maximum-of-Absolute-Value-Expression
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1133-Largest-Unique-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1134-Armstrong-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1135-Connecting-Cities-With-Minimum-Cost
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1136-Parallel-Courses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1137-N-th-Tribonacci-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1138-Alphabet-Board-Path
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1139-Largest-1-Bordered-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1140-Stone-Game-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1143-Longest-Common-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1144-Decrease-Elements-To-Make-Array-Zigzag
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1145-Binary-Tree-Coloring-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1146-Snapshot-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1147-Longest-Chunked-Palindrome-Decomposition
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1150-Check-If-a-Number-Is-Majority-Element-in-a-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1151-Minimum-Swaps-to-Group-All-1's-Together
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1152-Analyze-User-Website-Visit-Pattern
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1153-String-Transforms-Into-Another-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1154-Day-of-the-Year
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1155-Number-of-Dice-Rolls-With-Target-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1156-Swap-For-Longest-Repeated-Character-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1157-Online-Majority-Element-In-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1160-Find-Words-That-Can-Be-Formed-by-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1161-Maximum-Level-Sum-of-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1162-As-Far-from-Land-as-Possible
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1165-Single-Row-Keyboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1166-Design-File-System
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1167-Minimum-Cost-to-Connect-Sticks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1168-Optimize-Water-Distribution-in-a-Village
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1169-Invalid-Transactions
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1170-Compare-Strings-by-Frequency-of-the-Smallest-Character
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1171-Remove-Zero-Sum-Consecutive-Nodes-from-Linked-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1172-Dinner-Plate-Stacks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1175-Prime-Arrangements
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1176-Diet-Plan-Performance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1184-Distance-Between-Bus-Stops
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1185-Day-of-the-Week
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1186-Maximum-Subarray-Sum-with-One-Deletion
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1187-Make-Array-Strictly-Increasing
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1189-Maximum-Number-of-Balloons
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1190-Reverse-Substrings-Between-Each-Pair-of-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1191-K-Concatenation-Maximum-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1192-Critical-Connections-in-a-Network
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1196-How-Many-Apples-Can-You-Put-into-the-Basket
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1197-Minimum-Knight-Moves
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1198-Find-Smallest-Common-Element-in-All-Rows
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1199-Minimum-Time-to-Build-Blocks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1200-Minimum-Absolute-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1201-Ugly-Number-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1202-Smallest-String-With-Swaps
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1207-Unique-Number-of-Occurrences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1208-Get-Equal-Substrings-Within-Budget
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1209-Remove-All-Adjacent-Duplicates-in-String-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1210-Minimum-Moves-to-Reach-Target-with-Rotations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1213-Intersection-of-Three-Sorted-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1214-Two-Sum-BSTs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1215-Stepping-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1216-Valid-Palindrome-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1217-Play-with-Chips
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1218-Longest-Arithmetic-Subsequence-of-Given-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1219-Path-with-Maximum-Gold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1220-Count-Vowels-Permutation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1221-Split-a-String-in-Balanced-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1222-Queens-That-Can-Attack-the-King
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1223-Dice-Roll-Simulation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1224-Maximum-Equal-Frequency
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1228-Missing-Number-In-Arithmetic-Progression
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1229-Meeting-Scheduler
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1230-Toss-Strange-Coins
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1231-Divide-Chocolate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1232-Check-If-It-Is-a-Straight-Line
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1233-Remove-Sub-Folders-from-the-Filesystem
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1234-Replace-the-Substring-for-Balanced-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1235-Maximum-Profit-in-Job-Scheduling
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1237-Find-Positive-Integer-Solution-for-a-Given-Equation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1238-Circular-Permutation-in-Binary-Representation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1239-Maximum-Length-of-a-Concatenated-String-with-Unique-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1240-Tiling-a-Rectangle-with-the-Fewest-Squares
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1243-Array-Transformation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1244-Design-A-Leaderboard
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1245-Tree-Diameter
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1246-Palindrome-Removal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1247-Minimum-Swaps-to-Make-Strings-Equal
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1248-Count-Number-of-Nice-Subarrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1249-Minimum-Remove-to-Make-Valid-Parentheses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1250-Check-If-It-Is-a-Good-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1252-Cells-with-Odd-Values-in-a-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1253-Reconstruct-a-2-Row-Binary-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1254-Number-of-Closed-Islands
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1255-Maximum-Score-Words-Formed-by-Letters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1256-Encode-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1257-Smallest-Common-Region
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1258-Synonymous-Sentences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1259-Handshakes-That-Don't-Cross
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1260-Shift-2D-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1261-Find-Elements-in-a-Contaminated-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1262-Greatest-Sum-Divisible-by-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1263-Minimum-Moves-to-Move-a-Box-to-Their-Target-Location
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1266-Minimum-Time-Visiting-All-Points
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1267-Count-Servers-that-Communicate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1268-Search-Suggestions-System
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1269-Number-of-Ways-to-Stay-in-the-Same-Place-After-Some-Steps
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1271-Hexspeak
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1272-Remove-Interval
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1273-Delete-Tree-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1274-Number-of-Ships-in-a-Rectangle
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1275-Find-Winner-on-a-Tic-Tac-Toe-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1276-Number-of-Burgers-with-No-Waste-of-Ingredients
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1277-Count-Square-Submatrices-with-All-Ones
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1278-Palindrome-Partitioning-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1282-Group-the-People-Given-the-Group-Size-They-Belong-To
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1283-Find-the-Smallest-Divisor-Given-a-Threshold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1284-Minimum-Number-of-Flips-to-Convert-Binary-Matrix-to-Zero-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1286-Iterator-for-Combination
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1287-Element-Appearing-More-Than-25%-In-Sorted-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1288-Remove-Covered-Intervals
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1289-Minimum-Falling-Path-Sum-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1290-Convert-Binary-Number-in-a-Linked-List-to-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1291-Sequential-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1292-Maximum-Side-Length-of-a-Square-with-Sum-Less-than-or-Equal-to-Threshold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1293-Shortest-Path-in-a-Grid-with-Obstacles-Elimination
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1295-Find-Numbers-with-Even-Number-of-Digits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1296-Divide-Array-in-Sets-of-K-Consecutive-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1297-Maximum-Number-of-Occurrences-of-a-Substring
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1298-Maximum-Candies-You-Can-Get-from-Boxes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1299-Replace-Elements-with-Greatest-Element-on-Right-Side
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1300-Sum-of-Mutated-Array-Closest-to-Target
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1301-Number-of-Paths-with-Max-Score
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1302-Deepest-Leaves-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1304-Find-N-Unique-Integers-Sum-up-to-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1305-All-Elements-in-Two-Binary-Search-Trees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1306-Jump-Game-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1309-Decrypt-String-from-Alphabet-to-Integer-Mapping
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1310-XOR-Queries-of-a-Subarray
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1311-Get-Watched-Videos-by-Your-Friends
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1313-Decompress-Run-Length-Encoded-List
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1314-Matrix-Block-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1315-Sum-of-Nodes-with-Even-Valued-Grandparent
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1316-Distinct-Echo-Substrings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1318-Minimum-Flips-to-Make-a-OR-b-Equal-to-c
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1319-Number-of-Operations-to-Make-Network-Connected
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1320-Minimum-Distance-to-Type-a-Word-Using-Two-Fingers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1323-Maximum-69-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1324-Print-Words-Vertically
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1325-Delete-Leaves-With-a-Given-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1326-Minimum-Number-of-Taps-to-Open-to-Water-a-Garden
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1328-Break-a-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1329-Sort-the-Matrix-Diagonally
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1330-Reverse-Subarray-To-Maximize-Array-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1331-Rank-Transform-of-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1332-Remove-Palindromic-Subsequences
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1333-Filter-Restaurants-by-Vegan-Friendly,-Price-and-Distance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1334-Find-the-City-With-the-Smallest-Number-of-Neighbors-at-a-Threshold-Distance
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1335-Minimum-Difficulty-of-a-Job-Schedule
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1337-The-K-Weakest-Rows-in-a-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1338-Reduce-Array-Size-to-The-Half
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1339-Maximum-Product-of-Splitted-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1340-Jump-Game-V
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1342-Number-of-Steps-to-Reduce-a-Number-to-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1343-Number-of-Sub-arrays-of-Size-K-and-Average-Greater-than-or-Equal-to-Threshold
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1344-Angle-Between-Hands-of-a-Clock
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1345-Jump-Game-IV
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1346-Check-If-N-and-Its-Double-Exist
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1347-Minimum-Number-of-Steps-to-Make-Two-Strings-Anagram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1348-Tweet-Counts-Per-Frequency
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1349-Maximum-Students-Taking-Exam
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1351-Count-Negative-Numbers-in-a-Sorted-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1352-Product-of-the-Last-K-Numbers
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1353-Maximum-Number-of-Events-That-Can-Be-Attended
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1354-Construct-Target-Array-With-Multiple-Sums
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1356-Sort-Integers-by-The-Number-of-1-Bits
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1357-Apply-Discount-Every-n-Orders
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1358-Number-of-Substrings-Containing-All-Three-Characters
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1359-Count-All-Valid-Pickup-and-Delivery-Options
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1360-Number-of-Days-Between-Two-Dates
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1361-Validate-Binary-Tree-Nodes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1362-Closest-Divisors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1363-Largest-Multiple-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1366-Rank-Teams-by-Votes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1367-Linked-List-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1368-Minimum-Cost-to-Make-at-Least-One-Valid-Path-in-a-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1370-Increasing-Decreasing-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1371-Find-the-Longest-Substring-Containing-Vowels-in-Even-Counts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1372-Longest-ZigZag-Path-in-a-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1373-Maximum-Sum-BST-in-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1374-Generate-a-String-With-Characters-That-Have-Odd-Counts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1375-Bulb-Switcher-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1376-Time-Needed-to-Inform-All-Employees
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1377-Frog-Position-After-T-Seconds
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1380-Lucky-Numbers-in-a-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1381-Design-a-Stack-With-Increment-Operation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1382-Balance-a-Binary-Search-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1383-Maximum-Performance-of-a-Team
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1385-Find-the-Distance-Value-Between-Two-Arrays
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1386-Cinema-Seat-Allocation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1387-Sort-Integers-by-The-Power-Value
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1388-Pizza-With-3n-Slices
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1389-Create-Target-Array-in-the-Given-Order
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1390-Four-Divisors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1391-Check-if-There-is-a-Valid-Path-in-a-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1392-Longest-Happy-Prefix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1394-Find-Lucky-Integer-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1395-Count-Number-of-Teams
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1396-Design-Underground-System
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1397-Find-All-Good-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1399-Count-Largest-Group
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1400-Construct-K-Palindrome-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1401-Circle-and-Rectangle-Overlapping
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1402-Reducing-Dishes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1403-Minimum-Subsequence-in-Non-Increasing-Order
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1404-Number-of-Steps-to-Reduce-a-Number-in-Binary-Representation-to-One
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1405-Longest-Happy-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1406-Stone-Game-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1408-String-Matching-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1409-Queries-on-a-Permutation-With-Key
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1410-HTML-Entity-Parser
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1411-Number-of-Ways-to-Paint-N×3-Grid
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1414-Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1415-The-k-th-Lexicographical-String-of-All-Happy-Strings-of-Length-n
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1416-Restore-The-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1417-Reformat-The-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1418-Display-Table-of-Food-Orders-in-a-Restaurant
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1419-Minimum-Number-of-Frogs-Croaking
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1420-Build-Array-Where-You-Can-Find-The-Maximum-Exactly-K-Comparisons
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1422-Maximum-Score-After-Splitting-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1423-Maximum-Points-You-Can-Obtain-from-Cards
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1424-Diagonal-Traverse-II
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1425-Constrained-Subsequence-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1431-Kids-With-the-Greatest-Number-of-Candies
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1432-Max-Difference-You-Can-Get-From-Changing-an-Integer
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1433-Check-If-a-String-Can-Break-Another-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1434-Number-of-Ways-to-Wear-Different-Hats-to-Each-Other
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1436-Destination-City
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1437-Check-If-All-1's-Are-at-Least-Length-K-Places-Away
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1438-Longest-Continuous-Subarray-With-Absolute-Diff-Less-Than-or-Equal-to-Limit
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1439-Find-the-Kth-Smallest-Sum-of-a-Matrix-With-Sorted-Rows
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1441-Build-an-Array-With-Stack-Operations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1442-Count-Triplets-That-Can-Form-Two-Arrays-of-Equal-XOR
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1443-Minimum-Time-to-Collect-All-Apples-in-a-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1444-Number-of-Ways-of-Cutting-a-Pizza
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1470-Shuffle-the-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1472-Design-Browser-History
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1523-Count-Odd-Numbers-in-an-Interval-Range
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1546-Maximum-Number-of-Non-Overlapping-Subarrays-With-Sum-Equals-Target
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1574-Shortest-Subarray-To-Be-Removed-To-Make-Array-Sorted
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1604-Alert-Using-Same-Key-Card-Three-or-More-Times-in-a-One-Hour-Period
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1616-Split-Two-Strings-to-Make-Palindrome
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1626-Best-Team-With-No-Conflicts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1657-Determine-if-Two-Strings-Are-Close
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1658-Minimum-Operations-to-Reduce-X-to-Zero
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1664-Ways-to-Make-a-Fair-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1669-Merge-In-Between-Linked-Lists
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1673-Find-the-Most-Competitive-Subsequence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1691-Maximum-Height-by-Stacking-Cuboids
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1704-Determine-if-String-Halves-Are-Alike
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1732-Find-the-Highest-Altitude
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1739-Building-Boxes
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1742-Maximum-Number-of-Balls-in-a-Box
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1750-Minimum-Length-of-String-After-Deleting-Similar-Ends
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1752-Check-if-Array-Is-Sorted-and-Rotated
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1754-Largest-Merge-Of-Two-Strings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1758-Minimum-Changes-To-Make-Alternating-Binary-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1759-Count-Number-of-Homogenous-Substrings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1779-Find-Nearest-Point-That-Has-the-Same-X-or-Y-Coordinate
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1780-Check-if-Number-is-a-Sum-of-Powers-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1781-Sum-of-Beauty-of-All-Substrings
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1796-Second-Largest-Digit-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1798-Maximum-Number-of-Consecutive-Values-You-Can-Make
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1801-Number-of-Orders-in-the-Backlog
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1802-Maximum-Value-at-a-Given-Index-in-a-Bounded-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1805-Number-of-Different-Integers-in-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1806-Minimum-Number-of-Operations-to-Reinitialize-a-Permutation
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1807-Evaluate-the-Bracket-Pairs-of-a-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1812-Determine-Color-of-a-Chessboard-Square
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1813-Sentence-Similarity-III
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1814-Count-Nice-Pairs-in-an-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1819-Number-of-Different-Subsequences-GCDs
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1827-Minimum-Operations-to-Make-the-Array-Increasing
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1832-Check-if-the-Sentence-is-Pangram
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1833-Maximum-Ice-Cream-Bars
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1834-Single-Threaded-CPU
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1926-Nearest-Exit-from-Entrance-in-Maze
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\1962-Remove-Stones-to-Minimize-the-Total
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2011-Final-Value-of-Variable-After-Performing-Operations
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2027-Minimum-Moves-to-Convert-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2032-Two-Out-of-Three
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2037-Minimum-Number-of-Moves-to-Seat-Everyone
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2042-Check-if-Numbers-Are-Ascending-in-a-Sentence
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2180-Count-Integers-With-Even-Digit-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2185-Counting-Words-With-a-Given-Prefix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2225-Find-Players-With-Zero-or-One-Losses
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2244-Minimum-Rounds-to-Complete-All-Tasks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2256-Minimum-Average-Difference
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2279-Maximum-Bags-With-Full-Capacity-of-Rocks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2287-Rearrange-Characters-to-Make-Target-String
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2293-Min-Max-Game
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2315-Count-Asterisks
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2319-Check-if-Matrix-Is-X-Matrix
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2325-Decode-the-Message
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2331-Evaluate-Boolean-Binary-Tree
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2341-Maximum-Number-of-Pairs-in-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2347-Best-Poker-Hand
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2351-First-Letter-to-Appear-Twice
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2357-Make-Array-Zero-by-Subtracting-Equal-Amounts
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2389-Longest-Subsequence-With-Limited-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2395-Find-Subarrays-With-Equal-Sum
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2427-Number-of-Common-Factors
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2439-Minimize-Maximum-of-Array
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2469-Convert-the-Temperature
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2470-Number-of-Subarrays-With-LCM-Equal-to-K
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2471-Minimum-Number-of-Operations-to-Sort-a-Binary-Tree-by-Level
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2477-Minimum-Fuel-Cost-to-Report-to-the-Capital
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2549-Count-Distinct-Numbers-on-Board
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2550-Count-Collisions-of-Monkeys-on-a-Polygon
ENVIRO.SEARCH_LIST: .\luliyucoordinate_Leetcode\src\2551-Put-Marbles-in-Bags
ENVIRO.PARSE_ALL_FILES: NO
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0001-Two-Sum\two_sum.c
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0001-Two-Sum\two_sum.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0002-Add-Two-Numbers\Add_Two_Numbers.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0003-Longest-Substring-Without-Repeating-Characters\0003.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0004-Median-of-Two-Sorted-Arrays\0004.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0005-Longest-Palindromic-Substring\0005.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0006-ZigZag-Conversion\0006.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0007-Reverse-Integer\0007.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0008-String-to-Integer-(atoi)\0008.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0009-Palindrome-Number\0009.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0010-Regular-Expression-Matching\0010.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0011-Container-With-Most-Water\0011.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0012-Integer-to-Roman\0012.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0013-Roman-to-Integer\0013.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0014-Longest-Common-Prefix\0014.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0015-3Sum\0015.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0016-3Sum-Closest\0016.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0017-Letter-Combinations-of-a-Phone-Number\0017.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0018-4Sum\0018.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0019-Remove-Nth-Node-From-End-of-List\0019.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0020-Valid-Parentheses\0020.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0021-Merge-Two-Sorted-Lists\0021.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0022-Generate-Parentheses\0022.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0023-Merge-k-Sorted-Lists\0023.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0024-Swap-Nodes-in-Pairs\0024.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0025-Reverse-Nodes-in-k-Group\0025.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0026-Remove-Duplicates-from-Sorted-Array\0026.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0027-Remove-Element\0027.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0028-Implement-strStr()\0028.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0029-Divide-Two-Integers\0029.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0030-Substring-with-Concatenation-of-All-Words\0030.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0031-Next-Permutation\0031.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0032-Longest-Valid-Parentheses\0032.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0033-Search-in-Rotated-Sorted-Array\0033.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0034-Find-First-and-Last-Position-of-Element-in-Sorted-Array\0034.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0035-Search-Insert-Position\0035.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0036-Valid-Sudoku\0036.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0037-Sudoku-Solver\0037.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0038-Count-and-Say\0038.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0039-Combination-Sum\0039.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0040-Combination-Sum-II\0040.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0041-First-Missing-Positive\0041.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0042-Trapping-Rain-Water\0042.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0043-Multiply-Strings\0043.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0044-Wildcard-Matching\0044.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0045-Jump-Game-II\0045.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0046-Permutations\0046.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0047-Permutations-II\0047.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0048-Rotate-Image\0048.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0049-Group-Anagrams\0049.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0050-Pow(x,n)\0050.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0051-N-Queens\0051.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0052-N-Queens-II\0052.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0053-Maximum-Subarray\0053.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0054-Spiral-Matrix\0054.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0055-Jump-Game\0055.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0056-Merge-Intervals\0056.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0057-Insert-Interval\0057.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0058-Length-of-Last-Word\0058.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0059-Spiral-Matrix-II\0059.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0060-Permutation-Sequence\0060.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0061-Rotate-List\0061.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0062-Unique-Paths\0062.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0063-Unique-Paths-II\0063.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0064-Minimum-Path-Sum\0064.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0065-Valid-Number\0065.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0066-Plus-One\0066.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0067-Add-Binary\0067.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0068-Text-Justification\0068.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0069-Sqrt(x)\0069.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0070-Climbing-Stairs\0070.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0071-Simplify-Path\0071.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0072-Edit-Distance\0072.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0073-Set-Matrix-Zeroes\0073.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0074-Search-a-2D-Matrix\0074.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0075-Sort-Colors\0075.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0076-Minimum-Window-Substring\0076.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0077-Combinations\0077.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0078-Subsets\0078.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0079-Word-Search\0079.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0080-Remove-Duplicates-from-Sorted-Array-II\0080.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0081-Search-in-Rotated-Sorted-Array-II\0081.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0082-Remove-Duplicates-from-Sorted-List-II\0082.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0083-Remove-Duplicates-from-Sorted-List\0083.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0084-Largest-Rectangle-in-Histogram\0084.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0085-Maximal-Rectangle\0085.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0086-Partition-List\0086.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0087-Scramble-String\0087.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0088-Merge-Sorted-Array\0088.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0089-Gray-Code\0089.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0090-Subsets-II\0090.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0091-Decode-Ways\0091.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0092-Reverse-Linked-List-II\0092.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0093-Restore-IP-Addresses\0093.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0094-Binary-Tree-Inorder-Traversal\0094.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0095-Unique-Binary-Search-Trees-II\0095.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0096-Unique-Binary-Search-Trees\0096.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0097-Interleaving-String\0097.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0098-Validate-Binary-Search-Tree\0098.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0099-Recover-Binary-Search-Tree\0099.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0100-Same-Tree\0100.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0101-Symmetric-Tree\0101.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0102-Binary-Tree-Level-Order-Traversal\0102.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0103-Binary-Tree-Zigzag-Level-Order-Traversal\0103.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0104-Maximum-Depth-of-Binary-Tree\0104.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0105-Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal\0105.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0106-Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal\0106.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0107-Binary-Tree-Level-Order-Traversal-II\0107.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0108-Convert-Sorted-Array-to-Binary-Search-Tree\0108.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0109-Convert-Sorted-List-to-Binary-Search-Tree\0109.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0110-Balanced-Binary-Tree\0110.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0111-Minimum-Depth-of-Binary-Tree\0111.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0112-Path-Sum\0112.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0113-Path-Sum-II\0113.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0114-Flatten-Binary-Tree-to-Linked-List\0114.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0115-Distinct-Subsequences\0115.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0116-Populating-Next-Right-Pointers-in-Each-Node\116.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0117-Populating-Next-Right-Pointers-in-Each-Node-II\0117.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0118-Pascal's-Triangle\0118.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0119-Pascal's-Triangle-II\0119.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0120-Triangle\0120.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0121-Best-Time-to-Buy-and-Sell-Stock\0121.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0122-Best-Time-to-Buy-and-Sell-Stock-II\0122.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0123-Best-Time-to-Buy-and-Sell-Stock-III\0123.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0124-Binary-Tree-Maximum-Path-Sum\0124.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0125-Valid-Palindrome\0125.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0126-Word-Ladder-II\0126.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0127-Word-Ladder\0127.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0128-Longest-Consecutive-Sequence\0128.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0129-Sum-Root-to-Leaf-Numbers\0129.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0130-Surrounded-Regions\0130.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0131-Palindrome-Partitioning\0131.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0132-Palindrome-Partitioning-II\0132.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0133-Clone-Graph\0133.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0134-Gas-Station\0134.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0135-Candy\0135.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0136-Single-Number\0136.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0137-Single-Number-II\0137.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0138-Copy-List-with-Random-Pointer\0138.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0139-Word-Break\0139.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0140-Word-Break-II\0140.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0141-Linked-List-Cycle\0141.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0142-Linked-List-Cycle-II\0142.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0143-Reorder-List\0143.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0144-Binary-Tree-Preorder-Traversal\0144.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0145-Binary-Tree-Postorder-Traversal\0145.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0146-LRU-Cache\0146.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0147-Insertion-Sort-List\0147.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0148-Sort-List\0148.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0149-Max-Points-on-a-Line\0149.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0150-Evaluate-Reverse-Polish-Notation\0150.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0151-Reverse-Words-in-a-String\0151.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0152-Maximum-Product-Subarray\0152.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0153-Find-Minimum-in-Rotated-Sorted-Array\0153.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0154-Find-Minimum-in-Rotated-Sorted-Array-II\0154.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0155-Min-Stack\0155.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0160-Intersection-of-Two-Linked-Lists\0160.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0162-Find-Peak-Element\0162.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0165-Compare-Version-Numbers\0165.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0166-Fraction-to-Recurring-Decimal\0166.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0167-Two-Sum-II-Input-array-is-sorted\0167.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0168-Excel-Sheet-Column-Title\0168.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0169-Majority-Element\0169.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0171-Excel-Sheet-Column-Number\0171.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0172-Factorial-Trailing-Zeroes\0172.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0173-Binary-Search-Tree-Iterator\0173.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0174-Dungeon-Game\0174.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0179-Largest-Number\0179.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0187-Repeated-DNA-Sequences\0187.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0188-Best-Time-to-Buy-and-Sell-Stock-IV\0188.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0189-Rotate-Array\0189.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0190-Reverse-Bits\0190.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0191-Number-of-1-Bits\0191.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0198-House-Robber\0198.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0199-Binary-Tree-Right-Side-View\0199.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0200-Number-of-Islands\0200.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0201-Bitwise-AND-of-Numbers-Range\0201.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0202-Happy-Number\0202.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0203-Remove-Linked-List-Elements\0203.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0204-Count-Primes\0204.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0205-Isomorphic-Strings\0205.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0206-Reverse-Linked-List\0206.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0207-Course-Schedule\0207.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0208-Implement-Trie-(Prefix-Tree)\0208.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0209-Minimum-Size-Subarray-Sum\0209.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0210-Course-Schedule-II\0210.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0211-Add-and-Search-Word-Data-structure-design\0211.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0212-Word-Search-II\0212.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0213-House-Robber-II\0213.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0215-Kth-Largest-Element-in-an-Array\0215.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0216-Combination-Sum-III\0216.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0217-Contains-Duplicate\0217.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0218-The-Skyline-Problem\0218.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0219-Contains-Duplicate-II\0219.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0220-Contains-Duplicate-III\0220.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0221-Maximal-Square\0221.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0222-Count-Complete-Tree-Nodes\0222.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0223-Rectangle-Area\0223.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0224-Basic-Calculator\0224.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0226-Invert-Binary-Tree\0226.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0228-Summary-Ranges\0228.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0229-Majority-Element-II\0229.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0230-Kth-Smallest-Element-in-a-BST\0230.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0231-Power-of-Two\231.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0234-Palindrome-Linked-List\0234.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0235-Lowest-Common-Ancestor-of-a-Binary-Search-Tree\0235.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0236-Lowest-Common-Ancestor-of-a-Binary-Tree\0236.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0237-Delete-Node-in-a-Linked-List\0237.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0238-Product-of-Array-Except-Self\0238.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0239-Sliding-Window-Maximum\0239.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0240-Search-a-2D-Matrix-II\0240.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0241-Different-Ways-to-Add-Parentheses\0241.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0242-Valid-Anagram\0242.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0253-Meeting-Rooms-II\0253.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0257-Binary-Tree-Paths\0257.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0260-Single-Number-III\0260.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0263-Ugly-Number\0263.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0264-Ugly-Number-II\0264.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0268-Missing-Number\0268.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0274-H-Index\0274.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0275-H-Index-II\0275.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0278-First-Bad-Version\0278.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0279-Perfect-Squares\0279.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0283-Move-Zeroes\0283.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0287-Find-the-Duplicate-Number\0287.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0289-Game-of-Life\0289.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0290-Word-Pattern\0290.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0297-Serialize-and-Deserialize-Binary-Tree\0297.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0300-Longest-Increasing-Subsequence\0300.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0303-Range-Sum-Query-Immutable\0303.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0307-Range-Sum-Query-Mutable\0307.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0309-Best-Time-to-Buy-and-Sel-Stock-with-Cooldown\0309.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0310-Insert-Delete-GetRandom-O(1)\0310.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0316-Remove-Duplicate-Letters\0316.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0319-Bulb-Switcher\0319.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0322-Coin-Change\0322.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0325-Maximum-Size-Subarray-Sum-Equals-k\0325.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0326-Power-of-Three\0326.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0328-Odd-Even-Linked-List\0328.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0331-Verify-Preorder-Serialization-of-a-Binary-Tree\0331.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0337-House-Robber-III\0337.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0343-Integer-Break\0343.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0344-Reverse-String\0344.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0345-Reverse-Vowels-of-a-String\0345.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0347-Top-K-Frequent-Elements\0347.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0349-Intersection-of-Two-Arrays\0349.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0350-Intersection-of-Two-Arrays-II\0350.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0352-Data-Stream-as-Disjoint-Intervals\0352.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0354-Russian-Doll-Envelopes\0354.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0365-Water-and-Jug-Problem\0365.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0371-Sum-of-Two-Integers\0371.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0377-Combination-Sum-IV\0377.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0384-Shuffle-an-Array\0384.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0389-Find-the-Difference\0389.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0392-Is-Subsequence\0392.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0401-Binary-Watch\0401.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0404-Sum-of-Left-Leaves\0404.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0409-Longest-Palindrome\0409.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0416-Partition-Equal-Subset-Sum\0416.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0423-Reconstruct-Original-Digits-from-English\0423.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0424-Longest-Repeating-Character-Replacement\0424.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0435-Non-overlapping-Intervals\0435.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0437-Path-Sum-III\0437.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0438-Find-All-Anagrams-in-a-String\0438.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0445-Add-Two-Numbers-II\0445.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0446-Arithmetic-Slices-II-Subsequence\0446.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0447-Number-of-Boomerangs\0447.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0450-Delete-Node-in-a-BST\0450.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0451-Sort-Characters-By-Frequency\0451.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0452-Minimum-Number-of-Arrows-to-Burst-Balloons\0452.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0453-Minimum-Moves-to-Equal-Array-Elements\0453.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0454-4Sum-II\0454.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0455-Assign-Cookies\0455.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0458-Poor-Pigs\0458.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0459-Repeated-Substring-Pattern\0459.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0462-Minimum-Moves-to-Equal-Array-Elements-II\0462.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0473-Matchsticks-to-Square\0473.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0474-Ones-and-Zeroes\0474.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0486-Predict-the-Winner\0486.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0492-Construct-the-Rectangle\0492.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0494-Target-Sum\0494.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0496-Next-Greater-Element-I\0496.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0503-Next-Greater-Element-II\0503.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0520-Detect-Capital\0520.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0524-Longest-Word-in-Dictionary-through-Deleting\0524.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0525-Contiguous-Array\0525.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0528-Random-Pick-with-Weight\0528.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0530-Minimum-Absolute-Difference-in-BST\0530.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0543-Diameter-of-Binary-Tree\0543.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0547-Friend-Circles\0547.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0559-Maximum-Depth-of-N-ary-Tree\0559.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0560-Subarray-Sum-Equals-K\0560.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0567-Permutation-in-String\0567.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0583-Delete-Operation-for-Two-Strings\0583.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0587-Erect-the-Fence\0587.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0594-Longest-Harmonious-Subsequence\0594.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0605-Can-Place-Flowers\0605.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0637-Average-of-Levels-in-Binary-Tree\0637.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0650-2-Keys-Keyboard\0650.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0652-Find-Duplicate-Subtrees\0652.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0653-Two-Sum-IV-Input-is-a-BST\0653.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0654-Maximum-Binary-Tree\0654.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0678-Valid-Parenthesis-String\0678.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0684-Redundant-Connection\0684.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0687-Longest-Univalue-Path\0687.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0695-Max-Area-of-Island\0695.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0697-Degree-of-an-Array\0697.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0698-Partition-to-K-Equal-Sum-Subsets\0698.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0700-Search-in-a-Binary-Search-Tree\0700.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0733-Flood-Fill\0733.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0739-Daily-Temperatures\0739.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0742-Closest-Leaf-in-a-Binary-Tree\0742.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0776-Toeplitz-Matrix\0776.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0783-Minimum-Distance-Between-BST-Nodes\0783.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0788-Rotated-Digits\0788.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0790-Domino-and-Tromino-Tiling\0790.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0793-Preimage-Size-of-Factorial-Zeroes-Function\0793.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0795-Number-of-Subarrays-with-Bounded-Maximum\0795.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0813-Largest-Sum-of-Averages\0813.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0820-Short-Encoding-of-Words\0820.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0824-Goat-Latin\0824.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0825-Friends-Of-Appropriate-Ages\0825.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0826-Most-Profit-Assigning-Work\0826.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0827-Making-A-Large-Island\0827.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0828-Unique-Letter-String\0828.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0829-Consecutive-Numbers-Sum\0829.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0832-Flipping-an-Image\0832.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0834-Sum-of-Distances-in-Tree\0834.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0836-Rectangle-Overlap\0836.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0844-Backspace-String-Compare\0844.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0845-Longest-Mountain-in-Array\0845.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0846-Hand-of-Straights\0846.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0847-Shortest-Path-Visiting-All-Nodes\0847.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0852-Peak-Index-in-a-Mountain-Array\0852.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0857-Minimum-Cost-to-Hire-K-Workers\0857.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0859-Buddy-Strings\0859.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0872-Leaf-Similar-Trees\0872.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0873-Length-of-Longest-Fibonacci-Subsequence\0873.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0874-Walking-Robot-Simulation\0874.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0876-Middle-of-the-Linked-List\0876.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0878-Nth-Magical-Number\0878.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0891-Sum-of-Subsequence-Widths\0891.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0892-Surface-Area-of-3D-Shapes\0892.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0895-Maximum-Frequency-Stack\0895.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0901-Online-Stock-Span\0901.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0902-Numbers-At-Most-N-Given-Digit-Set\0902.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0904-Fruit-Into-Baskets\0904.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0907-Sum-of-Subarray-Minimums\0907.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0914-X-of-a-Kind-in-a-Deck-of-Cards\0914.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0917-Reverse-Only-Letters\0917.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0918-Maximum-Sum-Circular-Subarray\0918.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0919-Complete-Binary-Tree-Inserter\0919.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0920-Number-of-Music-Playlists\0920.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0921-Minimum-Add-to-Make-Parentheses-Valid\0921.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0922-Sort-Array-By-Parity-II\0922.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0923-3Sum-With-Multiplicity\0923.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0925-Long-Pressed-Name\0925.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0926-Flip-String-to-Monotone-Increasing\0926.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0927-Three-Equal-Parts\0927.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0929-Unique-Email-Addresses\0929.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0930-Binary-Subarrays-With-Sum\0930.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0931-Minimum-Falling-Path-Sum\0931.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0932-Beautiful-Array\0932.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0933-Number-of-Recent-Calls\0933.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0934-Shortest-Bridge\0934.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0935-Knight-Dialer\0935.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0936-Stamping-The-Sequence\0936.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0937-Reorder-Log-Files\0937.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0938-Range-Sum-of-BST\0938.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0939-Minimum-Area-Rectangle\0939.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0940-Distinct-Subsequences-II\0940.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0941-Valid-Mountain-Array\0941.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0942-DI-String-Match\0942.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0943-Find-the-Shortest-Superstring\0943.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0944-Delete-Columns-to-Make-Sorted\0944.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0945-Minimum-Increment-to-Make-Array-Unique\0945.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0946-Validate-Stack-Sequences\0946.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0947-Most-Stones-Removed-with-Same-Row-or-Column\0947.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0948-Bag-of-Tokens\0948.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0949-Largest-Time-for-Given-Digits\0949.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0950-Reveal-Cards-In-Increasing-Order\0950.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0951-Flip-Equivalent-Binary-Trees\0951.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0953-Verifying-an-Alien-Dictionary\0953.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0954-Array-of-Doubled-Pairs\0954.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0955-Delete-Columns-to-Make-Sorted-II\0955.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0956-Tallest-Billboard\0956.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0957-Prison-Cells-After-N-Days\0957.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0958-Check-Completeness-of-a-Binary-Tree\0958.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0959-Regions-Cut-By-Slashes\0959.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0960-Delete-Columns-to-Make-Sorted-III\0960.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0961-N-Repeated-Element-in-Size-2N-Array\0961.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0962-Maximum-Width-Ramp\0962.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0963-Minimum-Area-Rectangle-II\0963.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0965-Univalued-Binary-Tree\0965.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0966-Vowel-Spellchecker\0966.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0967-Numbers-With-Same-Consecutive-Differences\0967.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0969-Pancake-Sorting\0969.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0970-Powerful-Integers\0970.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0971-Flip-Binary-Tree-To-Match-Preorder-Traversal\0971.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0972-Equal-Rational-Numbers\0972.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0973-K-Closest-Points-to-Origin\0973.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0974-Subarray-Sums-Divisible-by-K\0974.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0975-Odd-Even-Jump\0975.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0976-Largest-Perimeter-Triangle\0976.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0977-Squares-of-a-Sorted-Array\0977.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0978-Longest-Turbulent-Subarray\0978.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0979-Distribute-Coins-in-Binary-Tree\0979.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0980-Unique-Paths-III\0980.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0981-Time-Based-Key-Value-Store\0981.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0982-Triples-with-Bitwise-AND-Equal-To-Zero\0982.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0983-Minimum-Cost-For-Tickets\0983.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0984-String-Without-AAA-or-BBB\0984.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0985-Sum-of-Even-Numbers-After-Queries\0985.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0986-Interval-List-Intersections\0986.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0987-Vertical-Order-Traversal-of-a-Binary-Tree\0987.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0988-Smallest-String-Starting-From-Leaf\0988.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0989-Add-to-Array-Form-of-Integer\0989.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0990-Satisfiability-of-Equality-Equations\0990.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0991-Broken-Calculator\0991.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0992-Subarrays-with-K-Different-Integers\0992.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0993-Cousins-in-Binary-Tree\0993.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0994-Rotting-Oranges\0994.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0995-Minimum-Number-of-K-Consecutive-Bit-Flips\0995.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0996-Number-of-Squareful-Arrays\0996.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0997-Find-the-Town-Judge\0997.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0998-Maximum-Binary-Tree-II\0998.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\0999-Available-Captures-for-Rook\0999.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1000-Minimum-Cost-to-Merge-Stones\1000.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1001-Grid-Illumination\1001.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1002-Find-Common-Characters\1002.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1003-Check-If-Word-Is-Valid-After-Substitutions\1003.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1004-Max-Consecutive-Ones-III\1004.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1005-Maximize-Sum-Of-Array-After-K-Negations\1005.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1006-Clumsy-Factorial\1006.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1007-Minimum-Domino-Rotations-For-Equal-Row\1007.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1008-Construct-Binary-Search-Tree-from-Preorder-Traversal\1008.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1009-Complement-of-Base-10-Integer\1009.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1010-Pairs-of-Songs-With-Total-Durations-Divisible-by-60\1010.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1011-Capacity-To-Ship-Packages-Within-D-Days\1011.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1012-Numbers-With-Repeated-Digits\1012.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1013-Partition-Array-Into-Three-Parts-With-Equal-Sum\1013.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1014-Best-Sightseeing-Pair\1014.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1015-Smallest-Integer-Divisible-by-K\1015.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1017-Convert-to-Base-2\1017.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1018-Binary-Prefix-Divisible-By-5\1018.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1019-Next-Greater-Node-In-Linked-List\1019.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1020-Number-of-Enclaves\1020.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1021-Remove-Outermost-Parentheses\1021.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1022-Sum-of-Root-To-Leaf-Binary-Numbers\1022.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1023-Camelcase-Matching\1023.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1024-Video-Stitching\1024.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1025-Divisor-Game\1025.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1026-Maximum-Difference-Between-Node-and-Ancestor\1026.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1027-Longest-Arithmetic-Sequence\1027.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1033-Moving-Stones-Until-Consecutive\1033.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1034-Coloring-A-Border\1034.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1035-Uncrossed-Lines\1035.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1037-Valid-Boomerang\1037.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1038-Binary-Search-Tree-to-Greater-Sum-Tree\1038.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1039-Minimum-Score-Triangulation-of-Polygon\1039.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1041-Robot-Bounded-In-Circle\1041.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1042-Flower-Planting-With-No-Adjacent\1042.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1043-Partition-Array-for-Maximum-Sum\1043.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1046-Last-Stone-Weight\1046.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1047-Remove-All-Adjacent-Duplicates-In-String\1047.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1048-Longest-String-Chain\1048.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1049-Last-Stone-Weight-II\1049.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1051-Height-Checker\1051.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1052-Grumpy-Bookstore-Owner\1052.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1053-Previous-Permutation-With-One-Swap\1053.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1054-Distant-Barcodes\1054.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1061-Lexicographically-Smallest-Equivalent-String\1061.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1064-Fixed-Point\1064.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1065-Index-Pairs-of-a-String\1065.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1066-Campus-Bikes-II\1066.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1067-Digit-Count-in-Range\1067.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1071-Greatest-Common-Divisor-of-Strings\1071.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1072-Flip-Columns-For-Maximum-Number-of-Equal-Rows\1072.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1073-Adding-Two-Negabinary-Numbers\1073.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1074-Number-of-Submatrices-That-Sum-to-Target\1074.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1078-Occurrences-After-Bigram\1078.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1079-Letter-Tile-Possibilities\1079.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1080-Insufficient-Nodes-in-Root-to-Leaf-Paths\1080.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1081-Smallest-Subsequence-of-Distinct-Characters\1081.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1085-Sum-of-Digits-in-the-Minimum-Number\1085.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1086-High-Five\1086.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1087-Brace-Expansion\1087.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1089-Duplicate-Zeros\1089.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1090-Largest-Values-From-Labels\1090.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1091-Shortest-Path-in-Binary-Matrix\1091.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1093-Statistics-from-a-Large-Sample\1093.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1094-Car-Pooling\1094.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1095-Find-in-Mountain-Array\1095.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1096-Brace-Expansion-II\1096.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1099-Two-Sum-Less-Than-K\1099.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1100-Find-K-Length-Substrings-With-No-Repeated-Characters\1100.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1101-The-Earliest-Moment-When-Everyone-Become-Friends\1101.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1102-Path-With-Maximum-Minimum-Value\1102.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1103-Distribute-Candies-to-People\1103.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1104-Path-In-Zigzag-Labelled-Binary-Tree\1104.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1105-Filling-Bookcase-Shelves\1105.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1106-Parsing-A-Boolean-Expression\1106.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1108-Defanging-an-IP-Address\1108.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1109-Corporate-Flight-Bookings\1109.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1110-Delete-Nodes-And-Return-Forest\1110.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1111-Maximum-Nesting-Depth-of-Two-Valid-Parentheses-Strings\1111.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1118-Number-of-Days-in-a-Month\1118.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1119-Remove-Vowels-from-a-String\1119.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1120-Maximum-Average-Subtree\1120.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1121-Divide-Array-Into-Increasing-Sequences\1121.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1122-Relative-Sort-Array\1122.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1123-Lowest-Common-Ancestor-of-Deepest-Leaves\1123.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1124-Longest-Well-Performing-Interval\1124.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1125-Smallest-Sufficient-Team\1125.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1128-Number-of-Equivalent-Domino-Pairs\1128.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1129-Shortest-Path-with-Alternating-Colors\1129.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1130-Minimum-Cost-Tree-From-Leaf-Values\1130.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1131-Maximum-of-Absolute-Value-Expression\1131.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1133-Largest-Unique-Number\1133.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1134-Armstrong-Number\1134.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1135-Connecting-Cities-With-Minimum-Cost\1135.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1136-Parallel-Courses\1136.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1137-N-th-Tribonacci-Number\1137.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1138-Alphabet-Board-Path\1138.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1139-Largest-1-Bordered-Square\1139.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1140-Stone-Game-II\1140.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1143-Longest-Common-Subsequence\1143.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1144-Decrease-Elements-To-Make-Array-Zigzag\1144.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1145-Binary-Tree-Coloring-Game\1145.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1146-Snapshot-Array\1146.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1147-Longest-Chunked-Palindrome-Decomposition\1147.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1150-Check-If-a-Number-Is-Majority-Element-in-a-Sorted-Array\1150.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1151-Minimum-Swaps-to-Group-All-1's-Together\1151.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1152-Analyze-User-Website-Visit-Pattern\1152.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1153-String-Transforms-Into-Another-String\1153.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1154-Day-of-the-Year\1154.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1155-Number-of-Dice-Rolls-With-Target-Sum\1155.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1156-Swap-For-Longest-Repeated-Character-Substring\1156.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1157-Online-Majority-Element-In-Subarray\1157.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1160-Find-Words-That-Can-Be-Formed-by-Characters\1160.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1161-Maximum-Level-Sum-of-a-Binary-Tree\1161.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1162-As-Far-from-Land-as-Possible\1162.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1165-Single-Row-Keyboard\1165.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1166-Design-File-System\1166.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1167-Minimum-Cost-to-Connect-Sticks\1167.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1168-Optimize-Water-Distribution-in-a-Village\1168.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1169-Invalid-Transactions\1169.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1170-Compare-Strings-by-Frequency-of-the-Smallest-Character\1170.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1171-Remove-Zero-Sum-Consecutive-Nodes-from-Linked-List\1171.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1172-Dinner-Plate-Stacks\1172.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1175-Prime-Arrangements\1175.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1176-Diet-Plan-Performance\1176.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1184-Distance-Between-Bus-Stops\1184.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1185-Day-of-the-Week\1185.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1186-Maximum-Subarray-Sum-with-One-Deletion\1186.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1187-Make-Array-Strictly-Increasing\1187.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1189-Maximum-Number-of-Balloons\1189.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1190-Reverse-Substrings-Between-Each-Pair-of-Parentheses\1190.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1191-K-Concatenation-Maximum-Sum\1191.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1192-Critical-Connections-in-a-Network\1192.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1196-How-Many-Apples-Can-You-Put-into-the-Basket\1196.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1197-Minimum-Knight-Moves\1197.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1198-Find-Smallest-Common-Element-in-All-Rows\1198.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1199-Minimum-Time-to-Build-Blocks\1199.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1200-Minimum-Absolute-Difference\1200.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1201-Ugly-Number-III\1201.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1202-Smallest-String-With-Swaps\1202.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1207-Unique-Number-of-Occurrences\1207.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1208-Get-Equal-Substrings-Within-Budget\1208.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1209-Remove-All-Adjacent-Duplicates-in-String-II\1209.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1210-Minimum-Moves-to-Reach-Target-with-Rotations\1210.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1213-Intersection-of-Three-Sorted-Arrays\1213.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1214-Two-Sum-BSTs\1214.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1215-Stepping-Numbers\1215.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1216-Valid-Palindrome-III\1216.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1217-Play-with-Chips\1217.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1218-Longest-Arithmetic-Subsequence-of-Given-Difference\1218.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1219-Path-with-Maximum-Gold\1219.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1220-Count-Vowels-Permutation\1220.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1221-Split-a-String-in-Balanced-Strings\1221.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1222-Queens-That-Can-Attack-the-King\1222.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1223-Dice-Roll-Simulation\1223.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1224-Maximum-Equal-Frequency\1224.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1228-Missing-Number-In-Arithmetic-Progression\1228.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1229-Meeting-Scheduler\1229.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1230-Toss-Strange-Coins\1230.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1231-Divide-Chocolate\1231.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1232-Check-If-It-Is-a-Straight-Line\1232.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1233-Remove-Sub-Folders-from-the-Filesystem\1233.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1234-Replace-the-Substring-for-Balanced-String\1234.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1235-Maximum-Profit-in-Job-Scheduling\1235.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1237-Find-Positive-Integer-Solution-for-a-Given-Equation\1237.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1238-Circular-Permutation-in-Binary-Representation\1238.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1239-Maximum-Length-of-a-Concatenated-String-with-Unique-Characters\1239.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1240-Tiling-a-Rectangle-with-the-Fewest-Squares\1240.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1243-Array-Transformation\1243.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1244-Design-A-Leaderboard\1244.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1245-Tree-Diameter\1245.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1246-Palindrome-Removal\1246.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1247-Minimum-Swaps-to-Make-Strings-Equal\1247.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1248-Count-Number-of-Nice-Subarrays\1248.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1249-Minimum-Remove-to-Make-Valid-Parentheses\1249.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1250-Check-If-It-Is-a-Good-Array\1250.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1252-Cells-with-Odd-Values-in-a-Matrix\1252.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1253-Reconstruct-a-2-Row-Binary-Matrix\1253.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1254-Number-of-Closed-Islands\1254.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1255-Maximum-Score-Words-Formed-by-Letters\1255.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1256-Encode-Number\1256.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1257-Smallest-Common-Region\1257.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1258-Synonymous-Sentences\1258.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1259-Handshakes-That-Don't-Cross\1259.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1260-Shift-2D-Grid\1260.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1261-Find-Elements-in-a-Contaminated-Binary-Tree\1261.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1262-Greatest-Sum-Divisible-by-Three\1262.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1263-Minimum-Moves-to-Move-a-Box-to-Their-Target-Location\1263.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1266-Minimum-Time-Visiting-All-Points\1266.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1267-Count-Servers-that-Communicate\1267.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1268-Search-Suggestions-System\1268.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1269-Number-of-Ways-to-Stay-in-the-Same-Place-After-Some-Steps\1269.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1271-Hexspeak\1271.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1272-Remove-Interval\1272.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1273-Delete-Tree-Nodes\1273.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1274-Number-of-Ships-in-a-Rectangle\1274.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1275-Find-Winner-on-a-Tic-Tac-Toe-Game\1275.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1276-Number-of-Burgers-with-No-Waste-of-Ingredients\1276.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1277-Count-Square-Submatrices-with-All-Ones\1277.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1278-Palindrome-Partitioning-III\1278.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer\1281.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1282-Group-the-People-Given-the-Group-Size-They-Belong-To\1282.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1283-Find-the-Smallest-Divisor-Given-a-Threshold\1283.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1284-Minimum-Number-of-Flips-to-Convert-Binary-Matrix-to-Zero-Matrix\1284.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1286-Iterator-for-Combination\1286.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1287-Element-Appearing-More-Than-25%-In-Sorted-Array\1287.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1288-Remove-Covered-Intervals\1288.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1289-Minimum-Falling-Path-Sum-II\1289.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1290-Convert-Binary-Number-in-a-Linked-List-to-Integer\1290.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1291-Sequential-Digits\1291.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1292-Maximum-Side-Length-of-a-Square-with-Sum-Less-than-or-Equal-to-Threshold\1292.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1293-Shortest-Path-in-a-Grid-with-Obstacles-Elimination\1293.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1295-Find-Numbers-with-Even-Number-of-Digits\1295.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1296-Divide-Array-in-Sets-of-K-Consecutive-Numbers\1296.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1297-Maximum-Number-of-Occurrences-of-a-Substring\1297.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1298-Maximum-Candies-You-Can-Get-from-Boxes\1298.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1299-Replace-Elements-with-Greatest-Element-on-Right-Side\1299.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1300-Sum-of-Mutated-Array-Closest-to-Target\1300.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1301-Number-of-Paths-with-Max-Score\1301.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1302-Deepest-Leaves-Sum\1302.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1304-Find-N-Unique-Integers-Sum-up-to-Zero\1304.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1305-All-Elements-in-Two-Binary-Search-Trees\1305.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1306-Jump-Game-III\1306.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1309-Decrypt-String-from-Alphabet-to-Integer-Mapping\1309.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1310-XOR-Queries-of-a-Subarray\1310.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1311-Get-Watched-Videos-by-Your-Friends\1311.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1313-Decompress-Run-Length-Encoded-List\1313.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1314-Matrix-Block-Sum\1314.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1315-Sum-of-Nodes-with-Even-Valued-Grandparent\1315.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1316-Distinct-Echo-Substrings\1316.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers\1317.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1318-Minimum-Flips-to-Make-a-OR-b-Equal-to-c\1318.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1319-Number-of-Operations-to-Make-Network-Connected\1319.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1320-Minimum-Distance-to-Type-a-Word-Using-Two-Fingers\1320.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1323-Maximum-69-Number\1323.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1324-Print-Words-Vertically\1324.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1325-Delete-Leaves-With-a-Given-Value\1325.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1326-Minimum-Number-of-Taps-to-Open-to-Water-a-Garden\1326.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1328-Break-a-Palindrome\1328.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1329-Sort-the-Matrix-Diagonally\1329.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1330-Reverse-Subarray-To-Maximize-Array-Value\1330.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1331-Rank-Transform-of-an-Array\1331.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1332-Remove-Palindromic-Subsequences\1332.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1333-Filter-Restaurants-by-Vegan-Friendly,-Price-and-Distance\1333.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1334-Find-the-City-With-the-Smallest-Number-of-Neighbors-at-a-Threshold-Distance\1334.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1335-Minimum-Difficulty-of-a-Job-Schedule\1335.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1337-The-K-Weakest-Rows-in-a-Matrix\1337.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1338-Reduce-Array-Size-to-The-Half\1338.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1339-Maximum-Product-of-Splitted-Binary-Tree\1339.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1340-Jump-Game-V\1340.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1342-Number-of-Steps-to-Reduce-a-Number-to-Zero\1342.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1343-Number-of-Sub-arrays-of-Size-K-and-Average-Greater-than-or-Equal-to-Threshold\1343.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1344-Angle-Between-Hands-of-a-Clock\1344.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1345-Jump-Game-IV\1345.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1346-Check-If-N-and-Its-Double-Exist\1346.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1347-Minimum-Number-of-Steps-to-Make-Two-Strings-Anagram\1347.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1348-Tweet-Counts-Per-Frequency\1348.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1349-Maximum-Students-Taking-Exam\1349.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1351-Count-Negative-Numbers-in-a-Sorted-Matrix\1351.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1352-Product-of-the-Last-K-Numbers\1352.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1353-Maximum-Number-of-Events-That-Can-Be-Attended\1353.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1354-Construct-Target-Array-With-Multiple-Sums\1354.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1356-Sort-Integers-by-The-Number-of-1-Bits\1356.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1357-Apply-Discount-Every-n-Orders\1357.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1358-Number-of-Substrings-Containing-All-Three-Characters\1358.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1359-Count-All-Valid-Pickup-and-Delivery-Options\1359.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1360-Number-of-Days-Between-Two-Dates\1360.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1361-Validate-Binary-Tree-Nodes\1361.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1362-Closest-Divisors\1362.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1363-Largest-Multiple-of-Three\1363.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number\1365.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1366-Rank-Teams-by-Votes\1366.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1367-Linked-List-in-Binary-Tree\1367.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1368-Minimum-Cost-to-Make-at-Least-One-Valid-Path-in-a-Grid\1368.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1370-Increasing-Decreasing-String\1370.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1371-Find-the-Longest-Substring-Containing-Vowels-in-Even-Counts\1371.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1372-Longest-ZigZag-Path-in-a-Binary-Tree\1372.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1373-Maximum-Sum-BST-in-Binary-Tree\1373.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1374-Generate-a-String-With-Characters-That-Have-Odd-Counts\1374.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1375-Bulb-Switcher-III\1375.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1376-Time-Needed-to-Inform-All-Employees\1376.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1377-Frog-Position-After-T-Seconds\1377.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1380-Lucky-Numbers-in-a-Matrix\1380.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1381-Design-a-Stack-With-Increment-Operation\1381.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1382-Balance-a-Binary-Search-Tree\1382.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1383-Maximum-Performance-of-a-Team\1383.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1385-Find-the-Distance-Value-Between-Two-Arrays\1385.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1386-Cinema-Seat-Allocation\1386.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1387-Sort-Integers-by-The-Power-Value\1387.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1388-Pizza-With-3n-Slices\1388.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1389-Create-Target-Array-in-the-Given-Order\1389.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1390-Four-Divisors\1390.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1391-Check-if-There-is-a-Valid-Path-in-a-Grid\1391.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1392-Longest-Happy-Prefix\1392.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1394-Find-Lucky-Integer-in-an-Array\1394.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1395-Count-Number-of-Teams\1395.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1396-Design-Underground-System\1396.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1397-Find-All-Good-Strings\1397.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1399-Count-Largest-Group\1399.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1400-Construct-K-Palindrome-Strings\1400.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1401-Circle-and-Rectangle-Overlapping\1401.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1402-Reducing-Dishes\1402.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1403-Minimum-Subsequence-in-Non-Increasing-Order\1403.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1404-Number-of-Steps-to-Reduce-a-Number-in-Binary-Representation-to-One\1404.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1405-Longest-Happy-String\1405.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1406-Stone-Game-III\1406.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1408-String-Matching-in-an-Array\1408.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1409-Queries-on-a-Permutation-With-Key\1409.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1410-HTML-Entity-Parser\1410.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1411-Number-of-Ways-to-Paint-N×3-Grid\1411.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum\1413.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1414-Find-the-Minimum-Number-of-Fibonacci-Numbers-Whose-Sum-Is-K\1414.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1415-The-k-th-Lexicographical-String-of-All-Happy-Strings-of-Length-n\1415.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1416-Restore-The-Array\1416.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1417-Reformat-The-String\1417.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1418-Display-Table-of-Food-Orders-in-a-Restaurant\1418.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1419-Minimum-Number-of-Frogs-Croaking\1419.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1420-Build-Array-Where-You-Can-Find-The-Maximum-Exactly-K-Comparisons\1420.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1422-Maximum-Score-After-Splitting-a-String\1422.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1423-Maximum-Points-You-Can-Obtain-from-Cards\1423.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1424-Diagonal-Traverse-II\1424.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1425-Constrained-Subsequence-Sum\1425.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1431-Kids-With-the-Greatest-Number-of-Candies\1431.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1432-Max-Difference-You-Can-Get-From-Changing-an-Integer\1432.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1433-Check-If-a-String-Can-Break-Another-String\1433.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1434-Number-of-Ways-to-Wear-Different-Hats-to-Each-Other\1434.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1436-Destination-City\1436.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1437-Check-If-All-1's-Are-at-Least-Length-K-Places-Away\1437.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1438-Longest-Continuous-Subarray-With-Absolute-Diff-Less-Than-or-Equal-to-Limit\1438.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1439-Find-the-Kth-Smallest-Sum-of-a-Matrix-With-Sorted-Rows\1439.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1441-Build-an-Array-With-Stack-Operations\1441.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1442-Count-Triplets-That-Can-Form-Two-Arrays-of-Equal-XOR\1442.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1443-Minimum-Time-to-Collect-All-Apples-in-a-Tree\1443.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1444-Number-of-Ways-of-Cutting-a-Pizza\1444.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1470-Shuffle-the-Array\1470.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1472-Design-Browser-History\1472.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1523-Count-Odd-Numbers-in-an-Interval-Range\1523.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1546-Maximum-Number-of-Non-Overlapping-Subarrays-With-Sum-Equals-Target\maximum_number_of_nonoverlapping_with_sum_equals_target.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1574-Shortest-Subarray-To-Be-Removed-To-Make-Array-Sorted\1574.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1604-Alert-Using-Same-Key-Card-Three-or-More-Times-in-a-One-Hour-Period\1604.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1616-Split-Two-Strings-to-Make-Palindrome\1616.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1626-Best-Team-With-No-Conflicts\1626.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1657-Determine-if-Two-Strings-Are-Close\1657.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1658-Minimum-Operations-to-Reduce-X-to-Zero\1658.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1664-Ways-to-Make-a-Fair-Array\1664.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1669-Merge-In-Between-Linked-Lists\1669.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1673-Find-the-Most-Competitive-Subsequence\1673.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1691-Maximum-Height-by-Stacking-Cuboids\1691.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1704-Determine-if-String-Halves-Are-Alike\1704.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1732-Find-the-Highest-Altitude\1732.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1739-Building-Boxes\1739.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1742-Maximum-Number-of-Balls-in-a-Box\1742.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1750-Minimum-Length-of-String-After-Deleting-Similar-Ends\1750.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1752-Check-if-Array-Is-Sorted-and-Rotated\1752.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1754-Largest-Merge-Of-Two-Strings\1754.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1758-Minimum-Changes-To-Make-Alternating-Binary-String\1758.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1759-Count-Number-of-Homogenous-Substrings\1759.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1779-Find-Nearest-Point-That-Has-the-Same-X-or-Y-Coordinate\1779.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1780-Check-if-Number-is-a-Sum-of-Powers-of-Three\1780.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1781-Sum-of-Beauty-of-All-Substrings\1781.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1796-Second-Largest-Digit-in-a-String\1796.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1798-Maximum-Number-of-Consecutive-Values-You-Can-Make\1798.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1801-Number-of-Orders-in-the-Backlog\1801.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1802-Maximum-Value-at-a-Given-Index-in-a-Bounded-Array\1802.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1805-Number-of-Different-Integers-in-a-String\1805.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1806-Minimum-Number-of-Operations-to-Reinitialize-a-Permutation\1806.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1807-Evaluate-the-Bracket-Pairs-of-a-String\1807.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1812-Determine-Color-of-a-Chessboard-Square\1812.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1813-Sentence-Similarity-III\1813.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1814-Count-Nice-Pairs-in-an-Array\1814.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1819-Number-of-Different-Subsequences-GCDs\1819.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1827-Minimum-Operations-to-Make-the-Array-Increasing\1827.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1832-Check-if-the-Sentence-is-Pangram\1832.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1833-Maximum-Ice-Cream-Bars\1833.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1834-Single-Threaded-CPU\1834.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1926-Nearest-Exit-from-Entrance-in-Maze\1926.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\1962-Remove-Stones-to-Minimize-the-Total\1962.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2011-Final-Value-of-Variable-After-Performing-Operations\2011.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2027-Minimum-Moves-to-Convert-String\2027.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2032-Two-Out-of-Three\2032.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2037-Minimum-Number-of-Moves-to-Seat-Everyone\2037.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2042-Check-if-Numbers-Are-Ascending-in-a-Sentence\2042.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2180-Count-Integers-With-Even-Digit-Sum\2180.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2185-Counting-Words-With-a-Given-Prefix\2185.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2225-Find-Players-With-Zero-or-One-Losses\2225.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2244-Minimum-Rounds-to-Complete-All-Tasks\2244.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2256-Minimum-Average-Difference\2256.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2279-Maximum-Bags-With-Full-Capacity-of-Rocks\2279.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2287-Rearrange-Characters-to-Make-Target-String\2287.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2293-Min-Max-Game\2293.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2315-Count-Asterisks\2315.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2319-Check-if-Matrix-Is-X-Matrix\2319.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2325-Decode-the-Message\2325.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2331-Evaluate-Boolean-Binary-Tree\2331.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2341-Maximum-Number-of-Pairs-in-Array\2341.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2347-Best-Poker-Hand\2347.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2351-First-Letter-to-Appear-Twice\2351.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2357-Make-Array-Zero-by-Subtracting-Equal-Amounts\2357.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2389-Longest-Subsequence-With-Limited-Sum\2389.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2395-Find-Subarrays-With-Equal-Sum\2395.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2427-Number-of-Common-Factors\2427.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2439-Minimize-Maximum-of-Array\2439.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2469-Convert-the-Temperature\2469.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2470-Number-of-Subarrays-With-LCM-Equal-to-K\2470.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2471-Minimum-Number-of-Operations-to-Sort-a-Binary-Tree-by-Level\2471.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2477-Minimum-Fuel-Cost-to-Report-to-the-Capital\2477.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2549-Count-Distinct-Numbers-on-Board\2549.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2550-Count-Collisions-of-Monkeys-on-a-Polygon\2550.cpp
ENVIRO.UUT: .\luliyucoordinate_Leetcode\src\2551-Put-Marbles-in-Bags\2551.cpp
ENVIRO.END
