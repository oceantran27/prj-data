<pre>...
...
...
...
<b style="color: grey;">25     </b>     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
<b style="color: grey;">26     </b> };
<b style="color: grey;">27     </b>
<b style="color: grey;">28     </b>class Codec {
<b style="color: grey;">29     </b>public:
<b style="color: grey;">30     </b>
<b style="color: grey;">31     </b>    void bfs(TreeNode* root, string &amp;res) {
<b style="color: grey;">32     </b>        
<b style="color: grey;">33     </b>        if(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>root == NULL</b>)                        <b style="background-color:yellow;color:black";>return;</b>
<b style="color: grey;">34     </b>        
<b style="color: grey;">35     </b>        queue&lt;TreeNode*&gt; q;
<b style="color: grey;">36     </b>        q.push(root);
<b style="color: grey;">37     </b>        
<b style="color: grey;">38     </b>        while(q.empty() == false) {
<b style="color: grey;">39     </b>            
<b style="color: grey;">40     </b>            int n = q.size();
...
...
...
...
<b style="color: grey;">55     </b>        }
<b style="color: grey;">56     </b>        
<b style="color: grey;">57     </b>        return;
<b style="color: grey;">58     </b>    }
<b style="color: grey;">59     </b>    
<b style="color: grey;">60     </b>    // Encodes a tree to a single string.
<b style="color: grey;">61     </b>    string serialize(TreeNode* root) {
<b style="color: grey;">62     </b>        
<b style="color: grey;">63     </b>        <b style="background-color:yellow;color:black";>string res = &quot;&quot;;</b>
<b style="color: grey;">64     </b>        
<b style="color: grey;">65     </b>        <b style="background-color:yellow;color:black";>bfs(root, res);</b>
<b style="color: grey;">66     </b>        <b style="background-color:yellow;color:black";>return res;</b>
<b style="color: grey;">67     </b>    }
<b style="color: grey;">68     </b>
<b style="color: grey;">69     </b>    // Decodes your encoded data to tree.
<b style="color: grey;">70     </b>    TreeNode* deserialize(string data) {
<b style="color: grey;">71     </b>        
<b style="color: grey;">72     </b>        TreeNode* root = NULL;
<b style="color: grey;">73     </b>        
...
...
...
...
</pre>