<pre>...
...
...
...
<b style="color: grey;">29    </b>     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
<b style="color: grey;">30    </b> };
<b style="color: grey;">31    </b>
<b style="color: grey;">32    </b>class Solution {
<b style="color: grey;">33    </b>public:
<b style="color: grey;">34    </b>    
<b style="color: grey;">35    </b>    TreeNode* deleteNode(TreeNode* root, int key) {
<b style="color: grey;">36    </b>    
<b style="color: grey;">37    </b>        if(<b style="background-color:yellow;color:black";>root == NULL</b>)                        <b style="background-color:yellow;color:black";>return NULL;</b>
<b style="color: grey;">38    </b>        
<b style="color: grey;">39    </b>        else {
<b style="color: grey;">40    </b>            
<b style="color: grey;">41    </b>            // First find the node having value &quot;key&quot; and then delete the node
<b style="color: grey;">42    </b>            
<b style="color: grey;">43    </b>            if(<b style="background-color:yellow;color:black";>key &lt; root-&gt;val</b>)                 <b style="background-color:yellow;color:black";>root-&gt;left  = deleteNode(root-&gt;left, key);</b>
<b style="color: grey;">44    </b>            else if(<b style="background-color:yellow;color:black";>key &gt; root-&gt;val</b>)            <b style="background-color:yellow;color:black";>root-&gt;right = deleteNode(root-&gt;right, key);</b>
<b style="color: grey;">45    </b>            
<b style="color: grey;">46    </b>            else {
<b style="color: grey;">47    </b>                
<b style="color: grey;">48    </b>                // Now, key is found
<b style="color: grey;">49    </b>                
<b style="color: grey;">50    </b>                if(root-&gt;left == NULL &amp;&amp; root-&gt;right == NULL)           return NULL;
<b style="color: grey;">51    </b>                
...
...
...
...
<b style="color: grey;">65    </b>                    root-&gt;val = temp-&gt;val;
<b style="color: grey;">66    </b>                    
<b style="color: grey;">67    </b>                    // Now, delete greatest element node in left subtree since key is already replaced
<b style="color: grey;">68    </b>                    root-&gt;left = deleteNode(root-&gt;left, temp-&gt;val);
<b style="color: grey;">69    </b>                }
<b style="color: grey;">70    </b>            }
<b style="color: grey;">71    </b>        }
<b style="color: grey;">72    </b>        
<b style="color: grey;">73    </b>        <b style="background-color:yellow;color:black";>return root;</b>
...
...
...
...
</pre>