<pre>...
...
...
...
<b style="color: grey;">11    </b>class Node {
<b style="color: grey;">12    </b>public:
<b style="color: grey;">13    </b>    int val;
<b style="color: grey;">14    </b>    vector&lt;Node*&gt; children;
<b style="color: grey;">15    </b>
<b style="color: grey;">16    </b>    Node() {}
<b style="color: grey;">17    </b>
<b style="color: grey;">18    </b>    Node(int _val) {
<b style="color: grey;">19    </b>        <b style="background-color:yellow;color:black";>val = _val;</b>
<b style="color: grey;">20    </b>    }
<b style="color: grey;">21    </b>
<b style="color: grey;">22    </b>    Node(int _val, vector&lt;Node*&gt; _children) {
<b style="color: grey;">23    </b>        <b style="background-color:yellow;color:black";>val = _val;</b>
<b style="color: grey;">24    </b>        <b style="background-color:yellow;color:black";>children = _children;</b>
<b style="color: grey;">25    </b>    }
<b style="color: grey;">26    </b>};
<b style="color: grey;">27    </b>
<b style="color: grey;">28    </b>class Solution {
<b style="color: grey;">29    </b>public:
<b style="color: grey;">30    </b>
<b style="color: grey;">31    </b>    void bfs(Node* root, vector&lt;vector&lt;int&gt;&gt; &amp;res) {
<b style="color: grey;">32    </b>        
<b style="color: grey;">33    </b>        if(<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>root == NULL</b>)                            return;
<b style="color: grey;">34    </b>        
<b style="color: grey;">35    </b>        <b style="background-color:yellow;color:black";>queue&lt;Node*&gt; q;</b>
<b style="color: grey;">36    </b>        <b style="background-color:yellow;color:black";>q.push({root});</b>
<b style="color: grey;">37    </b>        
<b style="color: grey;">38    </b>        while(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>q.empty() == false</b>) {
<b style="color: grey;">39    </b>            
<b style="color: grey;">40    </b>            <b style="background-color:yellow;color:black";>int n = q.size();</b>
<b style="color: grey;">41    </b>            <b style="background-color:yellow;color:black";>vector&lt;int&gt; path;</b>
<b style="color: grey;">42    </b>            
<b style="color: grey;">43    </b>            while(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>n--</b>) {
<b style="color: grey;">44    </b>                
<b style="color: grey;">45    </b>                <b style="background-color:yellow;color:black";>Node* temp = q.front();</b>
<b style="color: grey;">46    </b>                <b style="background-color:yellow;color:black";>q.pop();</b>
<b style="color: grey;">47    </b>            
<b style="color: grey;">48    </b>                <b style="background-color:yellow;color:black";>path.push_back(temp-&gt;val);</b>
<b style="color: grey;">49    </b>                
<b style="color: grey;">50    </b>                <b style="background-color:yellow;color:black";>vector&lt;Node*&gt; ch = temp-&gt;children;</b>
<b style="color: grey;">51    </b>                
<b style="color: grey;">52    </b>                for(auto &amp;x : ch) {
<b style="color: grey;">53    </b>                    q.push(x);
<b style="color: grey;">54    </b>                }
<b style="color: grey;">55    </b>            }
<b style="color: grey;">56    </b>            
<b style="color: grey;">57    </b>            <b style="background-color:yellow;color:black";>res.push_back(path);</b>
<b style="color: grey;">58    </b>            <b style="background-color:yellow;color:black";>path.clear();</b>
<b style="color: grey;">59    </b>        }
<b style="color: grey;">60    </b>        
<b style="color: grey;">61    </b>        <b style="background-color:yellow;color:black";>return;</b>
<b style="color: grey;">62    </b>    }
<b style="color: grey;">63    </b>    
<b style="color: grey;">64    </b>    vector&lt;vector&lt;int&gt;&gt; levelOrder(Node* root) {
<b style="color: grey;">65    </b>    
<b style="color: grey;">66    </b>        <b style="background-color:yellow;color:black";>vector&lt;vector&lt;int&gt;&gt; res;</b>
<b style="color: grey;">67    </b>        
<b style="color: grey;">68    </b>        if(<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>root == NULL</b>)                            return res;
<b style="color: grey;">69    </b>        
<b style="color: grey;">70    </b>        <b style="background-color:yellow;color:black";>bfs(root, res);</b>
<b style="color: grey;">71    </b>        <b style="background-color:yellow;color:black";>return res;</b>
<b style="color: grey;">72    </b>    }
<b style="color: grey;">73    </b>    
...
...
...
...
</pre>