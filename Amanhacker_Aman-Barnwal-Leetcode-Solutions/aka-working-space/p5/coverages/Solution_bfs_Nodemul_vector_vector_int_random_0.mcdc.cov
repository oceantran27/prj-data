<pre>...
...
...
...
<b style="color: grey;">25    </b>    }
<b style="color: grey;">26    </b>};
<b style="color: grey;">27    </b>
<b style="color: grey;">28    </b>class Solution {
<b style="color: grey;">29    </b>public:
<b style="color: grey;">30    </b>
<b style="color: grey;">31    </b>    void bfs(Node* root, vector&lt;vector&lt;int&gt;&gt; &amp;res) {
<b style="color: grey;">32    </b>        
<b style="color: grey;">33    </b>        if(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>root == NULL</b>)                            <b style="background-color:yellow;color:black";>return;</b>
<b style="color: grey;">34    </b>        
<b style="color: grey;">35    </b>        queue&lt;Node*&gt; q;
<b style="color: grey;">36    </b>        q.push({root});
<b style="color: grey;">37    </b>        
<b style="color: grey;">38    </b>        while(q.empty() == false) {
<b style="color: grey;">39    </b>            
<b style="color: grey;">40    </b>            int n = q.size();
...
...
...
...
</pre>