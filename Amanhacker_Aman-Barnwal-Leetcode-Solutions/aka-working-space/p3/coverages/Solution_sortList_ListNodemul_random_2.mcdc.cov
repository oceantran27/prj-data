<pre>...
...
...
...
<b style="color: grey;">29    </b>
<b style="color: grey;">30    </b>class Solution {
<b style="color: grey;">31    </b>public:
<b style="color: grey;">32    </b>    
<b style="color: grey;">33    </b>    // With O(1) space complexity
<b style="color: grey;">34    </b>
<b style="color: grey;">35    </b>    void mergeList(ListNode* l1, ListNode* l2, ListNode** head) {
<b style="color: grey;">36    </b>        
<b style="color: grey;">37    </b>        <b style="background-color:yellow;color:black";>ListNode* ptr = new ListNode(0);</b>
<b style="color: grey;">38    </b>        <b style="background-color:yellow;color:black";>ListNode* cur = ptr;</b>
<b style="color: grey;">39    </b>
<b style="color: grey;">40    </b>        while(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>l1 != NULL</b> &amp;&amp; <b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>l2 != NULL</b>) {
<b style="color: grey;">41    </b>
<b style="color: grey;">42    </b>            if(<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>l1-&gt;val &lt;= l2-&gt;val</b>) {
<b style="color: grey;">43    </b>                cur-&gt;next = l1;
<b style="color: grey;">44    </b>                l1 = l1-&gt;next;
<b style="color: grey;">45    </b>            }
<b style="color: grey;">46    </b>            else {
<b style="color: grey;">47    </b>                <b style="background-color:yellow;color:black";>cur-&gt;next = l2;</b>
<b style="color: grey;">48    </b>                <b style="background-color:yellow;color:black";>l2 = l2-&gt;next;</b>
<b style="color: grey;">49    </b>            }
<b style="color: grey;">50    </b>
<b style="color: grey;">51    </b>            <b style="background-color:yellow;color:black";>cur = cur-&gt;next;</b>
<b style="color: grey;">52    </b>        }
<b style="color: grey;">53    </b>
<b style="color: grey;">54    </b>        if(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>l1 != NULL</b>) {
<b style="color: grey;">55    </b>
<b style="color: grey;">56    </b>            <b style="background-color:yellow;color:black";>cur-&gt;next = l1;</b>
<b style="color: grey;">57    </b>            <b style="background-color:yellow;color:black";>l1 = l1-&gt;next;</b>
<b style="color: grey;">58    </b>        }
<b style="color: grey;">59    </b>
<b style="color: grey;">60    </b>        if(<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>l2 != NULL</b>) {
<b style="color: grey;">61    </b>
<b style="color: grey;">62    </b>            cur-&gt;next = l2;
<b style="color: grey;">63    </b>            l2 = l2-&gt;next;
<b style="color: grey;">64    </b>        }
<b style="color: grey;">65    </b>
<b style="color: grey;">66    </b>        <b style="background-color:yellow;color:black";>*head = ptr-&gt;next;</b>
<b style="color: grey;">67    </b>        <b style="background-color:yellow;color:black";>return;</b>
<b style="color: grey;">68    </b>    }
<b style="color: grey;">69    </b>
<b style="color: grey;">70    </b>    ListNode* sortList(ListNode* head) {
<b style="color: grey;">71    </b>
<b style="color: grey;">72    </b>        <b style="background-color:yellow;color:black";>ListNode* newHead = NULL;</b>   
<b style="color: grey;">73    </b>
<b style="color: grey;">74    </b>        if(<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>head == NULL</b> || <b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>head-&gt;next == NULL</b>)                     <b style="background-color:yellow;color:black";>return head;</b> 
<b style="color: grey;">75    </b>
<b style="color: grey;">76    </b>        // Find the middle node of the Linked List
<b style="color: grey;">77    </b>        <b style="background-color:yellow;color:black";>ListNode* slow = head, *fast = head, *temp;</b>
<b style="color: grey;">78    </b>
<b style="color: grey;">79    </b>        while(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>fast != NULL</b> &amp;&amp; <b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>fast-&gt;next != NULL</b>) {
<b style="color: grey;">80    </b>            <b style="background-color:yellow;color:black";>temp = slow;</b>
<b style="color: grey;">81    </b>            <b style="background-color:yellow;color:black";>slow = slow-&gt;next;</b>
<b style="color: grey;">82    </b>            <b style="background-color:yellow;color:black";>fast = fast-&gt;next-&gt;next;</b>
<b style="color: grey;">83    </b>        }
<b style="color: grey;">84    </b>
<b style="color: grey;">85    </b>        <b style="background-color:yellow;color:black";>temp-&gt;next = NULL;</b>      // End of 1st list
<b style="color: grey;">86    </b>
<b style="color: grey;">87    </b>        // Here, slow is the middle node
<b style="color: grey;">88    </b>
<b style="color: grey;">89    </b>        <b style="background-color:yellow;color:black";>ListNode* l1 = sortList(head);</b>    //    left half recursive call
<b style="color: grey;">90    </b>        <b style="background-color:yellow;color:black";>ListNode* l2 = sortList(slow);</b>    //    right half recursive call
<b style="color: grey;">91    </b>
<b style="color: grey;">92    </b>        <b style="background-color:yellow;color:black";>mergeList(l1, l2, &amp;newHead);</b>
<b style="color: grey;">93    </b>
<b style="color: grey;">94    </b>        <b style="background-color:yellow;color:black";>return newHead;</b>
<b style="color: grey;">95    </b>    }
<b style="color: grey;">96    </b>
...
...
...
...
</pre>