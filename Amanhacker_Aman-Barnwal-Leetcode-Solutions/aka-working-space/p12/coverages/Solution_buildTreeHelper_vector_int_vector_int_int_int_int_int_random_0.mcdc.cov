<pre>...
...
...
...
<b style="color: grey;">30    </b> };
<b style="color: grey;">31    </b>
<b style="color: grey;">32    </b>class Solution {
<b style="color: grey;">33    </b>public:
<b style="color: grey;">34    </b>
<b style="color: grey;">35    </b>    TreeNode* buildTreeHelper(vector&lt;int&gt; preorder, vector&lt;int&gt; inorder, int preStart, int preEnd, int inStart, int inEnd) {
<b style="color: grey;">36    </b>        
<b style="color: grey;">37    </b>        // Base Condition
<b style="color: grey;">38    </b>        if(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>preStart &gt; preEnd</b> || inStart &gt; inEnd)                        <b style="background-color:yellow;color:black";>return NULL;</b>
<b style="color: grey;">39    </b>        
<b style="color: grey;">40    </b>        int preLeftStart, preLeftEnd, inLeftStart, inLeftEnd;
<b style="color: grey;">41    </b>        int preRightStart, preRightEnd, inRightStart, inRightEnd;
<b style="color: grey;">42    </b>        
<b style="color: grey;">43    </b>        // preorder means root -&gt; left -&gt; right
<b style="color: grey;">44    </b>        // inorder means left -&gt; root -&gt; right
<b style="color: grey;">45    </b>        
...
...
...
...
</pre>