[
  {   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=118412423;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=72820411;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1121016361;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-1433460823;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-799358628;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1386289527;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-35740353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=-452915265;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint mini=-1762428359;\n\n\nint maxi=1185859804;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode mini */\n/* NormalNumberDataNode maxi */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint mini=0;\n\n\nint maxi=0;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode mini */\n/* NormalNumberDataNode maxi */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_left1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x,root0_left1_left,root0_left1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=0;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=892237957;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=318766007;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=2126508943;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-281217696;\n/* PointerStructureDataNode left */\nTreeNode* root0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_left1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x,root0_left1_left,root0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-1377038667;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-746877216;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=250210476;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=646448239;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=9252593;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=1999556324;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-377087025;\n/* PointerStructureDataNode left */\nTreeNode* root0_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right2_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x,root0_right2_left,root0_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=2048079605;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint res=-913444860;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\maxAncestorDiff(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-331369042;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\maxAncestorDiff(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nTreeNode* root = nullptr;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\103-binary-tree-zigzag-level-order-traversal\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-486460781;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\103-binary-tree-zigzag-level-order-traversal\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=1;\n\n\nint cols=7;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=9;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=8;\n\n\nint cols=9;\n\n\nint rCenter=137028993;\n\n\nint cCenter=1291725707;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=0;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=4;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\104-maximum-depth-of-binary-tree\\\\104-maximum-depth-of-binary-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\maxDepth(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=704628707;\nAKA_mark(\"Calling: .\\\\p11\\\\104-maximum-depth-of-binary-tree\\\\104-maximum-depth-of-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\maxDepth(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nTreeNode* root = nullptr;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint n=6;\n\n\nint k=3;\n\n\nint pos=8;\n\n\nint res=2039059035;\nvector<int> dp;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=282833041;\na.push_back(a_element0);\nint a_element1=748742383;\na.push_back(a_element1);\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode pos */\n/* NormalNumberDataNode res */\n/* VectorDataNode dp */\nint dp_element0=373063351;\ndp.push_back(dp_element0);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint n=7;\n\n\nint k=4;\n\n\nint pos=3;\n\n\nint res=-1706524078;\nvector<int> dp;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-1992406373;\na.push_back(a_element0);\nint a_element1=1755271622;\na.push_back(a_element1);\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode pos */\n/* NormalNumberDataNode res */\n/* VectorDataNode dp */\nint dp_element0=-1051568199;\ndp.push_back(dp_element0);\nint dp_element1=569805486;\ndp.push_back(dp_element1);\nint dp_element2=-789329833;\ndp.push_back(dp_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint k=1389226744;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-1184734246;\na.push_back(a_element0);\nint a_element1=168630179;\na.push_back(a_element1);\nint a_element2=-1630097706;\na.push_back(a_element2);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint k=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1054-distant-barcodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=776424720;\nv.push_back(v_element0);\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1056-confusing-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=174557551;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1054-distant-barcodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=776424720;\nv.push_back(v_element0);\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1056-confusing-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=174557551;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ ],   "fc" : "class Solution {\r public:\r     \r     int lastStoneWeight(vector<int>& v) {\r     \r         // Form Max Heap\r         priority_queue<int> pq;\r         int n = v.size();\r         \r         for(auto &x : v)                            pq.push(x);\r         \r         while(pq.empty() == false) {\r             \r             if(pq.size() == 1)                      return pq.top();\r             \r             int t1 = pq.top();\r             pq.pop();\r             \r             int t2 = pq.top();\r             pq.pop();\r             \r             if(t1 != t2)                            pq.push(abs(t1 - t2));\r         }\r         \r         return 0;\r     }\r     \r };",   "fm" : "int lastStoneWeight(vector<int>& v) {\r     \r         // Form Max Heap\r         priority_queue<int> pq;\r         int n = v.size();\r         \r         for(auto &x : v)                            pq.push(x);\r         \r         while(pq.empty() == false) {\r             \r             if(pq.size() == 1)                      return pq.top();\r             \r             int t1 = pq.top();\r             pq.pop();\r             \r             int t2 = pq.top();\r             pq.pop();\r             \r             if(t1 != t2)                            pq.push(abs(t1 - t2));\r         }\r         \r         return 0;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_lastStoneWeight_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_lastStoneWeight_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_lastStoneWeight_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->lastStoneWeight(v);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p12\\\\1046-last-stone-weight\\\\1046-last-stone-weight.cpp\\\\Solution\\\\lastStoneWeight(vector<int>&)\");\n\n\nvector<int> EXPECTED_v;\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ],   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p12\\1046-last-stone-weight\\1046-last-stone-weight.cpp\\Solution\\lastStoneWeight(vector<int>&)" },
  {   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=118412423;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=72820411;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1121016361;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-1433460823;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-799358628;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1386289527;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-35740353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=-452915265;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint mini=-1762428359;\n\n\nint maxi=1185859804;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode mini */\n/* NormalNumberDataNode maxi */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint mini=0;\n\n\nint maxi=0;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode mini */\n/* NormalNumberDataNode maxi */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_left1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x,root0_left1_left,root0_left1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=0;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=892237957;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=318766007;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=2126508943;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-281217696;\n/* PointerStructureDataNode left */\nTreeNode* root0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_left1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x,root0_left1_left,root0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-1377038667;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-746877216;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=250210476;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=646448239;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=9252593;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=1999556324;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-377087025;\n/* PointerStructureDataNode left */\nTreeNode* root0_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right2_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x,root0_right2_left,root0_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=2048079605;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint res=-913444860;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\maxAncestorDiff(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-331369042;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\maxAncestorDiff(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nTreeNode* root = nullptr;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\103-binary-tree-zigzag-level-order-traversal\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-486460781;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\103-binary-tree-zigzag-level-order-traversal\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=1;\n\n\nint cols=7;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=9;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=8;\n\n\nint cols=9;\n\n\nint rCenter=137028993;\n\n\nint cCenter=1291725707;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=0;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=4;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\104-maximum-depth-of-binary-tree\\\\104-maximum-depth-of-binary-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\maxDepth(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=704628707;\nAKA_mark(\"Calling: .\\\\p11\\\\104-maximum-depth-of-binary-tree\\\\104-maximum-depth-of-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\maxDepth(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nTreeNode* root = nullptr;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint n=6;\n\n\nint k=3;\n\n\nint pos=8;\n\n\nint res=2039059035;\nvector<int> dp;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=282833041;\na.push_back(a_element0);\nint a_element1=748742383;\na.push_back(a_element1);\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode pos */\n/* NormalNumberDataNode res */\n/* VectorDataNode dp */\nint dp_element0=373063351;\ndp.push_back(dp_element0);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint n=7;\n\n\nint k=4;\n\n\nint pos=3;\n\n\nint res=-1706524078;\nvector<int> dp;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-1992406373;\na.push_back(a_element0);\nint a_element1=1755271622;\na.push_back(a_element1);\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode pos */\n/* NormalNumberDataNode res */\n/* VectorDataNode dp */\nint dp_element0=-1051568199;\ndp.push_back(dp_element0);\nint dp_element1=569805486;\ndp.push_back(dp_element1);\nint dp_element2=-789329833;\ndp.push_back(dp_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint k=1389226744;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-1184734246;\na.push_back(a_element0);\nint a_element1=168630179;\na.push_back(a_element1);\nint a_element2=-1630097706;\na.push_back(a_element2);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint k=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1054-distant-barcodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=776424720;\nv.push_back(v_element0);\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1056-confusing-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=174557551;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1054-distant-barcodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=776424720;\nv.push_back(v_element0);\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1056-confusing-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=174557551;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "TreeNode* buildTreeHelper(vector<int> preorder, vector<int> inorder, int preStart, int preEnd, int inStart, int inEnd) {\r\n        \r\n        // Base Condition\r\n        if(preStart > preEnd || inStart > inEnd)                        return NULL;\r\n        \r\n        int preLeftStart, preLeftEnd, inLeftStart, inLeftEnd;\r\n        int preRightStart, preRightEnd, inRightStart, inRightEnd;\r\n        \r\n        // preorder means root -> left -> right\r\n        // inorder means left -> root -> right\r\n        \r\n        TreeNode* root = new TreeNode(preorder[preStart]);\r\n        \r\n        // Find index of root in inorder\r\n        int rootIndex;\r\n        \r\n        for(int i=inStart; i<=inEnd; i++) {\r\n            if(inorder[i] == root->val) {\r\n                rootIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        inLeftStart = inStart;\r\n        inRightEnd = inEnd;\r\n        \r\n        inLeftEnd = rootIndex - 1;\r\n        inRightStart = rootIndex + 1;\r\n        \r\n        preLeftStart = preStart + 1;\r\n        preRightEnd = preEnd;\r\n\r\n        // preLeftEnd - preLeftStart = inLeftEnd - inLeftStart\r\n        preLeftEnd = preLeftStart + inLeftEnd - inLeftStart;\r\n        preRightStart = preLeftEnd + 1;\r\n      \r\n        root->left = buildTreeHelper(preorder, inorder, preLeftStart, preLeftEnd, inLeftStart, inLeftEnd);\r\n        root->right = buildTreeHelper(preorder, inorder, preRightStart, preRightEnd, inRightStart, inRightEnd);\r\n        \r\n        return root;\r\n    }", "TreeNode* buildTreeHelper(vector<int> preorder, vector<int> inorder, int preStart, int preEnd, int inStart, int inEnd) {\r\n        \r\n        // Base Condition\r\n        if(preStart > preEnd || inStart > inEnd)                        return NULL;\r\n        \r\n        int preLeftStart, preLeftEnd, inLeftStart, inLeftEnd;\r\n        int preRightStart, preRightEnd, inRightStart, inRightEnd;\r\n        \r\n        // preorder means root -> left -> right\r\n        // inorder means left -> root -> right\r\n        \r\n        TreeNode* root = new TreeNode(preorder[preStart]);\r\n        \r\n        // Find index of root in inorder\r\n        int rootIndex;\r\n        \r\n        for(int i=inStart; i<=inEnd; i++) {\r\n            if(inorder[i] == root->val) {\r\n                rootIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        inLeftStart = inStart;\r\n        inRightEnd = inEnd;\r\n        \r\n        inLeftEnd = rootIndex - 1;\r\n        inRightStart = rootIndex + 1;\r\n        \r\n        preLeftStart = preStart + 1;\r\n        preRightEnd = preEnd;\r\n\r\n        // preLeftEnd - preLeftStart = inLeftEnd - inLeftStart\r\n        preLeftEnd = preLeftStart + inLeftEnd - inLeftStart;\r\n        preRightStart = preLeftEnd + 1;\r\n      \r\n        root->left = buildTreeHelper(preorder, inorder, preLeftStart, preLeftEnd, inLeftStart, inLeftEnd);\r\n        root->right = buildTreeHelper(preorder, inorder, preRightStart, preRightEnd, inRightStart, inRightEnd);\r\n        \r\n        return root;\r\n    }", "TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {\r\n    \r\n        TreeNode* root = NULL;\r\n        \r\n        int n = preorder.size();\r\n        \r\n        if(n == 0)                                          return root;\r\n        \r\n        // preorder means root -> left -> right\r\n        // inorder means left -> root -> right\r\n        \r\n        root = buildTreeHelper(preorder, inorder, 0, n-1, 0, n-1);\r\n        return root;\r\n    }" ],   "fc" : "class Solution {\r public:\r \r     TreeNode* buildTreeHelper(vector<int> preorder, vector<int> inorder, int preStart, int preEnd, int inStart, int inEnd) {\r         \r         // Base Condition\r         if(preStart > preEnd || inStart > inEnd)                        return NULL;\r         \r         int preLeftStart, preLeftEnd, inLeftStart, inLeftEnd;\r         int preRightStart, preRightEnd, inRightStart, inRightEnd;\r         \r         // preorder means root -> left -> right\r         // inorder means left -> root -> right\r         \r         TreeNode* root = new TreeNode(preorder[preStart]);\r         \r         // Find index of root in inorder\r         int rootIndex;\r         \r         for(int i=inStart; i<=inEnd; i++) {\r             if(inorder[i] == root->val) {\r                 rootIndex = i;\r                 break;\r             }\r         }\r         \r         inLeftStart = inStart;\r         inRightEnd = inEnd;\r         \r         inLeftEnd = rootIndex - 1;\r         inRightStart = rootIndex + 1;\r         \r         preLeftStart = preStart + 1;\r         preRightEnd = preEnd;\r \r         // preLeftEnd - preLeftStart = inLeftEnd - inLeftStart\r         preLeftEnd = preLeftStart + inLeftEnd - inLeftStart;\r         preRightStart = preLeftEnd + 1;\r       \r         root->left = buildTreeHelper(preorder, inorder, preLeftStart, preLeftEnd, inLeftStart, inLeftEnd);\r         root->right = buildTreeHelper(preorder, inorder, preRightStart, preRightEnd, inRightStart, inRightEnd);\r         \r         return root;\r     }\r     \r     TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {\r     \r         TreeNode* root = NULL;\r         \r         int n = preorder.size();\r         \r         if(n == 0)                                          return root;\r         \r         // preorder means root -> left -> right\r         // inorder means left -> root -> right\r         \r         root = buildTreeHelper(preorder, inorder, 0, n-1, 0, n-1);\r         return root;\r     }\r     \r };",   "fm" : "TreeNode* buildTreeHelper(vector<int> preorder, vector<int> inorder, int preStart, int preEnd, int inStart, int inEnd) {\r         \r         // Base Condition\r         if(preStart > preEnd || inStart > inEnd)                        return NULL;\r         \r         int preLeftStart, preLeftEnd, inLeftStart, inLeftEnd;\r         int preRightStart, preRightEnd, inRightStart, inRightEnd;\r         \r         // preorder means root -> left -> right\r         // inorder means left -> root -> right\r         \r         TreeNode* root = new TreeNode(preorder[preStart]);\r         \r         // Find index of root in inorder\r         int rootIndex;\r         \r         for(int i=inStart; i<=inEnd; i++) {\r             if(inorder[i] == root->val) {\r                 rootIndex = i;\r                 break;\r             }\r         }\r         \r         inLeftStart = inStart;\r         inRightEnd = inEnd;\r         \r         inLeftEnd = rootIndex - 1;\r         inRightStart = rootIndex + 1;\r         \r         preLeftStart = preStart + 1;\r         preRightEnd = preEnd;\r \r         // preLeftEnd - preLeftStart = inLeftEnd - inLeftStart\r         preLeftEnd = preLeftStart + inLeftEnd - inLeftStart;\r         preRightStart = preLeftEnd + 1;\r       \r         root->left = buildTreeHelper(preorder, inorder, preLeftStart, preLeftEnd, inLeftStart, inLeftEnd);\r         root->right = buildTreeHelper(preorder, inorder, preRightStart, preRightEnd, inRightStart, inRightEnd);\r         \r         return root;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_buildTreeHelper_vector_int_vector_int_int_int_int_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_buildTreeHelper_vector_int_vector_int_int_int_int_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_buildTreeHelper_vector_int_vector_int_int_int_int_int_random_4\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->buildTreeHelper(preorder,inorder,preStart,preEnd,inStart,inEnd);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p12\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\Solution\\\\buildTreeHelper(vector<int>,vector<int>,int,int,int,int)\");\n\n\nvector<int> EXPECTED_preorder;\n\nvector<int> EXPECTED_inorder;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_buildTreeHelper_vector_int_vector_int_int_int_int_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_buildTreeHelper_vector_int_vector_int_int_int_int_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_buildTreeHelper_vector_int_vector_int_int_int_int_int_random_0\");TreeNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->buildTreeHelper(preorder,inorder,preStart,preEnd,inStart,inEnd);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p12\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\Solution\\\\buildTreeHelper(vector<int>,vector<int>,int,int,int,int)\");\n\n\nvector<int> EXPECTED_preorder;\n\nvector<int> EXPECTED_inorder;\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ],   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p12\\105-construct-binary-tree-from-preorder-and-inorder-traversal\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\Solution\\buildTreeHelper(vector<int>,vector<int>,int,int,int,int)" },
  {   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=118412423;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=72820411;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1121016361;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-1433460823;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-799358628;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1386289527;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-35740353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=-452915265;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint mini=-1762428359;\n\n\nint maxi=1185859804;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode mini */\n/* NormalNumberDataNode maxi */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint mini=0;\n\n\nint maxi=0;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode mini */\n/* NormalNumberDataNode maxi */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_left1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x,root0_left1_left,root0_left1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=0;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=892237957;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=318766007;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=2126508943;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-281217696;\n/* PointerStructureDataNode left */\nTreeNode* root0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_left1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x,root0_left1_left,root0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-1377038667;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-746877216;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=250210476;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=646448239;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=9252593;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=1999556324;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-377087025;\n/* PointerStructureDataNode left */\nTreeNode* root0_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right2_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x,root0_right2_left,root0_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=2048079605;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint res=-913444860;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\maxAncestorDiff(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-331369042;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\maxAncestorDiff(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nTreeNode* root = nullptr;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\103-binary-tree-zigzag-level-order-traversal\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-486460781;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\103-binary-tree-zigzag-level-order-traversal\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=1;\n\n\nint cols=7;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=9;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=8;\n\n\nint cols=9;\n\n\nint rCenter=137028993;\n\n\nint cCenter=1291725707;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=0;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=4;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\104-maximum-depth-of-binary-tree\\\\104-maximum-depth-of-binary-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\maxDepth(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=704628707;\nAKA_mark(\"Calling: .\\\\p11\\\\104-maximum-depth-of-binary-tree\\\\104-maximum-depth-of-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\maxDepth(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nTreeNode* root = nullptr;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint n=6;\n\n\nint k=3;\n\n\nint pos=8;\n\n\nint res=2039059035;\nvector<int> dp;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=282833041;\na.push_back(a_element0);\nint a_element1=748742383;\na.push_back(a_element1);\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode pos */\n/* NormalNumberDataNode res */\n/* VectorDataNode dp */\nint dp_element0=373063351;\ndp.push_back(dp_element0);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint n=7;\n\n\nint k=4;\n\n\nint pos=3;\n\n\nint res=-1706524078;\nvector<int> dp;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-1992406373;\na.push_back(a_element0);\nint a_element1=1755271622;\na.push_back(a_element1);\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode pos */\n/* NormalNumberDataNode res */\n/* VectorDataNode dp */\nint dp_element0=-1051568199;\ndp.push_back(dp_element0);\nint dp_element1=569805486;\ndp.push_back(dp_element1);\nint dp_element2=-789329833;\ndp.push_back(dp_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint k=1389226744;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-1184734246;\na.push_back(a_element0);\nint a_element1=168630179;\na.push_back(a_element1);\nint a_element2=-1630097706;\na.push_back(a_element2);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint k=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1054-distant-barcodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=776424720;\nv.push_back(v_element0);\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1056-confusing-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=174557551;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1054-distant-barcodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=776424720;\nv.push_back(v_element0);\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1056-confusing-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=174557551;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ ],   "fc" : "class Solution {\r public:\r     \r     vector<int> rearrangeBarcodes(vector<int>& v) {\r     \r         vector<int> res;\r         \r         int n = v.size();\r         priority_queue<pair<int, int>> pq;          // 1st arg - Freq, 2nd arg - Element\r         \r         unordered_map<int, int> u;                  // 1st arg - Element, 2nd arg - Freq\r         \r         for(auto &x : v)                            u[x]++;\r         for(auto &x : u)                            pq.push({x.second, x.first});\r         \r         pair<int, int> prevEle = pq.top();\r         pq.pop();\r         \r         int prev = prevEle.second;\r         int prevFreq = prevEle.first;\r         \r         res.push_back(prev);\r \r         if(prevFreq >= 2)                              pq.push({prevFreq - 1, prev});\r         \r         while(pq.empty() == false) {\r             \r             pair<int, int> temp = pq.top();\r             pq.pop();\r             \r             if(prev != temp.second) {\r                 \r                 res.push_back(temp.second);\r             \r                 int freq = temp.first;\r                 if(freq >= 2)                           pq.push({freq - 1, temp.second});\r                 \r                 prev = temp.second;\r             }\r             \r             else if(prev == temp.second){\r                 \r                 // Pop the first two max occuring element, and decrease the freq by 1 of 2nd most frequent element\r                 if(pq.size() >= 1) {\r                     \r                     pair<int, int> tempSecond = pq.top();\r                     pq.pop();\r                     \r                     int freq2 = tempSecond.first;\r                     int ele = tempSecond.second;\r                     \r                     res.push_back(ele);\r                     prev = ele;\r                     \r                    if(freq2 >= 2)                           pq.push({freq2 - 1, ele});\r                 \r                     // Also, push the 1st temp\r                     pq.push(temp);\r                 }\r                 \r                 \r             }\r            \r         }\r         \r         return res;\r     }\r     \r };",   "fm" : "vector<int> rearrangeBarcodes(vector<int>& v) {\r     \r         vector<int> res;\r         \r         int n = v.size();\r         priority_queue<pair<int, int>> pq;          // 1st arg - Freq, 2nd arg - Element\r         \r         unordered_map<int, int> u;                  // 1st arg - Element, 2nd arg - Freq\r         \r         for(auto &x : v)                            u[x]++;\r         for(auto &x : u)                            pq.push({x.second, x.first});\r         \r         pair<int, int> prevEle = pq.top();\r         pq.pop();\r         \r         int prev = prevEle.second;\r         int prevFreq = prevEle.first;\r         \r         res.push_back(prev);\r \r         if(prevFreq >= 2)                              pq.push({prevFreq - 1, prev});\r         \r         while(pq.empty() == false) {\r             \r             pair<int, int> temp = pq.top();\r             pq.pop();\r             \r             if(prev != temp.second) {\r                 \r                 res.push_back(temp.second);\r             \r                 int freq = temp.first;\r                 if(freq >= 2)                           pq.push({freq - 1, temp.second});\r                 \r                 prev = temp.second;\r             }\r             \r             else if(prev == temp.second){\r                 \r                 // Pop the first two max occuring element, and decrease the freq by 1 of 2nd most frequent element\r                 if(pq.size() >= 1) {\r                     \r                     pair<int, int> tempSecond = pq.top();\r                     pq.pop();\r                     \r                     int freq2 = tempSecond.first;\r                     int ele = tempSecond.second;\r                     \r                     res.push_back(ele);\r                     prev = ele;\r                     \r                    if(freq2 >= 2)                           pq.push({freq2 - 1, ele});\r                 \r                     // Also, push the 1st temp\r                     pq.push(temp);\r                 }\r                 \r                 \r             }\r            \r         }\r         \r         return res;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_rearrangeBarcodes_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_rearrangeBarcodes_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1054-distant-barcodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=776424720;\nv.push_back(v_element0);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_rearrangeBarcodes_vector_int_random_0\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->rearrangeBarcodes(v);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p12\\\\1054-distant-barcodes\\\\1054-distant-barcodes.cpp\\\\Solution\\\\rearrangeBarcodes(vector<int>&)\");\n\n\nvector<int> EXPECTED_v;\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ],   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p12\\1054-distant-barcodes\\1054-distant-barcodes.cpp\\Solution\\rearrangeBarcodes(vector<int>&)" },
  {   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=118412423;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=72820411;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1121016361;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-1433460823;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-799358628;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1386289527;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-35740353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).val=-452915265;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint mini=-1762428359;\n\n\nint maxi=1185859804;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode mini */\n/* NormalNumberDataNode maxi */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\findMinMax(TreeNode*,TreeNode*,int&,int&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint mini=0;\n\n\nint maxi=0;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode mini */\n/* NormalNumberDataNode maxi */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_left1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x,root0_left1_left,root0_left1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=0;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\isLeafNode(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=892237957;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=318766007;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=2126508943;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-281217696;\n/* PointerStructureDataNode left */\nTreeNode* root0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_left1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x,root0_left1_left,root0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-1377038667;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-746877216;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=250210476;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=646448239;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=9252593;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=1999556324;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-377087025;\n/* PointerStructureDataNode left */\nTreeNode* root0_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right2_right;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x,root0_right2_left,root0_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=2048079605;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint res=-913444860;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\maxAncestorDiff(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-331369042;\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\maxAncestorDiff(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nTreeNode* root = nullptr;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\103-binary-tree-zigzag-level-order-traversal\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-486460781;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p11\\\\103-binary-tree-zigzag-level-order-traversal\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\1026-maximum-difference-between-node-and-ancestor\\\\1026-maximum-difference-between-node-and-ancestor.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\zigzagLevelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\103-binary-tree-zigzag-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=1;\n\n\nint cols=7;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=9;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=8;\n\n\nint cols=9;\n\n\nint rCenter=137028993;\n\n\nint cCenter=1291725707;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=0;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1030-matrix-cells-in-distance-order.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint rows=4;\n\n\nint cols=0;\n\n\nint rCenter=0;\n\n\nint cCenter=0;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode rows */\n/* NormalNumberDataNode cols */\n/* NormalNumberDataNode rCenter */\n/* NormalNumberDataNode cCenter */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p11\\\\104-maximum-depth-of-binary-tree\\\\104-maximum-depth-of-binary-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\maxDepth(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=704628707;\nAKA_mark(\"Calling: .\\\\p11\\\\104-maximum-depth-of-binary-tree\\\\104-maximum-depth-of-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\maxDepth(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\104-maximum-depth-of-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nTreeNode* root = nullptr;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint n=6;\n\n\nint k=3;\n\n\nint pos=8;\n\n\nint res=2039059035;\nvector<int> dp;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=282833041;\na.push_back(a_element0);\nint a_element1=748742383;\na.push_back(a_element1);\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode pos */\n/* NormalNumberDataNode res */\n/* VectorDataNode dp */\nint dp_element0=373063351;\ndp.push_back(dp_element0);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint n=7;\n\n\nint k=4;\n\n\nint pos=3;\n\n\nint res=-1706524078;\nvector<int> dp;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-1992406373;\na.push_back(a_element0);\nint a_element1=1755271622;\na.push_back(a_element1);\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode pos */\n/* NormalNumberDataNode res */\n/* VectorDataNode dp */\nint dp_element0=-1051568199;\ndp.push_back(dp_element0);\nint dp_element1=569805486;\ndp.push_back(dp_element1);\nint dp_element2=-789329833;\ndp.push_back(dp_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint k=1389226744;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-1184734246;\na.push_back(a_element0);\nint a_element1=168630179;\na.push_back(a_element1);\nint a_element2=-1630097706;\na.push_back(a_element2);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1043-partition-array-for-maximum-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint k=0;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1054-distant-barcodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=776424720;\nv.push_back(v_element0);\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1056-confusing-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=174557551;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1046-last-stone-weight.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-2094931239;\nv.push_back(v_element0);\nint v_element1=-1745880852;\nv.push_back(v_element1);\nint v_element2=2034778034;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-1277121440;\n\n\nint preEnd=40323617;\n\n\nint inStart=5;\n\n\nint inEnd=5;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=255349628;\npreorder.push_back(preorder_element0);\nint preorder_element1=-747994273;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=642195882;\ninorder.push_back(inorder_element0);\nint inorder_element1=-784407624;\ninorder.push_back(inorder_element1);\nint inorder_element2=810432364;\ninorder.push_back(inorder_element2);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\105-construct-binary-tree-from-preorder-and-inorder-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> preorder;\nvector<int> inorder;\n\n\nint preStart=-650765797;\n\n\nint preEnd=-1499613745;\n\n\nint inStart=1;\n\n\nint inEnd=3;\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode preorder */\nint preorder_element0=-2119930248;\npreorder.push_back(preorder_element0);\nint preorder_element1=436938587;\npreorder.push_back(preorder_element1);\n/* VectorDataNode inorder */\nint inorder_element0=-373260955;\ninorder.push_back(inorder_element0);\nint inorder_element1=1998665942;\ninorder.push_back(inorder_element1);\n/* NormalNumberDataNode preStart */\n/* NormalNumberDataNode preEnd */\n/* NormalNumberDataNode inStart */\n/* NormalNumberDataNode inEnd */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1054-distant-barcodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=776424720;\nv.push_back(v_element0);\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1056-confusing-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=174557551;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ ],   "fc" : "class Solution {\r public:\r   \r     bool confusingNumber(int num) {\r     \r         string s = to_string(num);\r         \r         int n = s.length();\r         string res = s;\r         \r         for(int i=0; i<n; i++) {\r            \r             if(s[i] == '6')                                         s[i] = '9';\r             else if(s[i] == '9')                                    s[i] = '6';\r             else if(s[i] == '0' || s[i] == '8' || s[i] == '1')      continue;\r             else                                                    return false;\r         }\r         \r         reverse(res.begin(), res.end());\r         return (res != s);\r     }\r     \r };",   "fm" : "bool confusingNumber(int num) {\r     \r         string s = to_string(num);\r         \r         int n = s.length();\r         string res = s;\r         \r         for(int i=0; i<n; i++) {\r            \r             if(s[i] == '6')                                         s[i] = '9';\r             else if(s[i] == '9')                                    s[i] = '6';\r             else if(s[i] == '0' || s[i] == '8' || s[i] == '1')      continue;\r             else                                                    return false;\r         }\r         \r         reverse(res.begin(), res.end());\r         return (res != s);\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_confusingNumber_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_confusingNumber_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1056-confusing-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=174557551;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_confusingNumber_int_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->confusingNumber(num);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p12\\\\1056-confusing-number\\\\1056-confusing-number.cpp\\\\Solution\\\\confusingNumber(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ],   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p12\\1056-confusing-number\\1056-confusing-number.cpp\\Solution\\confusingNumber(int)" }
]
