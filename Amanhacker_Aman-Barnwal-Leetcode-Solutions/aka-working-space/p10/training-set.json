[
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p10\\1009-complement-of-base-10-integer\\1009-complement-of-base-10-integer.cpp\\Solution\\bitwiseComplement(int)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1-two-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint tar=1311686501;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=1997473333;\nv.push_back(v_element0);\nint v_element1=-1256360081;\nv.push_back(v_element1);\nint v_element2=-1701245636;\nv.push_back(v_element2);\n/* NormalNumberDataNode tar */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\10-regular-expression-matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName886761 = new char[2];akaRandomName886761[0] = -25;akaRandomName886761[1] = '\\0';string s=akaRandomName886761;\nchar* akaRandomName773798 = new char[2];akaRandomName773798[0] = 62;akaRandomName773798[1] = '\\0';string p=akaRandomName773798;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100-same-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=-363545570;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=791987887;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=-1215911009;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p0_left1_x=2019071819;\n/* PointerStructureDataNode left */\nTreeNode* p0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* p0_left1_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x,p0_left1_left,p0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=-1074323806;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).val=1131074041;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_0);\n(*AKA_VECTOR_INIT_p_0).right = AKA_VECTOR_INIT_p_0_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=2099338215;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=-1810947904;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=922879061;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=792290138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left2_x=380259984;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_2 = new ::TreeNode(p1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).val=745549468;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_2);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p1_right0_x=-850414506;\n/* PointerStructureDataNode left */\nTreeNode* p1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* p1_right0_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x,p1_right0_left,p1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=-446158363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nTreeNode* q;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1009-complement-of-base-10-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1;\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0).val=100211214;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).val=1529800101;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node10_left1_x=6424022;\n/* PointerStructureDataNode left */\nTreeNode* node10_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node10_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_1 = new ::TreeNode(node10_left1_x,node10_left1_left,node10_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).val=417310960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node10_left2_x=2044742348;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_2 = new ::TreeNode(node10_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).val=-1824772551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_2);\n(*AKA_VECTOR_INIT_node1_0).left = AKA_VECTOR_INIT_node1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).val=-518611379;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_right.push_back(AKA_VECTOR_INIT_node1_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_0).right = AKA_VECTOR_INIT_node1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_0);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node11_x=1558208752;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node11_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_0).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_1).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_1);\nTreeNode* node11_left = AKA_VECTOR_INIT_node11_left[0];\n/* PointerStructureDataNode right */\nTreeNode* node11_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1 = new ::TreeNode(node11_x,node11_left,node11_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1).val=-961903844;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_1).left = AKA_VECTOR_INIT_node1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1).right;\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_1);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2).val=-220601179;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left0_x=231733113;\n/* PointerStructureDataNode left */\nTreeNode* node12_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_0 = new ::TreeNode(node12_left0_x,node12_left0_left,node12_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).val=1449348417;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left1_x=-398735809;\n/* PointerStructureDataNode left */\nTreeNode* node12_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_1 = new ::TreeNode(node12_left1_x,node12_left1_left,node12_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).val=500028072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_2).left = AKA_VECTOR_INIT_node1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).val=814705821;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_right.push_back(AKA_VECTOR_INIT_node1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_2).right = AKA_VECTOR_INIT_node1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_2);\n\nTreeNode* node1 = AKA_VECTOR_INIT_node1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2;\n\n\n/* SubStructDataNode node2 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0).val=2059988916;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).val=1505309900;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node20_left1_x=-1570765726;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_1 = new ::TreeNode(node20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).val=-1785639698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node2_0).left = AKA_VECTOR_INIT_node2_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0).right;\n\nAKA_VECTOR_INIT_node2.push_back(AKA_VECTOR_INIT_node2_0);\n\nTreeNode* node2 = AKA_VECTOR_INIT_node2[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node1 */\n/* PointerStructureDataNode node2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=124187359;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-365121420;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1426851821;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=-1486862334;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-242709381;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1571735735;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2100606254;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1826317809;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=821295622;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1356708371;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\levelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=2022940899;\nv.push_back(v_element0);\nint v_element1=-1054506436;\nv.push_back(v_element1);\nint v_element2=-1685027098;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<int> path;\n\n\nint res=2094278390;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode path */\nint path_element0=-266414701;\npath.push_back(path_element0);\nint path_element1=2113932572;\npath.push_back(path_element1);\nint path_element2=1446685595;\npath.push_back(path_element2);\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-333183140;\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ ],   "fc" : "class Solution {\r public:\r     \r     int bitwiseComplement(int n) {\r     \r         int res = 0, mul = 1;\r         \r         if(n == 0)                                                      return 1;\r         \r         while(n > 0) {\r             \r             int rem = n % 2;\r             rem ^= 1;\r             \r             res += rem * mul;\r             mul *= 2;\r             \r             n = n / 2;\r         }\r         \r         return res;\r     }\r     \r };",   "fm" : "int bitwiseComplement(int n) {\r     \r         int res = 0, mul = 1;\r         \r         if(n == 0)                                                      return 1;\r         \r         while(n > 0) {\r             \r             int rem = n % 2;\r             rem ^= 1;\r             \r             res += rem * mul;\r             mul *= 2;\r             \r             n = n / 2;\r         }\r         \r         return res;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_bitwiseComplement_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_bitwiseComplement_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1009-complement-of-base-10-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_bitwiseComplement_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->bitwiseComplement(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\1009-complement-of-base-10-integer\\\\1009-complement-of-base-10-integer.cpp\\\\Solution\\\\bitwiseComplement(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p10\\101-symmetric-tree\\101-symmetric-tree.cpp\\Solution\\isSymmetricHelper(TreeNode*,TreeNode*)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1-two-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint tar=1311686501;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=1997473333;\nv.push_back(v_element0);\nint v_element1=-1256360081;\nv.push_back(v_element1);\nint v_element2=-1701245636;\nv.push_back(v_element2);\n/* NormalNumberDataNode tar */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\10-regular-expression-matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName886761 = new char[2];akaRandomName886761[0] = -25;akaRandomName886761[1] = '\\0';string s=akaRandomName886761;\nchar* akaRandomName773798 = new char[2];akaRandomName773798[0] = 62;akaRandomName773798[1] = '\\0';string p=akaRandomName773798;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100-same-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=-363545570;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=791987887;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=-1215911009;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p0_left1_x=2019071819;\n/* PointerStructureDataNode left */\nTreeNode* p0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* p0_left1_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x,p0_left1_left,p0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=-1074323806;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).val=1131074041;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_0);\n(*AKA_VECTOR_INIT_p_0).right = AKA_VECTOR_INIT_p_0_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=2099338215;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=-1810947904;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=922879061;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=792290138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left2_x=380259984;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_2 = new ::TreeNode(p1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).val=745549468;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_2);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p1_right0_x=-850414506;\n/* PointerStructureDataNode left */\nTreeNode* p1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* p1_right0_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x,p1_right0_left,p1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=-446158363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nTreeNode* q;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1009-complement-of-base-10-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1;\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0).val=100211214;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).val=1529800101;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node10_left1_x=6424022;\n/* PointerStructureDataNode left */\nTreeNode* node10_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node10_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_1 = new ::TreeNode(node10_left1_x,node10_left1_left,node10_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).val=417310960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node10_left2_x=2044742348;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_2 = new ::TreeNode(node10_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).val=-1824772551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_2);\n(*AKA_VECTOR_INIT_node1_0).left = AKA_VECTOR_INIT_node1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).val=-518611379;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_right.push_back(AKA_VECTOR_INIT_node1_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_0).right = AKA_VECTOR_INIT_node1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_0);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node11_x=1558208752;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node11_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_0).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_1).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_1);\nTreeNode* node11_left = AKA_VECTOR_INIT_node11_left[0];\n/* PointerStructureDataNode right */\nTreeNode* node11_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1 = new ::TreeNode(node11_x,node11_left,node11_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1).val=-961903844;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_1).left = AKA_VECTOR_INIT_node1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1).right;\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_1);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2).val=-220601179;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left0_x=231733113;\n/* PointerStructureDataNode left */\nTreeNode* node12_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_0 = new ::TreeNode(node12_left0_x,node12_left0_left,node12_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).val=1449348417;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left1_x=-398735809;\n/* PointerStructureDataNode left */\nTreeNode* node12_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_1 = new ::TreeNode(node12_left1_x,node12_left1_left,node12_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).val=500028072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_2).left = AKA_VECTOR_INIT_node1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).val=814705821;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_right.push_back(AKA_VECTOR_INIT_node1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_2).right = AKA_VECTOR_INIT_node1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_2);\n\nTreeNode* node1 = AKA_VECTOR_INIT_node1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2;\n\n\n/* SubStructDataNode node2 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0).val=2059988916;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).val=1505309900;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node20_left1_x=-1570765726;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_1 = new ::TreeNode(node20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).val=-1785639698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node2_0).left = AKA_VECTOR_INIT_node2_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0).right;\n\nAKA_VECTOR_INIT_node2.push_back(AKA_VECTOR_INIT_node2_0);\n\nTreeNode* node2 = AKA_VECTOR_INIT_node2[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node1 */\n/* PointerStructureDataNode node2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=124187359;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-365121420;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1426851821;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=-1486862334;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-242709381;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1571735735;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2100606254;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1826317809;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=821295622;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1356708371;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\levelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=2022940899;\nv.push_back(v_element0);\nint v_element1=-1054506436;\nv.push_back(v_element1);\nint v_element2=-1685027098;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<int> path;\n\n\nint res=2094278390;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode path */\nint path_element0=-266414701;\npath.push_back(path_element0);\nint path_element1=2113932572;\npath.push_back(path_element1);\nint path_element2=1446685595;\npath.push_back(path_element2);\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-333183140;\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "bool isSymmetricHelper(TreeNode* node1, TreeNode* node2) {\r\n        \r\n        if(node1 == NULL && node2 == NULL)          return true;\r\n        if(node1 == NULL || node2 == NULL)          return false;\r\n        \r\n        return (node1->val == node2->val) && isSymmetricHelper(node1->left, node2->right) && isSymmetricHelper(node1->right, node2->left);\r\n    }", "bool isSymmetricHelper(TreeNode* node1, TreeNode* node2) {\r\n        \r\n        if(node1 == NULL && node2 == NULL)          return true;\r\n        if(node1 == NULL || node2 == NULL)          return false;\r\n        \r\n        return (node1->val == node2->val) && isSymmetricHelper(node1->left, node2->right) && isSymmetricHelper(node1->right, node2->left);\r\n    }", "bool isSymmetric(TreeNode* root) {\r\n    \r\n        if(root == NULL)                            return true;\r\n        \r\n        return (isSymmetricHelper(root->left, root->right));\r\n    }" ],   "fc" : "class Solution {\r public:\r \r     bool isSymmetricHelper(TreeNode* node1, TreeNode* node2) {\r         \r         if(node1 == NULL && node2 == NULL)          return true;\r         if(node1 == NULL || node2 == NULL)          return false;\r         \r         return (node1->val == node2->val) && isSymmetricHelper(node1->left, node2->right) && isSymmetricHelper(node1->right, node2->left);\r     }\r     \r     bool isSymmetric(TreeNode* root) {\r     \r         if(root == NULL)                            return true;\r         \r         return (isSymmetricHelper(root->left, root->right));\r     }\r     \r };",   "fm" : "bool isSymmetricHelper(TreeNode* node1, TreeNode* node2) {\r         \r         if(node1 == NULL && node2 == NULL)          return true;\r         if(node1 == NULL || node2 == NULL)          return false;\r         \r         return (node1->val == node2->val) && isSymmetricHelper(node1->left, node2->right) && isSymmetricHelper(node1->right, node2->left);\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_isSymmetricHelper_TreeNodemul_TreeNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isSymmetricHelper_TreeNodemul_TreeNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1;\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0).val=100211214;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).val=1529800101;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node10_left1_x=6424022;\n/* PointerStructureDataNode left */\nTreeNode* node10_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node10_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_1 = new ::TreeNode(node10_left1_x,node10_left1_left,node10_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).val=417310960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node10_left2_x=2044742348;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_2 = new ::TreeNode(node10_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).val=-1824772551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_2);\n(*AKA_VECTOR_INIT_node1_0).left = AKA_VECTOR_INIT_node1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).val=-518611379;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_right.push_back(AKA_VECTOR_INIT_node1_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_0).right = AKA_VECTOR_INIT_node1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_0);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node11_x=1558208752;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node11_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_0).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_1).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_1);\nTreeNode* node11_left = AKA_VECTOR_INIT_node11_left[0];\n/* PointerStructureDataNode right */\nTreeNode* node11_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1 = new ::TreeNode(node11_x,node11_left,node11_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1).val=-961903844;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_1).left = AKA_VECTOR_INIT_node1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1).right;\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_1);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2).val=-220601179;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left0_x=231733113;\n/* PointerStructureDataNode left */\nTreeNode* node12_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_0 = new ::TreeNode(node12_left0_x,node12_left0_left,node12_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).val=1449348417;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left1_x=-398735809;\n/* PointerStructureDataNode left */\nTreeNode* node12_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_1 = new ::TreeNode(node12_left1_x,node12_left1_left,node12_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).val=500028072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_2).left = AKA_VECTOR_INIT_node1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).val=814705821;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_right.push_back(AKA_VECTOR_INIT_node1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_2).right = AKA_VECTOR_INIT_node1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_2);\n\nTreeNode* node1 = AKA_VECTOR_INIT_node1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2;\n\n\n/* SubStructDataNode node2 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0).val=2059988916;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).val=1505309900;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node20_left1_x=-1570765726;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_1 = new ::TreeNode(node20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).val=-1785639698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node2_0).left = AKA_VECTOR_INIT_node2_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0).right;\n\nAKA_VECTOR_INIT_node2.push_back(AKA_VECTOR_INIT_node2_0);\n\nTreeNode* node2 = AKA_VECTOR_INIT_node2[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node1 */\n/* PointerStructureDataNode node2 */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isSymmetricHelper_TreeNodemul_TreeNodemul_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isSymmetricHelper(node1,node2);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\Solution\\\\isSymmetricHelper(TreeNode*,TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p10\\101-symmetric-tree\\101-symmetric-tree.cpp\\Solution\\isSymmetric(TreeNode*)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1-two-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint tar=1311686501;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=1997473333;\nv.push_back(v_element0);\nint v_element1=-1256360081;\nv.push_back(v_element1);\nint v_element2=-1701245636;\nv.push_back(v_element2);\n/* NormalNumberDataNode tar */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\10-regular-expression-matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName886761 = new char[2];akaRandomName886761[0] = -25;akaRandomName886761[1] = '\\0';string s=akaRandomName886761;\nchar* akaRandomName773798 = new char[2];akaRandomName773798[0] = 62;akaRandomName773798[1] = '\\0';string p=akaRandomName773798;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100-same-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=-363545570;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=791987887;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=-1215911009;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p0_left1_x=2019071819;\n/* PointerStructureDataNode left */\nTreeNode* p0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* p0_left1_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x,p0_left1_left,p0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=-1074323806;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).val=1131074041;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_0);\n(*AKA_VECTOR_INIT_p_0).right = AKA_VECTOR_INIT_p_0_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=2099338215;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=-1810947904;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=922879061;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=792290138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left2_x=380259984;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_2 = new ::TreeNode(p1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).val=745549468;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_2);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p1_right0_x=-850414506;\n/* PointerStructureDataNode left */\nTreeNode* p1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* p1_right0_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x,p1_right0_left,p1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=-446158363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nTreeNode* q;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1009-complement-of-base-10-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1;\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0).val=100211214;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).val=1529800101;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node10_left1_x=6424022;\n/* PointerStructureDataNode left */\nTreeNode* node10_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node10_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_1 = new ::TreeNode(node10_left1_x,node10_left1_left,node10_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).val=417310960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node10_left2_x=2044742348;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_2 = new ::TreeNode(node10_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).val=-1824772551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_2);\n(*AKA_VECTOR_INIT_node1_0).left = AKA_VECTOR_INIT_node1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).val=-518611379;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_right.push_back(AKA_VECTOR_INIT_node1_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_0).right = AKA_VECTOR_INIT_node1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_0);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node11_x=1558208752;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node11_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_0).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_1).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_1);\nTreeNode* node11_left = AKA_VECTOR_INIT_node11_left[0];\n/* PointerStructureDataNode right */\nTreeNode* node11_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1 = new ::TreeNode(node11_x,node11_left,node11_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1).val=-961903844;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_1).left = AKA_VECTOR_INIT_node1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1).right;\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_1);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2).val=-220601179;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left0_x=231733113;\n/* PointerStructureDataNode left */\nTreeNode* node12_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_0 = new ::TreeNode(node12_left0_x,node12_left0_left,node12_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).val=1449348417;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left1_x=-398735809;\n/* PointerStructureDataNode left */\nTreeNode* node12_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_1 = new ::TreeNode(node12_left1_x,node12_left1_left,node12_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).val=500028072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_2).left = AKA_VECTOR_INIT_node1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).val=814705821;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_right.push_back(AKA_VECTOR_INIT_node1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_2).right = AKA_VECTOR_INIT_node1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_2);\n\nTreeNode* node1 = AKA_VECTOR_INIT_node1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2;\n\n\n/* SubStructDataNode node2 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0).val=2059988916;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).val=1505309900;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node20_left1_x=-1570765726;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_1 = new ::TreeNode(node20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).val=-1785639698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node2_0).left = AKA_VECTOR_INIT_node2_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0).right;\n\nAKA_VECTOR_INIT_node2.push_back(AKA_VECTOR_INIT_node2_0);\n\nTreeNode* node2 = AKA_VECTOR_INIT_node2[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node1 */\n/* PointerStructureDataNode node2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=124187359;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-365121420;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1426851821;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=-1486862334;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-242709381;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1571735735;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2100606254;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1826317809;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=821295622;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1356708371;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\levelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=2022940899;\nv.push_back(v_element0);\nint v_element1=-1054506436;\nv.push_back(v_element1);\nint v_element2=-1685027098;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<int> path;\n\n\nint res=2094278390;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode path */\nint path_element0=-266414701;\npath.push_back(path_element0);\nint path_element1=2113932572;\npath.push_back(path_element1);\nint path_element2=1446685595;\npath.push_back(path_element2);\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-333183140;\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "bool isSymmetricHelper(TreeNode* node1, TreeNode* node2) {\r\n        \r\n        if(node1 == NULL && node2 == NULL)          return true;\r\n        if(node1 == NULL || node2 == NULL)          return false;\r\n        \r\n        return (node1->val == node2->val) && isSymmetricHelper(node1->left, node2->right) && isSymmetricHelper(node1->right, node2->left);\r\n    }" ],   "fc" : "class Solution {\r public:\r \r     bool isSymmetricHelper(TreeNode* node1, TreeNode* node2) {\r         \r         if(node1 == NULL && node2 == NULL)          return true;\r         if(node1 == NULL || node2 == NULL)          return false;\r         \r         return (node1->val == node2->val) && isSymmetricHelper(node1->left, node2->right) && isSymmetricHelper(node1->right, node2->left);\r     }\r     \r     bool isSymmetric(TreeNode* root) {\r     \r         if(root == NULL)                            return true;\r         \r         return (isSymmetricHelper(root->left, root->right));\r     }\r     \r };",   "fm" : "bool isSymmetric(TreeNode* root) {\r     \r         if(root == NULL)                            return true;\r         \r         return (isSymmetricHelper(root->left, root->right));\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_isSymmetric_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isSymmetric_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=124187359;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-365121420;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1426851821;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=-1486862334;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isSymmetric_TreeNodemul_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isSymmetric(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\Solution\\\\isSymmetric(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_isSymmetric_TreeNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_isSymmetric_TreeNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-242709381;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isSymmetric_TreeNodemul_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isSymmetric(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\Solution\\\\isSymmetric(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_isSymmetric_TreeNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_isSymmetric_TreeNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1571735735;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2100606254;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1826317809;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isSymmetric_TreeNodemul_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isSymmetric(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\Solution\\\\isSymmetric(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p10\\1019-next-greater-node-in-linked-list\\1019-next-greater-node-in-linked-list.cpp\\Solution\\nextLargerNodes(ListNode*)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1-two-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint tar=1311686501;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=1997473333;\nv.push_back(v_element0);\nint v_element1=-1256360081;\nv.push_back(v_element1);\nint v_element2=-1701245636;\nv.push_back(v_element2);\n/* NormalNumberDataNode tar */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\10-regular-expression-matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName886761 = new char[2];akaRandomName886761[0] = -25;akaRandomName886761[1] = '\\0';string s=akaRandomName886761;\nchar* akaRandomName773798 = new char[2];akaRandomName773798[0] = 62;akaRandomName773798[1] = '\\0';string p=akaRandomName773798;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100-same-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=-363545570;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=791987887;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=-1215911009;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p0_left1_x=2019071819;\n/* PointerStructureDataNode left */\nTreeNode* p0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* p0_left1_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x,p0_left1_left,p0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=-1074323806;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).val=1131074041;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_0);\n(*AKA_VECTOR_INIT_p_0).right = AKA_VECTOR_INIT_p_0_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=2099338215;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=-1810947904;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=922879061;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=792290138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left2_x=380259984;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_2 = new ::TreeNode(p1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).val=745549468;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_2);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p1_right0_x=-850414506;\n/* PointerStructureDataNode left */\nTreeNode* p1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* p1_right0_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x,p1_right0_left,p1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=-446158363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nTreeNode* q;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1009-complement-of-base-10-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1;\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0).val=100211214;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).val=1529800101;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node10_left1_x=6424022;\n/* PointerStructureDataNode left */\nTreeNode* node10_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node10_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_1 = new ::TreeNode(node10_left1_x,node10_left1_left,node10_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).val=417310960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node10_left2_x=2044742348;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_2 = new ::TreeNode(node10_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).val=-1824772551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_2);\n(*AKA_VECTOR_INIT_node1_0).left = AKA_VECTOR_INIT_node1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).val=-518611379;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_right.push_back(AKA_VECTOR_INIT_node1_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_0).right = AKA_VECTOR_INIT_node1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_0);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node11_x=1558208752;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node11_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_0).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_1).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_1);\nTreeNode* node11_left = AKA_VECTOR_INIT_node11_left[0];\n/* PointerStructureDataNode right */\nTreeNode* node11_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1 = new ::TreeNode(node11_x,node11_left,node11_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1).val=-961903844;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_1).left = AKA_VECTOR_INIT_node1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1).right;\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_1);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2).val=-220601179;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left0_x=231733113;\n/* PointerStructureDataNode left */\nTreeNode* node12_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_0 = new ::TreeNode(node12_left0_x,node12_left0_left,node12_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).val=1449348417;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left1_x=-398735809;\n/* PointerStructureDataNode left */\nTreeNode* node12_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_1 = new ::TreeNode(node12_left1_x,node12_left1_left,node12_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).val=500028072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_2).left = AKA_VECTOR_INIT_node1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).val=814705821;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_right.push_back(AKA_VECTOR_INIT_node1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_2).right = AKA_VECTOR_INIT_node1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_2);\n\nTreeNode* node1 = AKA_VECTOR_INIT_node1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2;\n\n\n/* SubStructDataNode node2 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0).val=2059988916;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).val=1505309900;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node20_left1_x=-1570765726;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_1 = new ::TreeNode(node20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).val=-1785639698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node2_0).left = AKA_VECTOR_INIT_node2_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0).right;\n\nAKA_VECTOR_INIT_node2.push_back(AKA_VECTOR_INIT_node2_0);\n\nTreeNode* node2 = AKA_VECTOR_INIT_node2[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node1 */\n/* PointerStructureDataNode node2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=124187359;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-365121420;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1426851821;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=-1486862334;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-242709381;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1571735735;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2100606254;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1826317809;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=821295622;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1356708371;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\levelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=2022940899;\nv.push_back(v_element0);\nint v_element1=-1054506436;\nv.push_back(v_element1);\nint v_element2=-1685027098;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<int> path;\n\n\nint res=2094278390;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode path */\nint path_element0=-266414701;\npath.push_back(path_element0);\nint path_element1=2113932572;\npath.push_back(path_element1);\nint path_element2=1446685595;\npath.push_back(path_element2);\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-333183140;\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ ],   "fc" : "class Solution {\r public:\r     \r     vector<int> nextLargerNodes(ListNode* head) {\r     \r         vector<int> res;\r         ListNode* temp = head;\r         \r         vector<int> v;\r         \r         while(temp != NULL) {\r             v.push_back(temp->val);\r             temp = temp->next;\r         }\r         \r         // Now, find the next greater right of all elements of vector v\r         stack<int> w;\r         \r         for(int i=v.size()-1; i>=0; i--) {\r             \r             if(w.empty() == true)                                       res.push_back(0);\r             else if(w.top() > v[i])                                     res.push_back(w.top());\r             else if(w.top() <= v[i]) {\r \r                 while(w.empty() == false && w.top() <= v[i])            w.pop();\r                 \r                 if(w.empty() == true)                                   res.push_back(0);\r                 else                                                    res.push_back(w.top());\r             }\r             \r             w.push(v[i]);\r         }\r         \r         reverse(res.begin(), res.end());\r         return res;\r     }\r     \r };",   "fm" : "vector<int> nextLargerNodes(ListNode* head) {\r     \r         vector<int> res;\r         ListNode* temp = head;\r         \r         vector<int> v;\r         \r         while(temp != NULL) {\r             v.push_back(temp->val);\r             temp = temp->next;\r         }\r         \r         // Now, find the next greater right of all elements of vector v\r         stack<int> w;\r         \r         for(int i=v.size()-1; i>=0; i--) {\r             \r             if(w.empty() == true)                                       res.push_back(0);\r             else if(w.top() > v[i])                                     res.push_back(w.top());\r             else if(w.top() <= v[i]) {\r \r                 while(w.empty() == false && w.top() <= v[i])            w.pop();\r                 \r                 if(w.empty() == true)                                   res.push_back(0);\r                 else                                                    res.push_back(w.top());\r             }\r             \r             w.push(v[i]);\r         }\r         \r         reverse(res.begin(), res.end());\r         return res;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_nextLargerNodes_ListNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_nextLargerNodes_ListNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=821295622;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1356708371;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_nextLargerNodes_ListNodemul_random_3\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->nextLargerNodes(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\Solution\\\\nextLargerNodes(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p10\\102-binary-tree-level-order-traversal\\102-binary-tree-level-order-traversal.cpp\\Solution\\levelOrder(TreeNode*)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1-two-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint tar=1311686501;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=1997473333;\nv.push_back(v_element0);\nint v_element1=-1256360081;\nv.push_back(v_element1);\nint v_element2=-1701245636;\nv.push_back(v_element2);\n/* NormalNumberDataNode tar */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\10-regular-expression-matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName886761 = new char[2];akaRandomName886761[0] = -25;akaRandomName886761[1] = '\\0';string s=akaRandomName886761;\nchar* akaRandomName773798 = new char[2];akaRandomName773798[0] = 62;akaRandomName773798[1] = '\\0';string p=akaRandomName773798;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100-same-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=-363545570;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=791987887;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=-1215911009;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p0_left1_x=2019071819;\n/* PointerStructureDataNode left */\nTreeNode* p0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* p0_left1_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x,p0_left1_left,p0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=-1074323806;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).val=1131074041;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_0);\n(*AKA_VECTOR_INIT_p_0).right = AKA_VECTOR_INIT_p_0_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=2099338215;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=-1810947904;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=922879061;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=792290138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left2_x=380259984;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_2 = new ::TreeNode(p1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).val=745549468;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_2);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p1_right0_x=-850414506;\n/* PointerStructureDataNode left */\nTreeNode* p1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* p1_right0_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x,p1_right0_left,p1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=-446158363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nTreeNode* q;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1009-complement-of-base-10-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1;\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0).val=100211214;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).val=1529800101;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node10_left1_x=6424022;\n/* PointerStructureDataNode left */\nTreeNode* node10_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node10_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_1 = new ::TreeNode(node10_left1_x,node10_left1_left,node10_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).val=417310960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node10_left2_x=2044742348;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_2 = new ::TreeNode(node10_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).val=-1824772551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_2);\n(*AKA_VECTOR_INIT_node1_0).left = AKA_VECTOR_INIT_node1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).val=-518611379;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_right.push_back(AKA_VECTOR_INIT_node1_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_0).right = AKA_VECTOR_INIT_node1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_0);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node11_x=1558208752;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node11_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_0).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_1).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_1);\nTreeNode* node11_left = AKA_VECTOR_INIT_node11_left[0];\n/* PointerStructureDataNode right */\nTreeNode* node11_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1 = new ::TreeNode(node11_x,node11_left,node11_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1).val=-961903844;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_1).left = AKA_VECTOR_INIT_node1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1).right;\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_1);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2).val=-220601179;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left0_x=231733113;\n/* PointerStructureDataNode left */\nTreeNode* node12_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_0 = new ::TreeNode(node12_left0_x,node12_left0_left,node12_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).val=1449348417;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left1_x=-398735809;\n/* PointerStructureDataNode left */\nTreeNode* node12_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_1 = new ::TreeNode(node12_left1_x,node12_left1_left,node12_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).val=500028072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_2).left = AKA_VECTOR_INIT_node1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).val=814705821;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_right.push_back(AKA_VECTOR_INIT_node1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_2).right = AKA_VECTOR_INIT_node1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_2);\n\nTreeNode* node1 = AKA_VECTOR_INIT_node1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2;\n\n\n/* SubStructDataNode node2 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0).val=2059988916;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).val=1505309900;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node20_left1_x=-1570765726;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_1 = new ::TreeNode(node20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).val=-1785639698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node2_0).left = AKA_VECTOR_INIT_node2_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0).right;\n\nAKA_VECTOR_INIT_node2.push_back(AKA_VECTOR_INIT_node2_0);\n\nTreeNode* node2 = AKA_VECTOR_INIT_node2[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node1 */\n/* PointerStructureDataNode node2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=124187359;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-365121420;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1426851821;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=-1486862334;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-242709381;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1571735735;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2100606254;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1826317809;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=821295622;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1356708371;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\levelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=2022940899;\nv.push_back(v_element0);\nint v_element1=-1054506436;\nv.push_back(v_element1);\nint v_element2=-1685027098;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<int> path;\n\n\nint res=2094278390;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode path */\nint path_element0=-266414701;\npath.push_back(path_element0);\nint path_element1=2113932572;\npath.push_back(path_element1);\nint path_element2=1446685595;\npath.push_back(path_element2);\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-333183140;\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ ],   "fc" : "class Solution {\r public:\r     \r     vector<vector<int>> levelOrder(TreeNode* root) {\r     \r         vector<vector<int>> res;\r         \r         if(root == NULL)                    return res;\r         \r         vector<int> path;\r         queue<TreeNode*> q;\r         \r         q.push(root);\r         \r         while(q.empty() == false) {\r             \r             int n = q.size();\r             \r             // All nodes at one level\r             for(int i=0; i<n; i++) {\r                 \r                 TreeNode* temp = q.front();\r                 q.pop();\r                 \r                 path.push_back(temp->val);\r                 \r                 if(temp->left != NULL)           q.push(temp->left);\r                 if(temp->right != NULL)          q.push(temp->right);\r             }\r             \r             res.push_back(path);\r             path.clear();\r         }\r         \r         \r         return res;\r     }\r     \r };",   "fm" : "vector<vector<int>> levelOrder(TreeNode* root) {\r     \r         vector<vector<int>> res;\r         \r         if(root == NULL)                    return res;\r         \r         vector<int> path;\r         queue<TreeNode*> q;\r         \r         q.push(root);\r         \r         while(q.empty() == false) {\r             \r             int n = q.size();\r             \r             // All nodes at one level\r             for(int i=0; i<n; i++) {\r                 \r                 TreeNode* temp = q.front();\r                 q.pop();\r                 \r                 path.push_back(temp->val);\r                 \r                 if(temp->left != NULL)           q.push(temp->left);\r                 if(temp->right != NULL)          q.push(temp->right);\r             }\r             \r             res.push_back(path);\r             path.clear();\r         }\r         \r         \r         return res;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_levelOrder_TreeNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_levelOrder_TreeNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\levelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_levelOrder_TreeNodemul_random_0\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->levelOrder(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\Solution\\\\levelOrder(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_levelOrder_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_levelOrder_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_levelOrder_TreeNodemul_random_2\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->levelOrder(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\Solution\\\\levelOrder(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p10\\1022-sum-of-root-to-leaf-binary-numbers\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\Solution\\findNumber(vector<int>)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1-two-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint tar=1311686501;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=1997473333;\nv.push_back(v_element0);\nint v_element1=-1256360081;\nv.push_back(v_element1);\nint v_element2=-1701245636;\nv.push_back(v_element2);\n/* NormalNumberDataNode tar */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\10-regular-expression-matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName886761 = new char[2];akaRandomName886761[0] = -25;akaRandomName886761[1] = '\\0';string s=akaRandomName886761;\nchar* akaRandomName773798 = new char[2];akaRandomName773798[0] = 62;akaRandomName773798[1] = '\\0';string p=akaRandomName773798;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100-same-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=-363545570;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=791987887;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=-1215911009;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p0_left1_x=2019071819;\n/* PointerStructureDataNode left */\nTreeNode* p0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* p0_left1_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x,p0_left1_left,p0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=-1074323806;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).val=1131074041;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_0);\n(*AKA_VECTOR_INIT_p_0).right = AKA_VECTOR_INIT_p_0_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=2099338215;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=-1810947904;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=922879061;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=792290138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left2_x=380259984;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_2 = new ::TreeNode(p1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).val=745549468;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_2);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p1_right0_x=-850414506;\n/* PointerStructureDataNode left */\nTreeNode* p1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* p1_right0_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x,p1_right0_left,p1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=-446158363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nTreeNode* q;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1009-complement-of-base-10-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1;\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0).val=100211214;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).val=1529800101;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node10_left1_x=6424022;\n/* PointerStructureDataNode left */\nTreeNode* node10_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node10_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_1 = new ::TreeNode(node10_left1_x,node10_left1_left,node10_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).val=417310960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node10_left2_x=2044742348;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_2 = new ::TreeNode(node10_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).val=-1824772551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_2);\n(*AKA_VECTOR_INIT_node1_0).left = AKA_VECTOR_INIT_node1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).val=-518611379;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_right.push_back(AKA_VECTOR_INIT_node1_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_0).right = AKA_VECTOR_INIT_node1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_0);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node11_x=1558208752;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node11_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_0).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_1).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_1);\nTreeNode* node11_left = AKA_VECTOR_INIT_node11_left[0];\n/* PointerStructureDataNode right */\nTreeNode* node11_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1 = new ::TreeNode(node11_x,node11_left,node11_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1).val=-961903844;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_1).left = AKA_VECTOR_INIT_node1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1).right;\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_1);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2).val=-220601179;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left0_x=231733113;\n/* PointerStructureDataNode left */\nTreeNode* node12_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_0 = new ::TreeNode(node12_left0_x,node12_left0_left,node12_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).val=1449348417;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left1_x=-398735809;\n/* PointerStructureDataNode left */\nTreeNode* node12_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_1 = new ::TreeNode(node12_left1_x,node12_left1_left,node12_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).val=500028072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_2).left = AKA_VECTOR_INIT_node1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).val=814705821;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_right.push_back(AKA_VECTOR_INIT_node1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_2).right = AKA_VECTOR_INIT_node1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_2);\n\nTreeNode* node1 = AKA_VECTOR_INIT_node1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2;\n\n\n/* SubStructDataNode node2 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0).val=2059988916;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).val=1505309900;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node20_left1_x=-1570765726;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_1 = new ::TreeNode(node20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).val=-1785639698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node2_0).left = AKA_VECTOR_INIT_node2_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0).right;\n\nAKA_VECTOR_INIT_node2.push_back(AKA_VECTOR_INIT_node2_0);\n\nTreeNode* node2 = AKA_VECTOR_INIT_node2[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node1 */\n/* PointerStructureDataNode node2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=124187359;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-365121420;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1426851821;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=-1486862334;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-242709381;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1571735735;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2100606254;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1826317809;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=821295622;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1356708371;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\levelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=2022940899;\nv.push_back(v_element0);\nint v_element1=-1054506436;\nv.push_back(v_element1);\nint v_element2=-1685027098;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<int> path;\n\n\nint res=2094278390;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode path */\nint path_element0=-266414701;\npath.push_back(path_element0);\nint path_element1=2113932572;\npath.push_back(path_element1);\nint path_element2=1446685595;\npath.push_back(path_element2);\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-333183140;\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "void dfs(TreeNode* root, vector<int> path, int &res) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        path.push_back(root->val);\r\n        \r\n        if(root->left == NULL && root->right == NULL) {\r\n            \r\n            int t = findNumber(path);\r\n            res += t;\r\n        }\r\n        \r\n        dfs(root->left, path, res);\r\n        dfs(root->right, path, res);\r\n        \r\n        path.pop_back();\r\n        \r\n        return;\r\n    }" ],   "fc" : "class Solution {\r public:\r     \r     int findNumber(vector<int> v) {\r         \r         int sum = 0;\r         int mul = 1;\r         \r         int n = v.size();\r         \r         for(int i=n-1; i>=0; i--) {\r             sum += mul * v[i];\r             mul *= 2;\r         }\r         \r         return sum;\r     }\r     \r     void dfs(TreeNode* root, vector<int> path, int &res) {\r         \r         if(root == NULL)                            return;\r         \r         path.push_back(root->val);\r         \r         if(root->left == NULL && root->right == NULL) {\r             \r             int t = findNumber(path);\r             res += t;\r         }\r         \r         dfs(root->left, path, res);\r         dfs(root->right, path, res);\r         \r         path.pop_back();\r         \r         return;\r     }\r     \r     int sumRootToLeaf(TreeNode* root) {\r     \r         int res = 0;\r         \r         if(root == NULL)                            return res;\r         \r         vector<int> path;\r         \r         // Find all root to leaf paths\r         \r         dfs(root, path, res);\r         \r             \r         return res;\r     }\r     \r };",   "fm" : "int findNumber(vector<int> v) {\r         \r         int sum = 0;\r         int mul = 1;\r         \r         int n = v.size();\r         \r         for(int i=n-1; i>=0; i--) {\r             sum += mul * v[i];\r             mul *= 2;\r         }\r         \r         return sum;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_findNumber_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_findNumber_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=2022940899;\nv.push_back(v_element0);\nint v_element1=-1054506436;\nv.push_back(v_element1);\nint v_element2=-1685027098;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findNumber_vector_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findNumber(v);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\Solution\\\\findNumber(vector<int>)\");\n\n\nvector<int> EXPECTED_v;\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p10\\1022-sum-of-root-to-leaf-binary-numbers\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\Solution\\dfs(TreeNode*,vector<int>,int&)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1-two-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint tar=1311686501;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=1997473333;\nv.push_back(v_element0);\nint v_element1=-1256360081;\nv.push_back(v_element1);\nint v_element2=-1701245636;\nv.push_back(v_element2);\n/* NormalNumberDataNode tar */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\10-regular-expression-matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName886761 = new char[2];akaRandomName886761[0] = -25;akaRandomName886761[1] = '\\0';string s=akaRandomName886761;\nchar* akaRandomName773798 = new char[2];akaRandomName773798[0] = 62;akaRandomName773798[1] = '\\0';string p=akaRandomName773798;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100-same-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=-363545570;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=791987887;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=-1215911009;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p0_left1_x=2019071819;\n/* PointerStructureDataNode left */\nTreeNode* p0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* p0_left1_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x,p0_left1_left,p0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=-1074323806;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).val=1131074041;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_0);\n(*AKA_VECTOR_INIT_p_0).right = AKA_VECTOR_INIT_p_0_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=2099338215;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=-1810947904;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=922879061;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=792290138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left2_x=380259984;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_2 = new ::TreeNode(p1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).val=745549468;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_2);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p1_right0_x=-850414506;\n/* PointerStructureDataNode left */\nTreeNode* p1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* p1_right0_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x,p1_right0_left,p1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=-446158363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nTreeNode* q;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1009-complement-of-base-10-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1;\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0).val=100211214;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).val=1529800101;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node10_left1_x=6424022;\n/* PointerStructureDataNode left */\nTreeNode* node10_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node10_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_1 = new ::TreeNode(node10_left1_x,node10_left1_left,node10_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).val=417310960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node10_left2_x=2044742348;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_2 = new ::TreeNode(node10_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).val=-1824772551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_2);\n(*AKA_VECTOR_INIT_node1_0).left = AKA_VECTOR_INIT_node1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).val=-518611379;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_right.push_back(AKA_VECTOR_INIT_node1_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_0).right = AKA_VECTOR_INIT_node1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_0);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node11_x=1558208752;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node11_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_0).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_1).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_1);\nTreeNode* node11_left = AKA_VECTOR_INIT_node11_left[0];\n/* PointerStructureDataNode right */\nTreeNode* node11_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1 = new ::TreeNode(node11_x,node11_left,node11_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1).val=-961903844;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_1).left = AKA_VECTOR_INIT_node1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1).right;\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_1);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2).val=-220601179;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left0_x=231733113;\n/* PointerStructureDataNode left */\nTreeNode* node12_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_0 = new ::TreeNode(node12_left0_x,node12_left0_left,node12_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).val=1449348417;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left1_x=-398735809;\n/* PointerStructureDataNode left */\nTreeNode* node12_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_1 = new ::TreeNode(node12_left1_x,node12_left1_left,node12_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).val=500028072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_2).left = AKA_VECTOR_INIT_node1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).val=814705821;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_right.push_back(AKA_VECTOR_INIT_node1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_2).right = AKA_VECTOR_INIT_node1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_2);\n\nTreeNode* node1 = AKA_VECTOR_INIT_node1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2;\n\n\n/* SubStructDataNode node2 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0).val=2059988916;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).val=1505309900;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node20_left1_x=-1570765726;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_1 = new ::TreeNode(node20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).val=-1785639698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node2_0).left = AKA_VECTOR_INIT_node2_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0).right;\n\nAKA_VECTOR_INIT_node2.push_back(AKA_VECTOR_INIT_node2_0);\n\nTreeNode* node2 = AKA_VECTOR_INIT_node2[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node1 */\n/* PointerStructureDataNode node2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=124187359;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-365121420;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1426851821;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=-1486862334;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-242709381;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1571735735;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2100606254;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1826317809;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=821295622;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1356708371;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\levelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=2022940899;\nv.push_back(v_element0);\nint v_element1=-1054506436;\nv.push_back(v_element1);\nint v_element2=-1685027098;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<int> path;\n\n\nint res=2094278390;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode path */\nint path_element0=-266414701;\npath.push_back(path_element0);\nint path_element1=2113932572;\npath.push_back(path_element1);\nint path_element2=1446685595;\npath.push_back(path_element2);\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-333183140;\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "int findNumber(vector<int> v) {\r\n        \r\n        int sum = 0;\r\n        int mul = 1;\r\n        \r\n        int n = v.size();\r\n        \r\n        for(int i=n-1; i>=0; i--) {\r\n            sum += mul * v[i];\r\n            mul *= 2;\r\n        }\r\n        \r\n        return sum;\r\n    }", "void dfs(TreeNode* root, vector<int> path, int &res) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        path.push_back(root->val);\r\n        \r\n        if(root->left == NULL && root->right == NULL) {\r\n            \r\n            int t = findNumber(path);\r\n            res += t;\r\n        }\r\n        \r\n        dfs(root->left, path, res);\r\n        dfs(root->right, path, res);\r\n        \r\n        path.pop_back();\r\n        \r\n        return;\r\n    }", "void dfs(TreeNode* root, vector<int> path, int &res) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        path.push_back(root->val);\r\n        \r\n        if(root->left == NULL && root->right == NULL) {\r\n            \r\n            int t = findNumber(path);\r\n            res += t;\r\n        }\r\n        \r\n        dfs(root->left, path, res);\r\n        dfs(root->right, path, res);\r\n        \r\n        path.pop_back();\r\n        \r\n        return;\r\n    }", "int sumRootToLeaf(TreeNode* root) {\r\n    \r\n        int res = 0;\r\n        \r\n        if(root == NULL)                            return res;\r\n        \r\n        vector<int> path;\r\n        \r\n        // Find all root to leaf paths\r\n        \r\n        dfs(root, path, res);\r\n        \r\n            \r\n        return res;\r\n    }" ],   "fc" : "class Solution {\r public:\r     \r     int findNumber(vector<int> v) {\r         \r         int sum = 0;\r         int mul = 1;\r         \r         int n = v.size();\r         \r         for(int i=n-1; i>=0; i--) {\r             sum += mul * v[i];\r             mul *= 2;\r         }\r         \r         return sum;\r     }\r     \r     void dfs(TreeNode* root, vector<int> path, int &res) {\r         \r         if(root == NULL)                            return;\r         \r         path.push_back(root->val);\r         \r         if(root->left == NULL && root->right == NULL) {\r             \r             int t = findNumber(path);\r             res += t;\r         }\r         \r         dfs(root->left, path, res);\r         dfs(root->right, path, res);\r         \r         path.pop_back();\r         \r         return;\r     }\r     \r     int sumRootToLeaf(TreeNode* root) {\r     \r         int res = 0;\r         \r         if(root == NULL)                            return res;\r         \r         vector<int> path;\r         \r         // Find all root to leaf paths\r         \r         dfs(root, path, res);\r         \r             \r         return res;\r     }\r     \r };",   "fm" : "void dfs(TreeNode* root, vector<int> path, int &res) {\r         \r         if(root == NULL)                            return;\r         \r         path.push_back(root->val);\r         \r         if(root->left == NULL && root->right == NULL) {\r             \r             int t = findNumber(path);\r             res += t;\r         }\r         \r         dfs(root->left, path, res);\r         dfs(root->right, path, res);\r         \r         path.pop_back();\r         \r         return;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_dfs_TreeNodemul_vector_int_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_dfs_TreeNodemul_vector_int_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<int> path;\n\n\nint res=2094278390;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode path */\nint path_element0=-266414701;\npath.push_back(path_element0);\nint path_element1=2113932572;\npath.push_back(path_element1);\nint path_element2=1446685595;\npath.push_back(path_element2);\n/* NormalNumberDataNode res */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_TreeNodemul_vector_int_int_random_2\");AKA_INSTANCE___Solution->dfs(root,path,res);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\Solution\\\\dfs(TreeNode*,vector<int>,int&)\");\n\n/* error assertion */\nvector<int> EXPECTED_path;\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p10\\1022-sum-of-root-to-leaf-binary-numbers\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\Solution\\sumRootToLeaf(TreeNode*)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1-two-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint tar=1311686501;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=1997473333;\nv.push_back(v_element0);\nint v_element1=-1256360081;\nv.push_back(v_element1);\nint v_element2=-1701245636;\nv.push_back(v_element2);\n/* NormalNumberDataNode tar */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\10-regular-expression-matching.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName886761 = new char[2];akaRandomName886761[0] = -25;akaRandomName886761[1] = '\\0';string s=akaRandomName886761;\nchar* akaRandomName773798 = new char[2];akaRandomName773798[0] = 62;akaRandomName773798[1] = '\\0';string p=akaRandomName773798;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\100-same-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p;\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p0_x=-363545570;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0 = new ::TreeNode(p0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0).val=791987887;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).val=-1215911009;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_0).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p0_left1_x=2019071819;\n/* PointerStructureDataNode left */\nTreeNode* p0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* p0_left1_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_left_1 = new ::TreeNode(p0_left1_x,p0_left1_left,p0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).val=-1074323806;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_left_1).right;\nAKA_VECTOR_INIT_p_0_DOT_left.push_back(AKA_VECTOR_INIT_p_0_DOT_left_1);\n(*AKA_VECTOR_INIT_p_0).left = AKA_VECTOR_INIT_p_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_0\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).val=1131074041;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_0_DOT_right_0).right;\nAKA_VECTOR_INIT_p_0_DOT_right.push_back(AKA_VECTOR_INIT_p_0_DOT_right_0);\n(*AKA_VECTOR_INIT_p_0).right = AKA_VECTOR_INIT_p_0_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_0);\n\n\n/* SubStructDataNode p */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_x=2099338215;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1 = new ::TreeNode(p1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1).val=-1810947904;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).val=922879061;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_0).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).val=792290138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_1).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint p1_left2_x=380259984;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_left_2 = new ::TreeNode(p1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).val=745549468;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_left_2).right;\nAKA_VECTOR_INIT_p_1_DOT_left.push_back(AKA_VECTOR_INIT_p_1_DOT_left_2);\n(*AKA_VECTOR_INIT_p_1).left = AKA_VECTOR_INIT_p_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_p_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint p1_right0_x=-850414506;\n/* PointerStructureDataNode left */\nTreeNode* p1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* p1_right0_right;\nAKA_mark(\"Calling: .\\\\p9\\\\100-same-tree\\\\100-same-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\100-same-tree.cpp\\\\isSameTree(TreeNode*,TreeNode*)\\\\p\\\\AKA_VECTOR_INIT_p_1\\\\p\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_p_1_DOT_right_0 = new ::TreeNode(p1_right0_x,p1_right0_left,p1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).val=-446158363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_p_1_DOT_right_0).right;\nAKA_VECTOR_INIT_p_1_DOT_right.push_back(AKA_VECTOR_INIT_p_1_DOT_right_0);\n(*AKA_VECTOR_INIT_p_1).right = AKA_VECTOR_INIT_p_1_DOT_right[0];\n\nAKA_VECTOR_INIT_p.push_back(AKA_VECTOR_INIT_p_1);\n\nTreeNode* p = AKA_VECTOR_INIT_p[0];\nTreeNode* q;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode p */\n/* PointerStructureDataNode q */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1009-complement-of-base-10-integer.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1;\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0).val=100211214;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).val=1529800101;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node10_left1_x=6424022;\n/* PointerStructureDataNode left */\nTreeNode* node10_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node10_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_1 = new ::TreeNode(node10_left1_x,node10_left1_left,node10_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).val=417310960;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node10_left2_x=2044742348;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_left_2 = new ::TreeNode(node10_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).val=-1824772551;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_left_2).right;\nAKA_VECTOR_INIT_node1_0_DOT_left.push_back(AKA_VECTOR_INIT_node1_0_DOT_left_2);\n(*AKA_VECTOR_INIT_node1_0).left = AKA_VECTOR_INIT_node1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_0\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).val=-518611379;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_0_DOT_right.push_back(AKA_VECTOR_INIT_node1_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_0).right = AKA_VECTOR_INIT_node1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_0);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node11_x=1558208752;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node11_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_0).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node11_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node11_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node11_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node11_left_1).right;\nAKA_VECTOR_INIT_node11_left.push_back(AKA_VECTOR_INIT_node11_left_1);\nTreeNode* node11_left = AKA_VECTOR_INIT_node11_left[0];\n/* PointerStructureDataNode right */\nTreeNode* node11_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1 = new ::TreeNode(node11_x,node11_left,node11_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1).val=-961903844;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).val=275499836;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_1\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).val=-1170478556;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_1_DOT_left.push_back(AKA_VECTOR_INIT_node1_1_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_1).left = AKA_VECTOR_INIT_node1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_1).right;\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_1);\n\n\n/* SubStructDataNode node1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2).val=-220601179;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left0_x=231733113;\n/* PointerStructureDataNode left */\nTreeNode* node12_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_0 = new ::TreeNode(node12_left0_x,node12_left0_left,node12_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).val=1449348417;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint node12_left1_x=-398735809;\n/* PointerStructureDataNode left */\nTreeNode* node12_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* node12_left1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_left_1 = new ::TreeNode(node12_left1_x,node12_left1_left,node12_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).val=500028072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_left_1).right;\nAKA_VECTOR_INIT_node1_2_DOT_left.push_back(AKA_VECTOR_INIT_node1_2_DOT_left_1);\n(*AKA_VECTOR_INIT_node1_2).left = AKA_VECTOR_INIT_node1_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node1\\\\AKA_VECTOR_INIT_node1_2\\\\node1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node1_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).val=814705821;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_node1_2_DOT_right.push_back(AKA_VECTOR_INIT_node1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_node1_2).right = AKA_VECTOR_INIT_node1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_node1.push_back(AKA_VECTOR_INIT_node1_2);\n\nTreeNode* node1 = AKA_VECTOR_INIT_node1[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2;\n\n\n/* SubStructDataNode node2 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0).val=2059988916;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node2_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).val=1505309900;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_0).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node20_left1_x=-1570765726;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetricHelper(TreeNode*,TreeNode*)\\\\node2\\\\AKA_VECTOR_INIT_node2_0\\\\node2\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node2_0_DOT_left_1 = new ::TreeNode(node20_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).val=-1785639698;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0_DOT_left_1).right;\nAKA_VECTOR_INIT_node2_0_DOT_left.push_back(AKA_VECTOR_INIT_node2_0_DOT_left_1);\n(*AKA_VECTOR_INIT_node2_0).left = AKA_VECTOR_INIT_node2_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node2_0).right;\n\nAKA_VECTOR_INIT_node2.push_back(AKA_VECTOR_INIT_node2_0);\n\nTreeNode* node2 = AKA_VECTOR_INIT_node2[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node1 */\n/* PointerStructureDataNode node2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=124187359;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-365121420;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1426851821;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=-1486862334;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-242709381;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\101-symmetric-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1571735735;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2100606254;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1826317809;\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\101-symmetric-tree\\\\101-symmetric-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\101-symmetric-tree.cpp\\\\isSymmetric(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=821295622;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1356708371;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=0;\nAKA_mark(\"Calling: .\\\\p10\\\\1019-next-greater-node-in-linked-list\\\\1019-next-greater-node-in-linked-list.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\1019-next-greater-node-in-linked-list.cpp\\\\nextLargerNodes(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\102-binary-tree-level-order-traversal\\\\102-binary-tree-level-order-traversal.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\levelOrder(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\102-binary-tree-level-order-traversal.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=2022940899;\nv.push_back(v_element0);\nint v_element1=-1054506436;\nv.push_back(v_element1);\nint v_element2=-1685027098;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<int> path;\n\n\nint res=2094278390;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode path */\nint path_element0=-266414701;\npath.push_back(path_element0);\nint path_element1=2113932572;\npath.push_back(path_element1);\nint path_element2=1446685595;\npath.push_back(path_element2);\n/* NormalNumberDataNode res */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-333183140;\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "void dfs(TreeNode* root, vector<int> path, int &res) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        path.push_back(root->val);\r\n        \r\n        if(root->left == NULL && root->right == NULL) {\r\n            \r\n            int t = findNumber(path);\r\n            res += t;\r\n        }\r\n        \r\n        dfs(root->left, path, res);\r\n        dfs(root->right, path, res);\r\n        \r\n        path.pop_back();\r\n        \r\n        return;\r\n    }" ],   "fc" : "class Solution {\r public:\r     \r     int findNumber(vector<int> v) {\r         \r         int sum = 0;\r         int mul = 1;\r         \r         int n = v.size();\r         \r         for(int i=n-1; i>=0; i--) {\r             sum += mul * v[i];\r             mul *= 2;\r         }\r         \r         return sum;\r     }\r     \r     void dfs(TreeNode* root, vector<int> path, int &res) {\r         \r         if(root == NULL)                            return;\r         \r         path.push_back(root->val);\r         \r         if(root->left == NULL && root->right == NULL) {\r             \r             int t = findNumber(path);\r             res += t;\r         }\r         \r         dfs(root->left, path, res);\r         dfs(root->right, path, res);\r         \r         path.pop_back();\r         \r         return;\r     }\r     \r     int sumRootToLeaf(TreeNode* root) {\r     \r         int res = 0;\r         \r         if(root == NULL)                            return res;\r         \r         vector<int> path;\r         \r         // Find all root to leaf paths\r         \r         dfs(root, path, res);\r         \r             \r         return res;\r     }\r     \r };",   "fm" : "int sumRootToLeaf(TreeNode* root) {\r     \r         int res = 0;\r         \r         if(root == NULL)                            return res;\r         \r         vector<int> path;\r         \r         // Find all root to leaf paths\r         \r         dfs(root, path, res);\r         \r             \r         return res;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_sumRootToLeaf_TreeNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_sumRootToLeaf_TreeNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-333183140;\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\sumRootToLeaf(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_sumRootToLeaf_TreeNodemul_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->sumRootToLeaf(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p10\\\\1022-sum-of-root-to-leaf-binary-numbers\\\\1022-sum-of-root-to-leaf-binary-numbers.cpp\\\\Solution\\\\sumRootToLeaf(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] }
]
