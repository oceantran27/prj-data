<pre>...
...
...
...
<b style="color: grey;">29    </b>     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
<b style="color: grey;">30    </b> };
<b style="color: grey;">31    </b>
<b style="color: grey;">32    </b>class Solution {
<b style="color: grey;">33    </b>public:
<b style="color: grey;">34    </b>    
<b style="color: grey;">35    </b>    int findNumber(vector&lt;int&gt; v) {
<b style="color: grey;">36    </b>        
<b style="color: grey;">37    </b>        <b style="background-color:yellow;color:black";>int sum = 0;</b>
<b style="color: grey;">38    </b>        <b style="background-color:yellow;color:black";>int mul = 1;</b>
<b style="color: grey;">39    </b>        
<b style="color: grey;">40    </b>        <b style="background-color:yellow;color:black";>int n = v.size();</b>
<b style="color: grey;">41    </b>        
<b style="color: grey;">42    </b>        for(<b style="background-color:yellow;color:black";>int i=n-1;</b> <b style="background-color:yellow;color:black";>i&gt;=0</b>; <b style="background-color:yellow;color:black";>i--</b>) {
<b style="color: grey;">43    </b>            <b style="background-color:yellow;color:black";>sum += mul * v[i];</b>
<b style="color: grey;">44    </b>            <b style="background-color:yellow;color:black";>mul *= 2;</b>
<b style="color: grey;">45    </b>        }
<b style="color: grey;">46    </b>        
<b style="color: grey;">47    </b>        <b style="background-color:yellow;color:black";>return sum;</b>
<b style="color: grey;">48    </b>    }
<b style="color: grey;">49    </b>    
<b style="color: grey;">50    </b>    void dfs(TreeNode* root, vector&lt;int&gt; path, int &amp;res) {
<b style="color: grey;">51    </b>        
<b style="color: grey;">52    </b>        if(root == NULL)                            return;
<b style="color: grey;">53    </b>        
<b style="color: grey;">54    </b>        path.push_back(root-&gt;val);
...
...
...
...
</pre>