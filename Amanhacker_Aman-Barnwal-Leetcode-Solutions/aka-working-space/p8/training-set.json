[
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p8\\0951-flip-equivalent-binary-trees\\0951-flip-equivalent-binary-trees.cpp\\Solution\\flipEquiv(TreeNode*,TreeNode*)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "bool flipEquiv(TreeNode* root1, TreeNode* root2) {\r\n    \r\n        if(root1 == NULL && root2 == NULL)                  return true;\r\n        if(root1 == NULL || root2 == NULL)                  return false;\r\n        \r\n        bool f1 = flipEquiv(root1->left, root2->left) && flipEquiv(root1->right, root2->right);\r\n        bool f2 = flipEquiv(root1->left, root2->right) && flipEquiv(root1->right, root2->left);\r\n        \r\n        return (root1->val == root2->val) && (f1 || f2);\r\n    }", "bool flipEquiv(TreeNode* root1, TreeNode* root2) {\r\n    \r\n        if(root1 == NULL && root2 == NULL)                  return true;\r\n        if(root1 == NULL || root2 == NULL)                  return false;\r\n        \r\n        bool f1 = flipEquiv(root1->left, root2->left) && flipEquiv(root1->right, root2->right);\r\n        bool f2 = flipEquiv(root1->left, root2->right) && flipEquiv(root1->right, root2->left);\r\n        \r\n        return (root1->val == root2->val) && (f1 || f2);\r\n    }" ],   "fc" : "class Solution {\r public:\r     \r     bool flipEquiv(TreeNode* root1, TreeNode* root2) {\r     \r         if(root1 == NULL && root2 == NULL)                  return true;\r         if(root1 == NULL || root2 == NULL)                  return false;\r         \r         bool f1 = flipEquiv(root1->left, root2->left) && flipEquiv(root1->right, root2->right);\r         bool f2 = flipEquiv(root1->left, root2->right) && flipEquiv(root1->right, root2->left);\r         \r         return (root1->val == root2->val) && (f1 || f2);\r     }\r     \r };",   "fm" : "bool flipEquiv(TreeNode* root1, TreeNode* root2) {\r     \r         if(root1 == NULL && root2 == NULL)                  return true;\r         if(root1 == NULL || root2 == NULL)                  return false;\r         \r         bool f1 = flipEquiv(root1->left, root2->left) && flipEquiv(root1->right, root2->right);\r         bool f2 = flipEquiv(root1->left, root2->right) && flipEquiv(root1->right, root2->left);\r         \r         return (root1->val == root2->val) && (f1 || f2);\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_flipEquiv_TreeNodemul_TreeNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_flipEquiv_TreeNodemul_TreeNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_flipEquiv_TreeNodemul_TreeNodemul_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->flipEquiv(root1,root2);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\Solution\\\\flipEquiv(TreeNode*,TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p8\\0968-binary-tree-cameras\\0968-binary-tree-cameras.cpp\\Solution\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "void dfs(TreeNode* node, TreeNode* par, int &camCount, set<TreeNode*> &covered) {\r\n        \r\n        if(node == NULL)                        return;\r\n        \r\n        if(node != NULL) {\r\n            \r\n            dfs(node->left, node, camCount, covered);\r\n            dfs(node->right, node, camCount, covered);\r\n            \r\n            // Here, you go to bottom level of the tree\r\n            \r\n            // Check if I need to add camera at node\r\n            \r\n            // if (par is NULL && node is uncovered) || any of left or right node is uncovered\r\n            if( (par == NULL && covered.find(node) == covered.end()) || \r\n                covered.find(node->left) == covered.end() || \r\n                covered.find(node->right) == covered.end() ) {\r\n                \r\n                camCount++;\r\n                \r\n                // Cover node, par, and its left and right child\r\n                covered.insert(node);\r\n                covered.insert(par);\r\n                covered.insert(node->left);\r\n                covered.insert(node->right);\r\n            }\r\n        }\r\n        \r\n        return;\r\n    }", "void dfs(TreeNode* node, TreeNode* par, int &camCount, set<TreeNode*> &covered) {\r\n        \r\n        if(node == NULL)                        return;\r\n        \r\n        if(node != NULL) {\r\n            \r\n            dfs(node->left, node, camCount, covered);\r\n            dfs(node->right, node, camCount, covered);\r\n            \r\n            // Here, you go to bottom level of the tree\r\n            \r\n            // Check if I need to add camera at node\r\n            \r\n            // if (par is NULL && node is uncovered) || any of left or right node is uncovered\r\n            if( (par == NULL && covered.find(node) == covered.end()) || \r\n                covered.find(node->left) == covered.end() || \r\n                covered.find(node->right) == covered.end() ) {\r\n                \r\n                camCount++;\r\n                \r\n                // Cover node, par, and its left and right child\r\n                covered.insert(node);\r\n                covered.insert(par);\r\n                covered.insert(node->left);\r\n                covered.insert(node->right);\r\n            }\r\n        }\r\n        \r\n        return;\r\n    }", "int minCameraCover(TreeNode* root) {\r\n        \r\n        int camCount = 0;\r\n        set<TreeNode*> covered;\r\n        \r\n        if(root == NULL)                        return camCount;\r\n    \r\n        covered.insert(NULL);\r\n        \r\n        dfs(root, NULL, camCount, covered);\r\n        return camCount;\r\n    }" ],   "fc" : "class Solution {\r public:\r \r     void dfs(TreeNode* node, TreeNode* par, int &camCount, set<TreeNode*> &covered) {\r         \r         if(node == NULL)                        return;\r         \r         if(node != NULL) {\r             \r             dfs(node->left, node, camCount, covered);\r             dfs(node->right, node, camCount, covered);\r             \r             // Here, you go to bottom level of the tree\r             \r             // Check if I need to add camera at node\r             \r             // if (par is NULL && node is uncovered) || any of left or right node is uncovered\r             if( (par == NULL && covered.find(node) == covered.end()) || \r                 covered.find(node->left) == covered.end() || \r                 covered.find(node->right) == covered.end() ) {\r                 \r                 camCount++;\r                 \r                 // Cover node, par, and its left and right child\r                 covered.insert(node);\r                 covered.insert(par);\r                 covered.insert(node->left);\r                 covered.insert(node->right);\r             }\r         }\r         \r         return;\r     }\r     \r     int minCameraCover(TreeNode* root) {\r         \r         int camCount = 0;\r         set<TreeNode*> covered;\r         \r         if(root == NULL)                        return camCount;\r     \r         covered.insert(NULL);\r         \r         dfs(root, NULL, camCount, covered);\r         return camCount;\r     }\r     \r };",   "fm" : "void dfs(TreeNode* node, TreeNode* par, int &camCount, set<TreeNode*> &covered) {\r         \r         if(node == NULL)                        return;\r         \r         if(node != NULL) {\r             \r             dfs(node->left, node, camCount, covered);\r             dfs(node->right, node, camCount, covered);\r             \r             // Here, you go to bottom level of the tree\r             \r             // Check if I need to add camera at node\r             \r             // if (par is NULL && node is uncovered) || any of left or right node is uncovered\r             if( (par == NULL && covered.find(node) == covered.end()) || \r                 covered.find(node->left) == covered.end() || \r                 covered.find(node->right) == covered.end() ) {\r                 \r                 camCount++;\r                 \r                 // Cover node, par, and its left and right child\r                 covered.insert(node);\r                 covered.insert(par);\r                 covered.insert(node->left);\r                 covered.insert(node->right);\r             }\r         }\r         \r         return;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_dfs_TreeNodemul_TreeNodemul_int_set_TreeNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_dfs_TreeNodemul_TreeNodemul_int_set_TreeNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_TreeNodemul_TreeNodemul_int_set_TreeNodemul_random_4\");AKA_INSTANCE___Solution->dfs(node,par,camCount,covered);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\Solution\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\");\n\n/* error assertion */\nset<TreeNode*> EXPECTED_covered;\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p8\\0968-binary-tree-cameras\\0968-binary-tree-cameras.cpp\\Solution\\minCameraCover(TreeNode*)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "void dfs(TreeNode* node, TreeNode* par, int &camCount, set<TreeNode*> &covered) {\r\n        \r\n        if(node == NULL)                        return;\r\n        \r\n        if(node != NULL) {\r\n            \r\n            dfs(node->left, node, camCount, covered);\r\n            dfs(node->right, node, camCount, covered);\r\n            \r\n            // Here, you go to bottom level of the tree\r\n            \r\n            // Check if I need to add camera at node\r\n            \r\n            // if (par is NULL && node is uncovered) || any of left or right node is uncovered\r\n            if( (par == NULL && covered.find(node) == covered.end()) || \r\n                covered.find(node->left) == covered.end() || \r\n                covered.find(node->right) == covered.end() ) {\r\n                \r\n                camCount++;\r\n                \r\n                // Cover node, par, and its left and right child\r\n                covered.insert(node);\r\n                covered.insert(par);\r\n                covered.insert(node->left);\r\n                covered.insert(node->right);\r\n            }\r\n        }\r\n        \r\n        return;\r\n    }" ],   "fc" : "class Solution {\r public:\r \r     void dfs(TreeNode* node, TreeNode* par, int &camCount, set<TreeNode*> &covered) {\r         \r         if(node == NULL)                        return;\r         \r         if(node != NULL) {\r             \r             dfs(node->left, node, camCount, covered);\r             dfs(node->right, node, camCount, covered);\r             \r             // Here, you go to bottom level of the tree\r             \r             // Check if I need to add camera at node\r             \r             // if (par is NULL && node is uncovered) || any of left or right node is uncovered\r             if( (par == NULL && covered.find(node) == covered.end()) || \r                 covered.find(node->left) == covered.end() || \r                 covered.find(node->right) == covered.end() ) {\r                 \r                 camCount++;\r                 \r                 // Cover node, par, and its left and right child\r                 covered.insert(node);\r                 covered.insert(par);\r                 covered.insert(node->left);\r                 covered.insert(node->right);\r             }\r         }\r         \r         return;\r     }\r     \r     int minCameraCover(TreeNode* root) {\r         \r         int camCount = 0;\r         set<TreeNode*> covered;\r         \r         if(root == NULL)                        return camCount;\r     \r         covered.insert(NULL);\r         \r         dfs(root, NULL, camCount, covered);\r         return camCount;\r     }\r     \r };",   "fm" : "int minCameraCover(TreeNode* root) {\r         \r         int camCount = 0;\r         set<TreeNode*> covered;\r         \r         if(root == NULL)                        return camCount;\r     \r         covered.insert(NULL);\r         \r         dfs(root, NULL, camCount, covered);\r         return camCount;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_minCameraCover_TreeNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_minCameraCover_TreeNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCameraCover_TreeNodemul_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCameraCover(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\Solution\\\\minCameraCover(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_minCameraCover_TreeNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_minCameraCover_TreeNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_minCameraCover_TreeNodemul_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->minCameraCover(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\Solution\\\\minCameraCover(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p8\\0979-distribute-coins-in-binary-tree\\0979-distribute-coins-in-binary-tree.cpp\\Solution\\distributeCoins(TreeNode*)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "int dfs(TreeNode* node, int &count) {\r\n        \r\n        if(node == NULL)                        return 0;\r\n        \r\n        int l = dfs(node->left, count);\r\n        int r = dfs(node->right, count);\r\n        \r\n        count += abs(l) + abs(r);\r\n        \r\n        return (node->val + l + r) - 1;\r\n    }" ],   "fc" : "class Solution {\r public:\r \r     // dfs(node) is the excess number of coins in the subtree at or below this node\r     int dfs(TreeNode* node, int &count) {\r         \r         if(node == NULL)                        return 0;\r         \r         int l = dfs(node->left, count);\r         int r = dfs(node->right, count);\r         \r         count += abs(l) + abs(r);\r         \r         return (node->val + l + r) - 1;\r     }\r     \r     int distributeCoins(TreeNode* root) {\r     \r         int count = 0;\r         \r         if(root == NULL)                        return count;\r         \r         dfs(root, count);\r         return count;\r     }\r     \r };",   "fm" : "int distributeCoins(TreeNode* root) {\r     \r         int count = 0;\r         \r         if(root == NULL)                        return count;\r         \r         dfs(root, count);\r         return count;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_distributeCoins_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_distributeCoins_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_distributeCoins_TreeNodemul_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->distributeCoins(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\Solution\\\\distributeCoins(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p8\\0990-satisfiability-of-equality-equations\\0990-satisfiability-of-equality-equations.cpp\\Solution\\dfs(char,char,unordered_map<char,vector<char>>&,unordered_map<char,int>&,bool&)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "void dfs(char node1, char dest, unordered_map<char, vector<char>> &adj, unordered_map<char, int> &vis, bool &flag) {\r\n        \r\n        if(flag == true)                            return;\r\n        \r\n        vis[node1] = 1;\r\n        \r\n        if(node1 == dest) {\r\n            flag = true;\r\n            return;\r\n        }\r\n        \r\n        for(auto &ch : adj[node1]) {\r\n            if(vis[ch] == 0) {\r\n                dfs(ch, dest, adj, vis, flag);\r\n            }\r\n        }\r\n        \r\n        return;\r\n    }", "void dfs(char node1, char dest, unordered_map<char, vector<char>> &adj, unordered_map<char, int> &vis, bool &flag) {\r\n        \r\n        if(flag == true)                            return;\r\n        \r\n        vis[node1] = 1;\r\n        \r\n        if(node1 == dest) {\r\n            flag = true;\r\n            return;\r\n        }\r\n        \r\n        for(auto &ch : adj[node1]) {\r\n            if(vis[ch] == 0) {\r\n                dfs(ch, dest, adj, vis, flag);\r\n            }\r\n        }\r\n        \r\n        return;\r\n    }", "bool equationsPossible(vector<string>& equations) {\r\n    \r\n        unordered_map<char, vector<char>> adj;\r\n        int n = equations.size();\r\n        \r\n        for(auto &x : equations) {\r\n            \r\n            string s = x;\r\n            \r\n            if(s[1] == '=') {\r\n                adj[s[0]].push_back(s[3]);\r\n                adj[s[3]].push_back(s[0]);\r\n            }\r\n        }\r\n        \r\n        for(auto &x : equations) {\r\n            \r\n            if(x[1] == '!') {\r\n                \r\n                char node1 = x[0];\r\n                char node2 = x[3];\r\n                \r\n                // Check whether node1 and node2 are connected by any chance\r\n                bool flag = false;\r\n                unordered_map<char, int> vis;\r\n                \r\n                dfs(node1, node2, adj, vis, flag);\r\n                vis.clear();\r\n                \r\n                if(flag == true)                        return false;\r\n            }\r\n        }\r\n        \r\n        return true;\r\n    }" ],   "fc" : "class Solution {\r public:\r     \r     void dfs(char node1, char dest, unordered_map<char, vector<char>> &adj, unordered_map<char, int> &vis, bool &flag) {\r         \r         if(flag == true)                            return;\r         \r         vis[node1] = 1;\r         \r         if(node1 == dest) {\r             flag = true;\r             return;\r         }\r         \r         for(auto &ch : adj[node1]) {\r             if(vis[ch] == 0) {\r                 dfs(ch, dest, adj, vis, flag);\r             }\r         }\r         \r         return;\r     }\r     \r     bool equationsPossible(vector<string>& equations) {\r     \r         unordered_map<char, vector<char>> adj;\r         int n = equations.size();\r         \r         for(auto &x : equations) {\r             \r             string s = x;\r             \r             if(s[1] == '=') {\r                 adj[s[0]].push_back(s[3]);\r                 adj[s[3]].push_back(s[0]);\r             }\r         }\r         \r         for(auto &x : equations) {\r             \r             if(x[1] == '!') {\r                 \r                 char node1 = x[0];\r                 char node2 = x[3];\r                 \r                 // Check whether node1 and node2 are connected by any chance\r                 bool flag = false;\r                 unordered_map<char, int> vis;\r                 \r                 dfs(node1, node2, adj, vis, flag);\r                 vis.clear();\r                 \r                 if(flag == true)                        return false;\r             }\r         }\r         \r         return true;\r     }\r     \r };",   "fm" : "void dfs(char node1, char dest, unordered_map<char, vector<char>> &adj, unordered_map<char, int> &vis, bool &flag) {\r         \r         if(flag == true)                            return;\r         \r         vis[node1] = 1;\r         \r         if(node1 == dest) {\r             flag = true;\r             return;\r         }\r         \r         for(auto &ch : adj[node1]) {\r             if(vis[ch] == 0) {\r                 dfs(ch, dest, adj, vis, flag);\r             }\r         }\r         \r         return;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_dfs_char_char_unordered_map_char_vector_char_unordered_map_char_int_bool_random_3(void) {\n{\nAKA_test_case_name=\"Solution_dfs_char_char_unordered_map_char_vector_char_unordered_map_char_int_bool_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_char_char_unordered_map_char_vector_char_unordered_map_char_int_bool_random_3\");AKA_INSTANCE___Solution->dfs(node1,dest,adj,vis,flag);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p8\\\\0990-satisfiability-of-equality-equations\\\\0990-satisfiability-of-equality-equations.cpp\\\\Solution\\\\dfs(char,char,unordered_map<char,vector<char>>&,unordered_map<char,int>&,bool&)\");\n\n/* error assertion */\nunordered_map<char, vector<char>> EXPECTED_adj;\n\nunordered_map<char, int> EXPECTED_vis;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_dfs_char_char_unordered_map_char_vector_char_unordered_map_char_int_bool_random_0(void) {\n{\nAKA_test_case_name=\"Solution_dfs_char_char_unordered_map_char_vector_char_unordered_map_char_int_bool_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_char_char_unordered_map_char_vector_char_unordered_map_char_int_bool_random_0\");AKA_INSTANCE___Solution->dfs(node1,dest,adj,vis,flag);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p8\\\\0990-satisfiability-of-equality-equations\\\\0990-satisfiability-of-equality-equations.cpp\\\\Solution\\\\dfs(char,char,unordered_map<char,vector<char>>&,unordered_map<char,int>&,bool&)\");\n\n/* error assertion */\nunordered_map<char, vector<char>> EXPECTED_adj;\n\nunordered_map<char, int> EXPECTED_vis;\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p8\\0990-satisfiability-of-equality-equations\\0990-satisfiability-of-equality-equations.cpp\\Solution\\equationsPossible(vector<string>&)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0724-find-pivot-index.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-275449946;\na.push_back(a_element0);\nint a_element1=-2134944408;\na.push_back(a_element1);\nint a_element2=-347120849;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1574571807;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=2951677;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-831692642;\n/* PointerStructureDataNode left */\nTreeNode* root0_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x,root0_right1_left,root0_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=584541311;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1553750116;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1923681798;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left0_x=651856478;\n/* PointerStructureDataNode left */\nTreeNode* root1_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x,root1_left0_left,root1_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-455886272;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=1586837105;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=195708282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-668858682;\n/* PointerStructureDataNode left */\nTreeNode* root1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x,root1_right0_left,root1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1013189049;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=902515597;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=499079309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-291942962;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=418885158;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_right2_x=1968509977;\n/* PointerStructureDataNode left */\nTreeNode* root2_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right2_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneHelper(TreeNode*&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_2 = new ::TreeNode(root2_right2_x,root2_right2_left,root2_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).val=533328967;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_2).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_2);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0814-binary-tree-pruning\\\\0814-binary-tree-pruning.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0814-binary-tree-pruning.cpp\\\\pruneTree(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1419186576;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1522933405;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1055016507;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1679437306;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1427919162;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1934109527;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1874436539;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-463868695;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=473467171;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=-391059163;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right2_x=-333734479;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[2]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_2 = new ::TreeNode(root0_right2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).val=-1036573517;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-769604072;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-2120059087;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=846394821;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-29613884;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-1694973615;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-2026930797;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=1519533431;\nAKA_mark(\"Calling: .\\\\p7\\\\0863-all-nodes-distance-k-in-binary-tree\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\bfs(TreeNode*,unordered_map<int,vector<int>>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=2113016776;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, vector<int>> adj;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode adj */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0863-all-nodes-distance-k-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint src=-828588678;\nunordered_map<int, vector<int>> adj;\nvector<int> dist;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode src */\n/* UnorderedMapDataNode adj */\n/* VectorDataNode dist */\nint dist_element0=-396189554;\ndist.push_back(dist_element0);\nint dist_element1=102621906;\ndist.push_back(dist_element1);\n/* VectorDataNode vis */\nint vis_element0=-83721440;\nvis.push_back(vis_element0);\nint vis_element1=-1239297547;\nvis.push_back(vis_element1);\nint vis_element2=-1082239038;\nvis.push_back(vis_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_deepest_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\deepest\\\\element #1\\\\element #1[0]\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_deepest_element1_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_deepest_element1_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_deepest_element1_0).right;\nAKA_VECTOR_INIT_deepest_element1.push_back(AKA_VECTOR_INIT_deepest_element1_0);\nTreeNode* deepest_element1 = AKA_VECTOR_INIT_deepest_element1[0];\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=238032780;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=1154298628;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\bfs(TreeNode*,vector<TreeNode*>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> deepest;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode deepest */\nTreeNode* deepest_element0;\ndeepest.push_back(deepest_element0);\nTreeNode* deepest_element1;\ndeepest.push_back(deepest_element1);\nTreeNode* deepest_element2;\ndeepest.push_back(deepest_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=212190202;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1791799499;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1140838085;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2012256844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-853415102;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=238474298;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1730782138;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l;\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0).val=-126918442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint l0_left0_x=1485863410;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_0 = new ::TreeNode(l0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).val=-1474853963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_0).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l0_left1_x=13299225;\n/* PointerStructureDataNode left */\nTreeNode* l0_left1_left;\n/* PointerStructureDataNode right */\nTreeNode* l0_left1_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\left\\\\left[1]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_left_1 = new ::TreeNode(l0_left1_x,l0_left1_left,l0_left1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).val=888147507;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_left_1).right;\nAKA_VECTOR_INIT_l_0_DOT_left.push_back(AKA_VECTOR_INIT_l_0_DOT_left_1);\n(*AKA_VECTOR_INIT_l_0).left = AKA_VECTOR_INIT_l_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_0\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).val=1290159177;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_0_DOT_right_0).right;\nAKA_VECTOR_INIT_l_0_DOT_right.push_back(AKA_VECTOR_INIT_l_0_DOT_right_0);\n(*AKA_VECTOR_INIT_l_0).right = AKA_VECTOR_INIT_l_0_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_0);\n\n\n/* SubStructDataNode l */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1).val=531702847;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_l_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint l1_right0_x=1092575528;\n/* PointerStructureDataNode left */\nTreeNode* l1_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* l1_right0_right;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\l\\\\AKA_VECTOR_INIT_l_1\\\\l\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_l_1_DOT_right_0 = new ::TreeNode(l1_right0_x,l1_right0_left,l1_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).val=-1448903362;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_l_1_DOT_right_0).right;\nAKA_VECTOR_INIT_l_1_DOT_right.push_back(AKA_VECTOR_INIT_l_1_DOT_right_0);\n(*AKA_VECTOR_INIT_l_1).right = AKA_VECTOR_INIT_l_1_DOT_right[0];\n\nAKA_VECTOR_INIT_l.push_back(AKA_VECTOR_INIT_l_1);\n\nTreeNode* l = AKA_VECTOR_INIT_l[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r;\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0).val=-2050238295;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_0\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).val=-305877466;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0_DOT_left_0).right;\nAKA_VECTOR_INIT_r_0_DOT_left.push_back(AKA_VECTOR_INIT_r_0_DOT_left_0);\n(*AKA_VECTOR_INIT_r_0).left = AKA_VECTOR_INIT_r_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_0).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_0);\n\n\n/* SubStructDataNode r */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint r1_x=-1247765987;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1 = new ::TreeNode(r1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1).val=966849693;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_r_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\findLCA(TreeNode*,TreeNode*,TreeNode*)\\\\r\\\\AKA_VECTOR_INIT_r_1\\\\r\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_r_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).val=-2019637882;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1_DOT_left_0).right;\nAKA_VECTOR_INIT_r_1_DOT_left.push_back(AKA_VECTOR_INIT_r_1_DOT_left_0);\n(*AKA_VECTOR_INIT_r_1).left = AKA_VECTOR_INIT_r_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_r_1).right;\n\nAKA_VECTOR_INIT_r.push_back(AKA_VECTOR_INIT_r_1);\n\nTreeNode* r = AKA_VECTOR_INIT_r[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode l */\n/* PointerStructureDataNode r */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=933865545;\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p7\\\\0865-smallest-subtree-with-all-the-deepest-nodes\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0865-smallest-subtree-with-all-the-deepest-nodes.cpp\\\\subtreeWithAllDeepest(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nTreeNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1;\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root10_x=885533817;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0 = new ::TreeNode(root10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0).val=587683442;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_left0_x=731663198;\n/* PointerStructureDataNode left */\nTreeNode* root10_left0_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_left0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_left_0 = new ::TreeNode(root10_left0_x,root10_left0_left,root10_left0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).val=1636790273;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_left.push_back(AKA_VECTOR_INIT_root1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_0).left = AKA_VECTOR_INIT_root1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).val=1098583592;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[1]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).val=-1589258399;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root10_right2_x=1592833810;\n/* PointerStructureDataNode left */\nTreeNode* root10_right2_left;\n/* PointerStructureDataNode right */\nTreeNode* root10_right2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_0\\\\root1\\\\right\\\\right[2]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_0_DOT_right_2 = new ::TreeNode(root10_right2_x,root10_right2_left,root10_right2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).val=-118999126;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_0_DOT_right_2).right;\nAKA_VECTOR_INIT_root1_0_DOT_right.push_back(AKA_VECTOR_INIT_root1_0_DOT_right_2);\n(*AKA_VECTOR_INIT_root1_0).right = AKA_VECTOR_INIT_root1_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_0);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1).val=-477811552;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root11_left0_x=-220303069;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_1\\\\root1\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_1_DOT_left_0 = new ::TreeNode(root11_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).val=462211083;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root1_1_DOT_left.push_back(AKA_VECTOR_INIT_root1_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root1_1).left = AKA_VECTOR_INIT_root1_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_1).right;\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_1);\n\n\n/* SubStructDataNode root1 */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_x=-212463311;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2 = new ::TreeNode(root12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2).val=532627162;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root1_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root12_right0_x=954098702;\nAKA_mark(\"Calling: .\\\\p8\\\\0951-flip-equivalent-binary-trees\\\\0951-flip-equivalent-binary-trees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0951-flip-equivalent-binary-trees.cpp\\\\flipEquiv(TreeNode*,TreeNode*)\\\\root1\\\\AKA_VECTOR_INIT_root1_2\\\\root1\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root1_2_DOT_right_0 = new ::TreeNode(root12_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).val=2078772554;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root1_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root1_2_DOT_right.push_back(AKA_VECTOR_INIT_root1_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root1_2).right = AKA_VECTOR_INIT_root1_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root1.push_back(AKA_VECTOR_INIT_root1_2);\n\nTreeNode* root1 = AKA_VECTOR_INIT_root1[0];\nTreeNode* root2;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root1 */\n/* PointerStructureDataNode root2 */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=1009936824;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0_DOT_right_0).right;\nAKA_VECTOR_INIT_node_0_DOT_right.push_back(AKA_VECTOR_INIT_node_0_DOT_right_0);\n(*AKA_VECTOR_INIT_node_0).right = AKA_VECTOR_INIT_node_0_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=939944569;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\nstd::vector<TreeNode*> AKA_VECTOR_INIT_par;\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint par0_x=1885822145;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_0\\\\par\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_0 = new ::TreeNode(par0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_0).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_0);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint par1_x=0;\n/* PointerStructureDataNode left */\nTreeNode* par1_left;\n/* PointerStructureDataNode right */\nTreeNode* par1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_1\\\\par\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_par_1 = new ::TreeNode(par1_x,par1_left,par1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_1).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_1);\n\n\n/* SubStructDataNode par */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\dfs(TreeNode*,TreeNode*,int&,set<TreeNode*>&)\\\\par\\\\AKA_VECTOR_INIT_par_2\\\\par\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_par_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_par_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_par_2).right;\n\nAKA_VECTOR_INIT_par.push_back(AKA_VECTOR_INIT_par_2);\n\nTreeNode* par = AKA_VECTOR_INIT_par[0];\n\n\nint camCount=-818387996;\nset<TreeNode*> covered;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode par */\n/* NormalNumberDataNode camCount */\n/* SetDataNode covered */\nTreeNode* covered_element0;\ncovered.insert(covered_element0);\nTreeNode* covered_element1;\ncovered.insert(covered_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_x=-2040846061;\n/* PointerStructureDataNode left */\nTreeNode* root1_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x,root1_left,root1_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_x=-564371557;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root0_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_0).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_1).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root0_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root0_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root0_left_2).right;\nAKA_VECTOR_INIT_root0_left.push_back(AKA_VECTOR_INIT_root0_left_2);\nTreeNode* root0_left = AKA_VECTOR_INIT_root0_left[0];\n/* PointerStructureDataNode right */\nTreeNode* root0_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x,root0_left,root0_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p8\\\\0968-binary-tree-cameras\\\\0968-binary-tree-cameras.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0968-binary-tree-cameras.cpp\\\\minCameraCover(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1387172562;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=443716987;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root2_x=0;\n/* PointerStructureDataNode left */\nTreeNode* root2_left;\n/* PointerStructureDataNode right */\nTreeNode* root2_right;\nAKA_mark(\"Calling: .\\\\p8\\\\0979-distribute-coins-in-binary-tree\\\\0979-distribute-coins-in-binary-tree.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0979-distribute-coins-in-binary-tree.cpp\\\\distributeCoins(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x,root2_left,root2_right);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=106;\n\nchar dest=-16;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=true;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\nchar node1=-49;\n\nchar dest=52;\nunordered_map<char, vector<char>> adj;\nunordered_map<char, int> vis;\n\n\nbool flag=false;\n\n/* RootDataNode STATIC */\n/* NormalCharacterDataNode node1 */\n/* NormalCharacterDataNode dest */\n/* UnorderedMapDataNode adj */\n/* UnorderedMapDataNode vis */\n/* NormalNumberDataNode flag */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName4529 = new char[2];akaRandomName4529[0] = 47;akaRandomName4529[1] = '\\0';string equations_element0=akaRandomName4529;\nequations.push_back(equations_element0);\nchar* akaRandomName757652 = new char[2];akaRandomName757652[0] = -71;akaRandomName757652[1] = '\\0';string equations_element1=akaRandomName757652;\nequations.push_back(equations_element1);\nchar* akaRandomName821587 = new char[2];akaRandomName821587[0] = -35;akaRandomName821587[1] = '\\0';string equations_element2=akaRandomName821587;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n" ],   "m" : [ "void dfs(char node1, char dest, unordered_map<char, vector<char>> &adj, unordered_map<char, int> &vis, bool &flag) {\r\n        \r\n        if(flag == true)                            return;\r\n        \r\n        vis[node1] = 1;\r\n        \r\n        if(node1 == dest) {\r\n            flag = true;\r\n            return;\r\n        }\r\n        \r\n        for(auto &ch : adj[node1]) {\r\n            if(vis[ch] == 0) {\r\n                dfs(ch, dest, adj, vis, flag);\r\n            }\r\n        }\r\n        \r\n        return;\r\n    }" ],   "fc" : "class Solution {\r public:\r     \r     void dfs(char node1, char dest, unordered_map<char, vector<char>> &adj, unordered_map<char, int> &vis, bool &flag) {\r         \r         if(flag == true)                            return;\r         \r         vis[node1] = 1;\r         \r         if(node1 == dest) {\r             flag = true;\r             return;\r         }\r         \r         for(auto &ch : adj[node1]) {\r             if(vis[ch] == 0) {\r                 dfs(ch, dest, adj, vis, flag);\r             }\r         }\r         \r         return;\r     }\r     \r     bool equationsPossible(vector<string>& equations) {\r     \r         unordered_map<char, vector<char>> adj;\r         int n = equations.size();\r         \r         for(auto &x : equations) {\r             \r             string s = x;\r             \r             if(s[1] == '=') {\r                 adj[s[0]].push_back(s[3]);\r                 adj[s[3]].push_back(s[0]);\r             }\r         }\r         \r         for(auto &x : equations) {\r             \r             if(x[1] == '!') {\r                 \r                 char node1 = x[0];\r                 char node2 = x[3];\r                 \r                 // Check whether node1 and node2 are connected by any chance\r                 bool flag = false;\r                 unordered_map<char, int> vis;\r                 \r                 dfs(node1, node2, adj, vis, flag);\r                 vis.clear();\r                 \r                 if(flag == true)                        return false;\r             }\r         }\r         \r         return true;\r     }\r     \r };",   "fm" : "bool equationsPossible(vector<string>& equations) {\r     \r         unordered_map<char, vector<char>> adj;\r         int n = equations.size();\r         \r         for(auto &x : equations) {\r             \r             string s = x;\r             \r             if(s[1] == '=') {\r                 adj[s[0]].push_back(s[3]);\r                 adj[s[3]].push_back(s[0]);\r             }\r         }\r         \r         for(auto &x : equations) {\r             \r             if(x[1] == '!') {\r                 \r                 char node1 = x[0];\r                 char node2 = x[3];\r                 \r                 // Check whether node1 and node2 are connected by any chance\r                 bool flag = false;\r                 unordered_map<char, int> vis;\r                 \r                 dfs(node1, node2, adj, vis, flag);\r                 vis.clear();\r                 \r                 if(flag == true)                        return false;\r             }\r         }\r         \r         return true;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_equationsPossible_vector_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_equationsPossible_vector_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0990-satisfiability-of-equality-equations.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> equations;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode equations */\nchar* akaRandomName108171 = new char[2];akaRandomName108171[0] = 47;akaRandomName108171[1] = '\\0';string equations_element0=akaRandomName108171;\nequations.push_back(equations_element0);\nchar* akaRandomName728935 = new char[2];akaRandomName728935[0] = -71;akaRandomName728935[1] = '\\0';string equations_element1=akaRandomName728935;\nequations.push_back(equations_element1);\nchar* akaRandomName543761 = new char[2];akaRandomName543761[0] = -35;akaRandomName543761[1] = '\\0';string equations_element2=akaRandomName543761;\nequations.push_back(equations_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_equationsPossible_vector_string_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->equationsPossible(equations);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p8\\\\0990-satisfiability-of-equality-equations\\\\0990-satisfiability-of-equality-equations.cpp\\\\Solution\\\\equationsPossible(vector<string>&)\");\n\n\nvector<string> EXPECTED_equations;\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] }
]
