[
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p6\\0508-most-frequent-subtree-sum\\0508-most-frequent-subtree-sum.cpp\\Solution\\findSubtreeSum(TreeNode*,int&)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n" ],   "m" : [ "void findSubtreeSum(TreeNode* root, int &sum) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        sum += root->val;\r\n        \r\n        findSubtreeSum(root->left, sum);\r\n        findSubtreeSum(root->right, sum);\r\n        \r\n        return;\r\n    }", "void findSubtreeSum(TreeNode* root, int &sum) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        sum += root->val;\r\n        \r\n        findSubtreeSum(root->left, sum);\r\n        findSubtreeSum(root->right, sum);\r\n        \r\n        return;\r\n    }", "void dfs(TreeNode* root, unordered_map<int, int> &u) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        int sum = 0;\r\n        findSubtreeSum(root, sum);\r\n        \r\n        u[sum]++;\r\n        \r\n        dfs(root->left, u);\r\n        dfs(root->right, u);\r\n        \r\n        return;\r\n    }" ],   "fc" : "class Solution {\r public:\r     \r     void findSubtreeSum(TreeNode* root, int &sum) {\r         \r         if(root == NULL)                            return;\r         \r         sum += root->val;\r         \r         findSubtreeSum(root->left, sum);\r         findSubtreeSum(root->right, sum);\r         \r         return;\r     }\r     \r     void dfs(TreeNode* root, unordered_map<int, int> &u) {\r         \r         if(root == NULL)                            return;\r         \r         int sum = 0;\r         findSubtreeSum(root, sum);\r         \r         u[sum]++;\r         \r         dfs(root->left, u);\r         dfs(root->right, u);\r         \r         return;\r     }\r     \r     vector<int> findFrequentTreeSum(TreeNode* root) {\r     \r         vector<int> res;\r         \r         if(root == NULL)                            return res;\r         \r         // 1st arg - sum, 2nd arg - Freq\r         unordered_map<int, int> u;      \r         \r         // Find subtree sum at each node\r         dfs(root, u);\r         \r         int maxFreq = -1;\r         \r         // 1st arg - Freq, 2nd arg - vector of Sum\r         unordered_map<int, vector<int>> mp;\r         \r         for(auto &x : u) {\r             \r             if(maxFreq <= x.second) {\r                 maxFreq = x.second;\r                 mp[maxFreq].push_back(x.first);        \r             }\r         }\r         \r         res = mp[maxFreq];\r         return res;\r     }\r     \r };",   "fm" : "void findSubtreeSum(TreeNode* root, int &sum) {\r         \r         if(root == NULL)                            return;\r         \r         sum += root->val;\r         \r         findSubtreeSum(root->left, sum);\r         findSubtreeSum(root->right, sum);\r         \r         return;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_findSubtreeSum_TreeNodemul_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_findSubtreeSum_TreeNodemul_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findSubtreeSum_TreeNodemul_int_random_0\");AKA_INSTANCE___Solution->findSubtreeSum(root,sum);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\Solution\\\\findSubtreeSum(TreeNode*,int&)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p6\\0508-most-frequent-subtree-sum\\0508-most-frequent-subtree-sum.cpp\\Solution\\dfs(TreeNode*,unordered_map<int,int>&)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n" ],   "m" : [ "void findSubtreeSum(TreeNode* root, int &sum) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        sum += root->val;\r\n        \r\n        findSubtreeSum(root->left, sum);\r\n        findSubtreeSum(root->right, sum);\r\n        \r\n        return;\r\n    }", "void dfs(TreeNode* root, unordered_map<int, int> &u) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        int sum = 0;\r\n        findSubtreeSum(root, sum);\r\n        \r\n        u[sum]++;\r\n        \r\n        dfs(root->left, u);\r\n        dfs(root->right, u);\r\n        \r\n        return;\r\n    }", "void dfs(TreeNode* root, unordered_map<int, int> &u) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        int sum = 0;\r\n        findSubtreeSum(root, sum);\r\n        \r\n        u[sum]++;\r\n        \r\n        dfs(root->left, u);\r\n        dfs(root->right, u);\r\n        \r\n        return;\r\n    }", "vector<int> findFrequentTreeSum(TreeNode* root) {\r\n    \r\n        vector<int> res;\r\n        \r\n        if(root == NULL)                            return res;\r\n        \r\n        // 1st arg - sum, 2nd arg - Freq\r\n        unordered_map<int, int> u;      \r\n        \r\n        // Find subtree sum at each node\r\n        dfs(root, u);\r\n        \r\n        int maxFreq = -1;\r\n        \r\n        // 1st arg - Freq, 2nd arg - vector of Sum\r\n        unordered_map<int, vector<int>> mp;\r\n        \r\n        for(auto &x : u) {\r\n            \r\n            if(maxFreq <= x.second) {\r\n                maxFreq = x.second;\r\n                mp[maxFreq].push_back(x.first);        \r\n            }\r\n        }\r\n        \r\n        res = mp[maxFreq];\r\n        return res;\r\n    }" ],   "fc" : "class Solution {\r public:\r     \r     void findSubtreeSum(TreeNode* root, int &sum) {\r         \r         if(root == NULL)                            return;\r         \r         sum += root->val;\r         \r         findSubtreeSum(root->left, sum);\r         findSubtreeSum(root->right, sum);\r         \r         return;\r     }\r     \r     void dfs(TreeNode* root, unordered_map<int, int> &u) {\r         \r         if(root == NULL)                            return;\r         \r         int sum = 0;\r         findSubtreeSum(root, sum);\r         \r         u[sum]++;\r         \r         dfs(root->left, u);\r         dfs(root->right, u);\r         \r         return;\r     }\r     \r     vector<int> findFrequentTreeSum(TreeNode* root) {\r     \r         vector<int> res;\r         \r         if(root == NULL)                            return res;\r         \r         // 1st arg - sum, 2nd arg - Freq\r         unordered_map<int, int> u;      \r         \r         // Find subtree sum at each node\r         dfs(root, u);\r         \r         int maxFreq = -1;\r         \r         // 1st arg - Freq, 2nd arg - vector of Sum\r         unordered_map<int, vector<int>> mp;\r         \r         for(auto &x : u) {\r             \r             if(maxFreq <= x.second) {\r                 maxFreq = x.second;\r                 mp[maxFreq].push_back(x.first);        \r             }\r         }\r         \r         res = mp[maxFreq];\r         return res;\r     }\r     \r };",   "fm" : "void dfs(TreeNode* root, unordered_map<int, int> &u) {\r         \r         if(root == NULL)                            return;\r         \r         int sum = 0;\r         findSubtreeSum(root, sum);\r         \r         u[sum]++;\r         \r         dfs(root->left, u);\r         dfs(root->right, u);\r         \r         return;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_dfs_TreeNodemul_unordered_map_int_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_dfs_TreeNodemul_unordered_map_int_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_TreeNodemul_unordered_map_int_int_random_3\");AKA_INSTANCE___Solution->dfs(root,u);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\Solution\\\\dfs(TreeNode*,unordered_map<int,int>&)\");\n\n/* error assertion */\nunordered_map<int, int> EXPECTED_u;\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p6\\0508-most-frequent-subtree-sum\\0508-most-frequent-subtree-sum.cpp\\Solution\\findFrequentTreeSum(TreeNode*)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n" ],   "m" : [ "void dfs(TreeNode* root, unordered_map<int, int> &u) {\r\n        \r\n        if(root == NULL)                            return;\r\n        \r\n        int sum = 0;\r\n        findSubtreeSum(root, sum);\r\n        \r\n        u[sum]++;\r\n        \r\n        dfs(root->left, u);\r\n        dfs(root->right, u);\r\n        \r\n        return;\r\n    }" ],   "fc" : "class Solution {\r public:\r     \r     void findSubtreeSum(TreeNode* root, int &sum) {\r         \r         if(root == NULL)                            return;\r         \r         sum += root->val;\r         \r         findSubtreeSum(root->left, sum);\r         findSubtreeSum(root->right, sum);\r         \r         return;\r     }\r     \r     void dfs(TreeNode* root, unordered_map<int, int> &u) {\r         \r         if(root == NULL)                            return;\r         \r         int sum = 0;\r         findSubtreeSum(root, sum);\r         \r         u[sum]++;\r         \r         dfs(root->left, u);\r         dfs(root->right, u);\r         \r         return;\r     }\r     \r     vector<int> findFrequentTreeSum(TreeNode* root) {\r     \r         vector<int> res;\r         \r         if(root == NULL)                            return res;\r         \r         // 1st arg - sum, 2nd arg - Freq\r         unordered_map<int, int> u;      \r         \r         // Find subtree sum at each node\r         dfs(root, u);\r         \r         int maxFreq = -1;\r         \r         // 1st arg - Freq, 2nd arg - vector of Sum\r         unordered_map<int, vector<int>> mp;\r         \r         for(auto &x : u) {\r             \r             if(maxFreq <= x.second) {\r                 maxFreq = x.second;\r                 mp[maxFreq].push_back(x.first);        \r             }\r         }\r         \r         res = mp[maxFreq];\r         return res;\r     }\r     \r };",   "fm" : "vector<int> findFrequentTreeSum(TreeNode* root) {\r     \r         vector<int> res;\r         \r         if(root == NULL)                            return res;\r         \r         // 1st arg - sum, 2nd arg - Freq\r         unordered_map<int, int> u;      \r         \r         // Find subtree sum at each node\r         dfs(root, u);\r         \r         int maxFreq = -1;\r         \r         // 1st arg - Freq, 2nd arg - vector of Sum\r         unordered_map<int, vector<int>> mp;\r         \r         for(auto &x : u) {\r             \r             if(maxFreq <= x.second) {\r                 maxFreq = x.second;\r                 mp[maxFreq].push_back(x.first);        \r             }\r         }\r         \r         res = mp[maxFreq];\r         return res;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_findFrequentTreeSum_TreeNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_findFrequentTreeSum_TreeNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findFrequentTreeSum_TreeNodemul_random_0\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findFrequentTreeSum(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\Solution\\\\findFrequentTreeSum(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p6\\0509-fibonacci-number\\0509-fibonacci-number.cpp\\Solution\\fib(int)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n" ],   "m" : [ ],   "fc" : "class Solution {\r public:\r     \r     int fib(int n) {\r     \r         vector<int> dp(n + 1, 0);\r         \r         if(n <= 1)                                  return n;\r         \r         dp[0] = 0;\r         dp[1] = 1;\r         \r         for(int i=2; i<=n; i++)                     dp[i] = dp[i-1] + dp[i-2];\r         \r         return dp[n];\r     }\r     \r };",   "fm" : "int fib(int n) {\r     \r         vector<int> dp(n + 1, 0);\r         \r         if(n <= 1)                                  return n;\r         \r         dp[0] = 0;\r         dp[1] = 1;\r         \r         for(int i=2; i<=n; i++)                     dp[i] = dp[i-1] + dp[i-2];\r         \r         return dp[n];\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_fib_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_fib_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_fib_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->fib(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p6\\\\0509-fibonacci-number\\\\0509-fibonacci-number.cpp\\\\Solution\\\\fib(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p6\\0623-add-one-row-to-tree\\0623-add-one-row-to-tree.cpp\\Solution\\insert(TreeNode*&,int,int,int)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n" ],   "m" : [ "void insert(TreeNode* &node, int val, int d, int curDepth) {\r\n        \r\n        if(node == NULL)                        return;\r\n        \r\n        if(curDepth == d - 1) {\r\n            \r\n            // Here, we need to insert the node having value val\r\n            \r\n            // For left node\r\n            TreeNode* temp = node->left;\r\n            node->left = new TreeNode(val);\r\n            node->left->left = temp;\r\n            \r\n            // For right node\r\n            temp = node->right;\r\n            node->right = new TreeNode(val);\r\n            node->right->right = temp;\r\n        }\r\n        \r\n        else {\r\n            \r\n            insert(node->left, val, d, curDepth + 1);\r\n            insert(node->right, val, d, curDepth + 1);\r\n        }\r\n        \r\n        return;\r\n    }", "void insert(TreeNode* &node, int val, int d, int curDepth) {\r\n        \r\n        if(node == NULL)                        return;\r\n        \r\n        if(curDepth == d - 1) {\r\n            \r\n            // Here, we need to insert the node having value val\r\n            \r\n            // For left node\r\n            TreeNode* temp = node->left;\r\n            node->left = new TreeNode(val);\r\n            node->left->left = temp;\r\n            \r\n            // For right node\r\n            temp = node->right;\r\n            node->right = new TreeNode(val);\r\n            node->right->right = temp;\r\n        }\r\n        \r\n        else {\r\n            \r\n            insert(node->left, val, d, curDepth + 1);\r\n            insert(node->right, val, d, curDepth + 1);\r\n        }\r\n        \r\n        return;\r\n    }", "TreeNode* addOneRow(TreeNode* root, int val, int d) {\r\n    \r\n        if(d == 1) {\r\n            \r\n            TreeNode* node = new TreeNode(val);\r\n            node->left = root;\r\n            \r\n            return node;\r\n        }\r\n        \r\n        insert(root, val, d, 1);\r\n        return root;\r\n    }" ],   "fc" : "class Solution {\r public:\r     \r     void insert(TreeNode* &node, int val, int d, int curDepth) {\r         \r         if(node == NULL)                        return;\r         \r         if(curDepth == d - 1) {\r             \r             // Here, we need to insert the node having value val\r             \r             // For left node\r             TreeNode* temp = node->left;\r             node->left = new TreeNode(val);\r             node->left->left = temp;\r             \r             // For right node\r             temp = node->right;\r             node->right = new TreeNode(val);\r             node->right->right = temp;\r         }\r         \r         else {\r             \r             insert(node->left, val, d, curDepth + 1);\r             insert(node->right, val, d, curDepth + 1);\r         }\r         \r         return;\r     }\r     \r     TreeNode* addOneRow(TreeNode* root, int val, int d) {\r     \r         if(d == 1) {\r             \r             TreeNode* node = new TreeNode(val);\r             node->left = root;\r             \r             return node;\r         }\r         \r         insert(root, val, d, 1);\r         return root;\r     }\r     \r };",   "fm" : "void insert(TreeNode* &node, int val, int d, int curDepth) {\r         \r         if(node == NULL)                        return;\r         \r         if(curDepth == d - 1) {\r             \r             // Here, we need to insert the node having value val\r             \r             // For left node\r             TreeNode* temp = node->left;\r             node->left = new TreeNode(val);\r             node->left->left = temp;\r             \r             // For right node\r             temp = node->right;\r             node->right = new TreeNode(val);\r             node->right->right = temp;\r         }\r         \r         else {\r             \r             insert(node->left, val, d, curDepth + 1);\r             insert(node->right, val, d, curDepth + 1);\r         }\r         \r         return;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_insert_TreeNodemul_int_int_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_insert_TreeNodemul_int_int_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_insert_TreeNodemul_int_int_int_random_2\");AKA_INSTANCE___Solution->insert(node,val,d,curDepth);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\Solution\\\\insert(TreeNode*&,int,int,int)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p6\\0652-find-duplicate-subtrees\\0652-find-duplicate-subtrees.cpp\\Solution\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n" ],   "m" : [ "string solve(TreeNode* root, vector<TreeNode*> &res, unordered_map<string, int> &u) {\r\n        \r\n        if(root == NULL)                        return \"#\";\r\n        \r\n        // postorder = left -> right -> root\r\n        string s = solve(root->left, res, u) + \",\" + solve(root->right, res, u) + \",\" + to_string(root->val);\r\n        \r\n        u[s]++;\r\n        \r\n        if(u[s] == 2)                           res.push_back(root);\r\n        return s;\r\n    }", "string solve(TreeNode* root, vector<TreeNode*> &res, unordered_map<string, int> &u) {\r\n        \r\n        if(root == NULL)                        return \"#\";\r\n        \r\n        // postorder = left -> right -> root\r\n        string s = solve(root->left, res, u) + \",\" + solve(root->right, res, u) + \",\" + to_string(root->val);\r\n        \r\n        u[s]++;\r\n        \r\n        if(u[s] == 2)                           res.push_back(root);\r\n        return s;\r\n    }", "vector<TreeNode*> findDuplicateSubtrees(TreeNode* root) {\r\n    \r\n        vector<TreeNode*> res;\r\n        \r\n        if(root == NULL)                        return res;\r\n        \r\n        unordered_map<string, int> u;\r\n        \r\n        solve(root, res, u);\r\n        return res;\r\n    }" ],   "fc" : "class Solution {\r public:\r \r     string solve(TreeNode* root, vector<TreeNode*> &res, unordered_map<string, int> &u) {\r         \r         if(root == NULL)                        return \"#\";\r         \r         // postorder = left -> right -> root\r         string s = solve(root->left, res, u) + \",\" + solve(root->right, res, u) + \",\" + to_string(root->val);\r         \r         u[s]++;\r         \r         if(u[s] == 2)                           res.push_back(root);\r         return s;\r     }\r     \r     vector<TreeNode*> findDuplicateSubtrees(TreeNode* root) {\r     \r         vector<TreeNode*> res;\r         \r         if(root == NULL)                        return res;\r         \r         unordered_map<string, int> u;\r         \r         solve(root, res, u);\r         return res;\r     }\r     \r };",   "fm" : "string solve(TreeNode* root, vector<TreeNode*> &res, unordered_map<string, int> &u) {\r         \r         if(root == NULL)                        return \"#\";\r         \r         // postorder = left -> right -> root\r         string s = solve(root->left, res, u) + \",\" + solve(root->right, res, u) + \",\" + to_string(root->val);\r         \r         u[s]++;\r         \r         if(u[s] == 2)                           res.push_back(root);\r         return s;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_solve_TreeNodemul_vector_TreeNodemul_unordered_map_string_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_solve_TreeNodemul_vector_TreeNodemul_unordered_map_string_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_solve_TreeNodemul_vector_TreeNodemul_unordered_map_string_int_random_2\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->solve(root,res,u);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\Solution\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\");\n\n\n\nvector<TreeNode*> EXPECTED_res;\n\nunordered_map<string, int> EXPECTED_u;\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] },
  {   "path_fm" : "D:\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p6\\0652-find-duplicate-subtrees\\0652-find-duplicate-subtrees.cpp\\Solution\\findDuplicateSubtrees(TreeNode*)",   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-288354785;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-1144135647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-47163674;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=1262174309;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1387906261;\n/* PointerStructureDataNode left */\nTreeNode* root0_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* root0_right0_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x,root0_right0_left,root0_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=1695951299;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=796809868;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1323352447;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-2093076576;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-863764711;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint root1_left2_x=2006437814;\n/* PointerStructureDataNode left */\nTreeNode* root1_left2_left;\n/* PointerStructureDataNode right */\nTreeNode* root1_left2_right;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findSubtreeSum(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x,root1_left2_left,root1_left2_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=1302470353;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint sum=2116703769;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode sum */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1150499989;\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\dfs(TreeNode*,unordered_map<int,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nunordered_map<int, int> u;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* UnorderedMapDataNode u */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0508-most-frequent-subtree-sum\\\\0508-most-frequent-subtree-sum.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0508-most-frequent-subtree-sum.cpp\\\\findFrequentTreeSum(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0509-fibonacci-number.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=5;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-1075844604;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_0).right;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-19749079;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_node_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right0_x=1016138795;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_0 = new ::TreeNode(node1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).val=-1827561870;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_0).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint node1_right1_x=-1568764357;\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_1 = new ::TreeNode(node1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).val=782732414;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_1).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_1);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0623-add-one-row-to-tree\\\\0623-add-one-row-to-tree.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0623-add-one-row-to-tree.cpp\\\\insert(TreeNode*&,int,int,int)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\right\\\\right[2]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_right_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).val=936166737;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_node_1_DOT_right_2).right;\nAKA_VECTOR_INIT_node_1_DOT_right.push_back(AKA_VECTOR_INIT_node_1_DOT_right_2);\n(*AKA_VECTOR_INIT_node_1).right = AKA_VECTOR_INIT_node_1_DOT_right[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nTreeNode* node = AKA_VECTOR_INIT_node[0];\n\n\nint val=1058901345;\n\n\nint d=1198943757;\n\n\nint curDepth=-680080099;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* NormalNumberDataNode val */\n/* NormalNumberDataNode d */\n/* NormalNumberDataNode curDepth */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=2036917133;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-2101501784;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=491946562;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1681991988;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-396100568;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1431026732;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-118069674;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> res;\nunordered_map<string, int> u;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode res */\nTreeNode* res_element0;\nres.push_back(res_element0);\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1;\n/* SubStructDataNode  */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint res_element10_x=1467952571;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0 = new ::TreeNode(res_element10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0).val=-796325320;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).val=1631325483;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_left_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_left.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_left_0);\n(*AKA_VECTOR_INIT_res_element1_0).left = AKA_VECTOR_INIT_res_element1_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_res_element1_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right0_x=-35961771;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right0_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right0_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[0]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_0 = new ::TreeNode(res_element10_right0_x,res_element10_right0_left,res_element10_right0_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).val=872643921;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_0).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int,TreeNode*,TreeNode*) */\n/* NormalNumberDataNode x */\nint res_element10_right1_x=62427095;\n/* PointerStructureDataNode left */\nTreeNode* res_element10_right1_left;\n/* PointerStructureDataNode right */\nTreeNode* res_element10_right1_right;\nAKA_mark(\"Calling: D:\\\\Projects\\\\AKAUT\\\\prj-data\\\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int,TreeNode*,TreeNode*)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\solve(TreeNode*,vector<TreeNode*>&,unordered_map<string,int>&)\\\\res\\\\element #1\\\\element #1[0]\\\\right\\\\right[1]\\\\right\\\\TreeNode(int,TreeNode*,TreeNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_res_element1_0_DOT_right_1 = new ::TreeNode(res_element10_right1_x,res_element10_right1_left,res_element10_right1_right);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).val=264860796;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_res_element1_0_DOT_right_1).right;\nAKA_VECTOR_INIT_res_element1_0_DOT_right.push_back(AKA_VECTOR_INIT_res_element1_0_DOT_right_1);\n(*AKA_VECTOR_INIT_res_element1_0).right = AKA_VECTOR_INIT_res_element1_0_DOT_right[0];\nAKA_VECTOR_INIT_res_element1.push_back(AKA_VECTOR_INIT_res_element1_0);\nTreeNode* res_element1 = AKA_VECTOR_INIT_res_element1[0];\nres.push_back(res_element1);\n/* UnorderedMapDataNode u */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n" ],   "m" : [ "string solve(TreeNode* root, vector<TreeNode*> &res, unordered_map<string, int> &u) {\r\n        \r\n        if(root == NULL)                        return \"#\";\r\n        \r\n        // postorder = left -> right -> root\r\n        string s = solve(root->left, res, u) + \",\" + solve(root->right, res, u) + \",\" + to_string(root->val);\r\n        \r\n        u[s]++;\r\n        \r\n        if(u[s] == 2)                           res.push_back(root);\r\n        return s;\r\n    }" ],   "fc" : "class Solution {\r public:\r \r     string solve(TreeNode* root, vector<TreeNode*> &res, unordered_map<string, int> &u) {\r         \r         if(root == NULL)                        return \"#\";\r         \r         // postorder = left -> right -> root\r         string s = solve(root->left, res, u) + \",\" + solve(root->right, res, u) + \",\" + to_string(root->val);\r         \r         u[s]++;\r         \r         if(u[s] == 2)                           res.push_back(root);\r         return s;\r     }\r     \r     vector<TreeNode*> findDuplicateSubtrees(TreeNode* root) {\r     \r         vector<TreeNode*> res;\r         \r         if(root == NULL)                        return res;\r         \r         unordered_map<string, int> u;\r         \r         solve(root, res, u);\r         return res;\r     }\r     \r };",   "fm" : "vector<TreeNode*> findDuplicateSubtrees(TreeNode* root) {\r     \r         vector<TreeNode*> res;\r         \r         if(root == NULL)                        return res;\r         \r         unordered_map<string, int> u;\r         \r         solve(root, res, u);\r         return res;\r     }",   "f" : [ ],   "t" : [ "void AKA_TEST_Solution_findDuplicateSubtrees_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicateSubtrees_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1628054801;\nAKA_mark(\"Calling: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\findDuplicateSubtrees(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicateSubtrees_TreeNodemul_random_2\");vector<TreeNode*> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicateSubtrees(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\Solution\\\\findDuplicateSubtrees(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_findDuplicateSubtrees_TreeNodemul_random_1(void) {\n{\nAKA_test_case_name=\"Solution_findDuplicateSubtrees_TreeNodemul_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\0652-find-duplicate-subtrees.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<TreeNode*> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findDuplicateSubtrees_TreeNodemul_random_1\");vector<TreeNode*> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findDuplicateSubtrees(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p6\\\\0652-find-duplicate-subtrees\\\\0652-find-duplicate-subtrees.cpp\\\\Solution\\\\findDuplicateSubtrees(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "c" : [ "" ] }
]
