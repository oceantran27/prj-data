<pre>...
...
...
...
<b style="color: grey;">29    </b>     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
<b style="color: grey;">30    </b> };
<b style="color: grey;">31    </b>
<b style="color: grey;">32    </b>class Solution {
<b style="color: grey;">33    </b>public:
<b style="color: grey;">34    </b>    
<b style="color: grey;">35    </b>    void findSubtreeSum(TreeNode* root, int &amp;sum) {
<b style="color: grey;">36    </b>        
<b style="color: grey;">37    </b>        if(<b style="background-color:yellow;color:black";>root == NULL</b>)                            <b style="background-color:yellow;color:black";>return;</b>
<b style="color: grey;">38    </b>        
<b style="color: grey;">39    </b>        <b style="background-color:yellow;color:black";>sum += root-&gt;val;</b>
<b style="color: grey;">40    </b>        
<b style="color: grey;">41    </b>        <b style="background-color:yellow;color:black";>findSubtreeSum(root-&gt;left, sum);</b>
<b style="color: grey;">42    </b>        <b style="background-color:yellow;color:black";>findSubtreeSum(root-&gt;right, sum);</b>
<b style="color: grey;">43    </b>        
<b style="color: grey;">44    </b>        <b style="background-color:yellow;color:black";>return;</b>
<b style="color: grey;">45    </b>    }
<b style="color: grey;">46    </b>    
<b style="color: grey;">47    </b>    void dfs(TreeNode* root, unordered_map&lt;int, int&gt; &amp;u) {
<b style="color: grey;">48    </b>        
<b style="color: grey;">49    </b>        if(root == NULL)                            return;
<b style="color: grey;">50    </b>        
<b style="color: grey;">51    </b>        int sum = 0;
...
...
...
...
</pre>