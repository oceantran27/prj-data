<pre>...
...
...
...
<b style="color: grey;">42    </b>        u[s]++;
<b style="color: grey;">43    </b>        
<b style="color: grey;">44    </b>        if(u[s] == 2)                           res.push_back(root);
<b style="color: grey;">45    </b>        return s;
<b style="color: grey;">46    </b>    }
<b style="color: grey;">47    </b>    
<b style="color: grey;">48    </b>    vector&lt;TreeNode*&gt; findDuplicateSubtrees(TreeNode* root) {
<b style="color: grey;">49    </b>    
<b style="color: grey;">50    </b>        <b style="background-color:yellow;color:black";>vector&lt;TreeNode*&gt; res;</b>
<b style="color: grey;">51    </b>        
<b style="color: grey;">52    </b>        if(<b style="background-color:yellow;color:black";>root == NULL</b>)                        <b style="background-color:yellow;color:black";>return res;</b>
<b style="color: grey;">53    </b>        
<b style="color: grey;">54    </b>        unordered_map&lt;string, int&gt; u;
<b style="color: grey;">55    </b>        
<b style="color: grey;">56    </b>        solve(root, res, u);
<b style="color: grey;">57    </b>        return res;
<b style="color: grey;">58    </b>    }
<b style="color: grey;">59    </b>    
...
...
...
...
</pre>