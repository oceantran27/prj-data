<pre>...
...
...
...
<b style="color: grey;">33    </b>public:
<b style="color: grey;">34    </b>    
<b style="color: grey;">35    </b>    // Checks whether the subtree contains 1 or not
<b style="color: grey;">36    </b>    // Return true if it contains 1, else return false
<b style="color: grey;">37    </b>    
<b style="color: grey;">38    </b>    // If it does not contain 1. then delete that node
<b style="color: grey;">39    </b>    bool pruneHelper(TreeNode* &amp;root) {
<b style="color: grey;">40    </b>        
<b style="color: grey;">41    </b>        if(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>root == NULL</b>)                                <b style="background-color:yellow;color:black";>return false;</b>
<b style="color: grey;">42    </b>        
<b style="color: grey;">43    </b>        // Check if any node in the left and right subtree contains a 1.
<b style="color: grey;">44    </b>        <b style="background-color:yellow;color:black";>bool leftPruneTree = pruneHelper(root-&gt;left);</b>
<b style="color: grey;">45    </b>        <b style="background-color:yellow;color:black";>bool rightPruneTree = pruneHelper(root-&gt;right);</b>
<b style="color: grey;">46    </b>        
<b style="color: grey;">47    </b>        // If the left subtree does not contain a 1, prune the subtree.
<b style="color: grey;">48    </b>        if(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>leftPruneTree == false</b>)                       <b style="background-color:yellow;color:black";>root-&gt;left = NULL;</b>
<b style="color: grey;">49    </b>        
<b style="color: grey;">50    </b>        // If the right subtree does not contain a 1, prune the subtree.
<b style="color: grey;">51    </b>        if(<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>rightPruneTree == false</b>)                      <b style="background-color:yellow;color:black";>root-&gt;right = NULL;</b>
<b style="color: grey;">52    </b>        
<b style="color: grey;">53    </b>        <b style="background-color:yellow;color:black";>return (root-&gt;val == 1) || leftPruneTree || rightPruneTree;</b>
<b style="color: grey;">54    </b>    }
<b style="color: grey;">55    </b>    
<b style="color: grey;">56    </b>    TreeNode* pruneTree(TreeNode* root) {
<b style="color: grey;">57    </b>        
<b style="color: grey;">58    </b>        if(root == NULL)                        return root;
<b style="color: grey;">59    </b>        
<b style="color: grey;">60    </b>        bool flag = pruneHelper(root);
...
...
...
...
</pre>