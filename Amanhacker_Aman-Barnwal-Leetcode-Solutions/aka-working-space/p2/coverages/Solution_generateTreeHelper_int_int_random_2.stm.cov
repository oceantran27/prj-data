<pre>...
...
...
...
<b style="color: grey;">29    </b>     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
<b style="color: grey;">30    </b> };
<b style="color: grey;">31    </b>
<b style="color: grey;">32    </b>class Solution {
<b style="color: grey;">33    </b>public:
<b style="color: grey;">34    </b>    
<b style="color: grey;">35    </b>    vector&lt;TreeNode*&gt; generateTreeHelper(int start, int end) {
<b style="color: grey;">36    </b>        
<b style="color: grey;">37    </b>        <b style="background-color:yellow;color:black";>vector&lt;TreeNode*&gt; res;</b>
<b style="color: grey;">38    </b>        
<b style="color: grey;">39    </b>        if(<b style="background-color:yellow;color:black";>start &gt; end</b>) {
<b style="color: grey;">40    </b>            
<b style="color: grey;">41    </b>            <b style="background-color:yellow;color:black";>TreeNode* node = NULL;</b>
<b style="color: grey;">42    </b>            <b style="background-color:yellow;color:black";>res.push_back(node);</b>
<b style="color: grey;">43    </b>            
<b style="color: grey;">44    </b>            <b style="background-color:yellow;color:black";>return res;</b>
<b style="color: grey;">45    </b>        }                                     
<b style="color: grey;">46    </b>        
<b style="color: grey;">47    </b>        if(start == end) {
<b style="color: grey;">48    </b>            
<b style="color: grey;">49    </b>            TreeNode* node = new TreeNode(start);
<b style="color: grey;">50    </b>            res.push_back(node);
<b style="color: grey;">51    </b>            
...
...
...
...
</pre>