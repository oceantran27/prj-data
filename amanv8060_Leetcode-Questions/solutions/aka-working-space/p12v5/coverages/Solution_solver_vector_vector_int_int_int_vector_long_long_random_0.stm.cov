<pre>...
...
...
...
<b style="color: grey;">6     </b>#include &lt;unordered_map&gt;
<b style="color: grey;">7     </b>#include &lt;algorithm&gt;
<b style="color: grey;">8     </b>#include &lt;bits/stdc++.h&gt;
<b style="color: grey;">9     </b>using namespace std;
<b style="color: grey;">10     </b>class Solution {
<b style="color: grey;">11    </b> public:
<b style="color: grey;">12    </b>  long long solver(vector&lt;vector&lt;int&gt;&gt;&amp; rides, int i, int n,
<b style="color: grey;">13    </b>                   vector&lt;long long&gt;&amp; dp) {
<b style="color: grey;">14    </b>    if (<b style="background-color:yellow;color:black";>i == n</b>) return 0;
<b style="color: grey;">15    </b>
<b style="color: grey;">16    </b>    <b style="background-color:yellow;color:black";>long long ans = 0;</b>
<b style="color: grey;">17    </b>    if (<b style="background-color:yellow;color:black";>dp[i] != -1</b>) return dp[i];
<b style="color: grey;">18    </b>
<b style="color: grey;">19    </b>    ans = max(ans, solver(rides, i + 1, n, dp));
<b style="color: grey;">20    </b>
<b style="color: grey;">21    </b>    int j = lower_bound(rides.begin() + i + 1, rides.end(), rides[i][1],
<b style="color: grey;">22    </b>                        [](const vector&lt;int&gt;&amp; a, const int val) {
<b style="color: grey;">23    </b>                          return a[0] &lt; val;
<b style="color: grey;">24    </b>                        }) -
...
...
...
...
</pre>