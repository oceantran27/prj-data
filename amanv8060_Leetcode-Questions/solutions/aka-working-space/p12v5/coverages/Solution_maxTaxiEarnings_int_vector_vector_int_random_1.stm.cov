<pre>...
...
...
...
<b style="color: grey;">6     </b>#include &lt;unordered_map&gt;
<b style="color: grey;">7     </b>#include &lt;algorithm&gt;
<b style="color: grey;">8     </b>#include &lt;bits/stdc++.h&gt;
<b style="color: grey;">9     </b>using namespace std;
<b style="color: grey;">10     </b>class Solution {
<b style="color: grey;">11    </b> public:
<b style="color: grey;">12    </b>  long long solver(vector&lt;vector&lt;int&gt;&gt;&amp; rides, int i, int n,
<b style="color: grey;">13    </b>                   vector&lt;long long&gt;&amp; dp) {
<b style="color: grey;">14    </b>    if (<b style="background-color:yellow;color:black";>i == n</b>) <b style="background-color:yellow;color:black";>return 0;</b>
<b style="color: grey;">15    </b>
<b style="color: grey;">16    </b>    <b style="background-color:yellow;color:black";>long long ans = 0;</b>
<b style="color: grey;">17    </b>    if (<b style="background-color:yellow;color:black";>dp[i] != -1</b>) <b style="background-color:yellow;color:black";>return dp[i];</b>
<b style="color: grey;">18    </b>
<b style="color: grey;">19    </b>    <b style="background-color:yellow;color:black";>ans = max(ans, solver(rides, i + 1, n, dp));</b>
<b style="color: grey;">20    </b>
<b style="color: grey;">21    </b>    <b style="background-color:yellow;color:black";>int j = lower_bound(rides.begin() + i + 1, rides.end(), rides[i][1],
<b style="color: grey;">22    </b>                        [](const vector&lt;int&gt;&amp; a, const int val) {
<b style="color: grey;">23    </b>                          return a[0] &lt; val;
<b style="color: grey;">24    </b>                        }) -
<b style="color: grey;">25    </b>            rides.begin();</b>
<b style="color: grey;">26    </b>
<b style="color: grey;">27    </b>    <b style="background-color:yellow;color:black";>ans = max(ans, solver(rides, j, n, dp) +
<b style="color: grey;">28    </b>                       ((long long)rides[i][2] + rides[i][1] - rides[i][0]));</b>
<b style="color: grey;">29    </b>
<b style="color: grey;">30    </b>    <b style="background-color:yellow;color:black";>return dp[i] = ans;</b>
<b style="color: grey;">31    </b>  }
<b style="color: grey;">32    </b>  long long maxTaxiEarnings(int n, vector&lt;vector&lt;int&gt;&gt;&amp; rides) {
<b style="color: grey;">33    </b>    <b style="background-color:yellow;color:black";>int l = rides.size();</b>
<b style="color: grey;">34    </b>    <b style="background-color:yellow;color:black";>sort(
<b style="color: grey;">35    </b>        rides.begin(), rides.end(),
<b style="color: grey;">36    </b>        [](const vector&lt;int&gt;&amp; a, const vector&lt;int&gt;&amp; b) { return a[0] &lt; b[0]; });</b>
<b style="color: grey;">37    </b>
<b style="color: grey;">38    </b>    <b style="background-color:yellow;color:black";>vector&lt;long long&gt; dp(l + 1, -1);</b>
<b style="color: grey;">39    </b>
<b style="color: grey;">40    </b>    <b style="background-color:yellow;color:black";>return solver(rides, 0, l, dp);</b>
<b style="color: grey;">41    </b>  }
...
...
...
...
</pre>