<pre>...
...
...
...
<b style="color: grey;">8     </b>  TreeNode* left;
<b style="color: grey;">9     </b>  TreeNode* right;
<b style="color: grey;">10     </b>  TreeNode(int x) : val(x), left(NULL), right(NULL) {}
<b style="color: grey;">11    </b>};
<b style="color: grey;">12    </b>
<b style="color: grey;">13    </b>class Solution {
<b style="color: grey;">14    </b> public:
<b style="color: grey;">15    </b>  bool hasPathSum(TreeNode* root, int targetSum) {
<b style="color: grey;">16    </b>    if (<b style="background-color:yellow;color:black";>root == NULL</b>) {
<b style="color: grey;">17    </b>      <b style="background-color:yellow;color:black";>return false;</b>
<b style="color: grey;">18    </b>    }
<b style="color: grey;">19    </b>    if (<b style="background-color:yellow;color:black";>root-&gt;val == targetSum &amp;&amp; root-&gt;right == NULL &amp;&amp; root-&gt;left == NULL</b>) {
<b style="color: grey;">20    </b>      return true;
<b style="color: grey;">21    </b>    }
<b style="color: grey;">22    </b>    <b style="background-color:yellow;color:black";>return hasPathSum(root-&gt;left, targetSum - root-&gt;val) ||
<b style="color: grey;">23    </b>           hasPathSum(root-&gt;right, targetSum - root-&gt;val);</b>
<b style="color: grey;">24    </b>  }
...
...
...
...
</pre>