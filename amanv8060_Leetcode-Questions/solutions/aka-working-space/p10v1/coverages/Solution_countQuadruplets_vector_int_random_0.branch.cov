<pre>...
...
...
...
<b style="color: grey;">6     </b>#include &lt;unordered_map&gt;
<b style="color: grey;">7     </b>#include &lt;algorithm&gt;
<b style="color: grey;">8     </b>#include &lt;bits/stdc++.h&gt;
<b style="color: grey;">9     </b>using namespace std;
<b style="color: grey;">10     </b>
<b style="color: grey;">11    </b>class Solution {
<b style="color: grey;">12    </b> public:
<b style="color: grey;">13    </b>  int countQuadruplets(vector&lt;int&gt;&amp; nums) {
<b style="color: grey;">14    </b>    <b style="background-color:yellow;color:black";>int res = 0;</b>
<b style="color: grey;">15    </b>    <b style="background-color:yellow;color:black";>int len = nums.size();</b>
<b style="color: grey;">16    </b>
<b style="color: grey;">17    </b>    <b style="background-color:yellow;color:black";>unordered_map&lt;int, int&gt; count;</b>
<b style="color: grey;">18    </b>    <b style="background-color:yellow;color:black";>count[nums[len - 1] - nums[len - 2]] = 1;</b>
<b style="color: grey;">19    </b>
<b style="color: grey;">20    </b>    for (<b style="background-color:yellow;color:black";>int b = len - 3;</b> b &gt;= 1; b--) {
<b style="color: grey;">21    </b>      for (int a = b - 1; a &gt;= 0; a--) {
<b style="color: grey;">22    </b>        res += count[nums[a] + nums[b]];
<b style="color: grey;">23    </b>      }
<b style="color: grey;">24    </b>
<b style="color: grey;">25    </b>      for (int x = len - 1; x &gt; b; x--) {
<b style="color: grey;">26    </b>        count[nums[x] - nums[b]]++;
<b style="color: grey;">27    </b>      }
<b style="color: grey;">28    </b>    }
<b style="color: grey;">29    </b>
<b style="color: grey;">30    </b>    <b style="background-color:yellow;color:black";>return res;</b>
...
...
...
...
</pre>