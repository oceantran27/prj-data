<pre>...
...
...
...
<b style="color: grey;">6     </b>#include &lt;unordered_map&gt;
<b style="color: grey;">7     </b>#include &lt;algorithm&gt;
<b style="color: grey;">8     </b>#include &lt;bits/stdc++.h&gt;
<b style="color: grey;">9     </b>using namespace std;
<b style="color: grey;">10     </b>
<b style="color: grey;">11    </b>class Solution {
<b style="color: grey;">12    </b> public:
<b style="color: grey;">13    </b>  int distributeCandies(vector&lt;int&gt;&amp; candyType) {
<b style="color: grey;">14    </b>    <b style="background-color:yellow;color:black";>int n = candyType.size();</b>
<b style="color: grey;">15    </b>    <b style="background-color:yellow;color:black";>map&lt;int, int&gt; m;</b>
<b style="color: grey;">16    </b>    for (<b style="background-color:yellow;color:black";>int i = 0;</b> <b style="background-color:yellow;color:black";>i &lt; n</b>; <b style="background-color:yellow;color:black";>i++</b>) {
<b style="color: grey;">17    </b>      <b style="background-color:yellow;color:black";>m.insert({candyType[i], 1});</b>
<b style="color: grey;">18    </b>    }
<b style="color: grey;">19    </b>    <b style="background-color:yellow;color:black";>int maplen = m.size();</b>
<b style="color: grey;">20    </b>    if (<b style="background-color:yellow;color:black";>maplen &gt;= n / 2</b>)
<b style="color: grey;">21    </b>      <b style="background-color:yellow;color:black";>return n / 2;</b>
<b style="color: grey;">22    </b>    else
<b style="color: grey;">23    </b>      return maplen;
<b style="color: grey;">24    </b>  }
...
...
...
...
</pre>