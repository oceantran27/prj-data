<pre>...
...
...
...
<b style="color: grey;">5     </b>#include &lt;set&gt;
<b style="color: grey;">6     </b>#include &lt;unordered_map&gt;
<b style="color: grey;">7     </b>#include &lt;algorithm&gt;
<b style="color: grey;">8     </b>#include &lt;bits/stdc++.h&gt;
<b style="color: grey;">9     </b>using namespace std;
<b style="color: grey;">10     </b>class Solution {
<b style="color: grey;">11    </b> public:
<b style="color: grey;">12    </b>  int removeDuplicates(vector&lt;int&gt;&amp; nums) {
<b style="color: grey;">13    </b>    <b style="background-color:yellow;color:black";>int n = nums.size();</b>
<b style="color: grey;">14    </b>    <b style="background-color:yellow;color:black";>int k = 0, i = 0;</b>
<b style="color: grey;">15    </b>    if (<b style="background-color:yellow;color:black";>n == 0</b>) return 0;
<b style="color: grey;">16    </b>    <b style="background-color:yellow;color:black";>nums[k] = nums[0];</b>
<b style="color: grey;">17    </b>    <b style="background-color:yellow;color:black";>k = k + 1;</b>
<b style="color: grey;">18    </b>    for (<b style="background-color:yellow;color:black";>i = 1;</b> <b style="background-color:yellow;color:black";>i &lt; n</b>; <b style="background-color:yellow;color:black";>i++</b>) {
<b style="color: grey;">19    </b>      if (<b style="background-color:yellow;color:black";>nums[i] != nums[i - 1]</b>) {
<b style="color: grey;">20    </b>        <b style="background-color:yellow;color:black";>nums[k] = nums[i];</b>
<b style="color: grey;">21    </b>        <b style="background-color:yellow;color:black";>k++;</b>
<b style="color: grey;">22    </b>      }
<b style="color: grey;">23    </b>    }
<b style="color: grey;">24    </b>    <b style="background-color:yellow;color:black";>return k;</b>
<b style="color: grey;">25    </b>  }
...
...
...
...
</pre>