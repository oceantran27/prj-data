<pre>...
...
...
...
<b style="color: grey;">6     </b>#include &lt;unordered_map&gt;
<b style="color: grey;">7     </b>#include &lt;algorithm&gt;
<b style="color: grey;">8     </b>#include &lt;bits/stdc++.h&gt;
<b style="color: grey;">9     </b>using namespace std;
<b style="color: grey;">10     </b>
<b style="color: grey;">11    </b>class Solution {
<b style="color: grey;">12    </b> public:
<b style="color: grey;">13    </b>  int smallestChair(vector&lt;vector&lt;int&gt;&gt; &amp;times, int targetFriend) {
<b style="color: grey;">14    </b>    <b style="background-color:yellow;color:black";>int time = times[targetFriend][0];</b>
<b style="color: grey;">15    </b>    vector&lt;int&gt; arrival(time + 1, -1);
<b style="color: grey;">16    </b>
<b style="color: grey;">17    </b>    for (int i = 0; i &lt; times.size(); i++) {
<b style="color: grey;">18    </b>      if (times[i][0] &lt;= time) arrival[times[i][0]] = i;
<b style="color: grey;">19    </b>    }
<b style="color: grey;">20    </b>    int chair = -1;
<b style="color: grey;">21    </b>    for (int i = 1; i &lt;= time; i++) {
...
...
...
...
</pre>