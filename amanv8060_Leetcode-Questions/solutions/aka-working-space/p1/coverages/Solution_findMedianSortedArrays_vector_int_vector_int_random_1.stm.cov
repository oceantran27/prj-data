<pre>...
...
...
...
<b style="color: grey;">6     </b>#include &lt;unordered_map&gt;
<b style="color: grey;">7     </b>#include &lt;algorithm&gt;
<b style="color: grey;">8     </b>#include &lt;bits/stdc++.h&gt;
<b style="color: grey;">9     </b>using namespace std;
<b style="color: grey;">10     </b>
<b style="color: grey;">11    </b>class Solution {
<b style="color: grey;">12    </b> public:
<b style="color: grey;">13    </b>  double findMedianSortedArrays(vector&lt;int&gt;&amp; nums1, vector&lt;int&gt;&amp; nums2) {
<b style="color: grey;">14    </b>    <b style="background-color:yellow;color:black";>int n = nums1.size() + nums2.size();</b>
<b style="color: grey;">15    </b>
<b style="color: grey;">16    </b>    <b style="background-color:yellow;color:black";>nums1.insert(nums1.end(), nums2.begin(), nums2.end());</b>
<b style="color: grey;">17    </b>
<b style="color: grey;">18    </b>    <b style="background-color:yellow;color:black";>sort(nums1.begin(), nums1.end());</b>
<b style="color: grey;">19    </b>
<b style="color: grey;">20    </b>    if (<b style="background-color:yellow;color:black";>n % 2 == 0</b>) {
<b style="color: grey;">21    </b>      return (nums1[n / 2 - 1] + nums1[n / 2]) / 2.0;
<b style="color: grey;">22    </b>    } else {
<b style="color: grey;">23    </b>      <b style="background-color:yellow;color:black";>return nums1[n / 2];</b>
<b style="color: grey;">24    </b>    }
<b style="color: grey;">25    </b>  }
...
...
...
...
</pre>