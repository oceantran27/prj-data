<pre>...
...
...
...
<b style="color: grey;">6     </b>#include &lt;unordered_map&gt;
<b style="color: grey;">7     </b>#include &lt;algorithm&gt;
<b style="color: grey;">8     </b>#include &lt;bits/stdc++.h&gt;
<b style="color: grey;">9     </b>using namespace std;
<b style="color: grey;">10     </b>
<b style="color: grey;">11    </b>class Solution {
<b style="color: grey;">12    </b> public:
<b style="color: grey;">13    </b>  long long wonderfulSubstrings(string s) {
<b style="color: grey;">14    </b>    <b style="background-color:yellow;color:black";>int n = s.size();</b>
<b style="color: grey;">15    </b>    <b style="background-color:yellow;color:black";>map&lt;long long, long long&gt; mp;</b>
<b style="color: grey;">16    </b>    <b style="background-color:yellow;color:black";>mp[0] = 1;</b>
<b style="color: grey;">17    </b>    <b style="background-color:yellow;color:black";>long long count = 0;</b>
<b style="color: grey;">18    </b>    <b style="background-color:yellow;color:black";>long long mask = 0;</b>
<b style="color: grey;">19    </b>    for (<b style="background-color:yellow;color:black";>int i = 0;</b> <b style="background-color:yellow;color:black";>i &lt; n</b>; <b style="background-color:yellow;color:black";>i++</b>) {
<b style="color: grey;">20    </b>      <b style="background-color:yellow;color:black";>mask = mask ^ (1 &lt;&lt; (s[i] - &#39;a&#39;));</b>
<b style="color: grey;">21    </b>      if (<b style="background-color:yellow;color:black";>mp.count(mask)</b>) {
<b style="color: grey;">22    </b>        count += mp[mask];
<b style="color: grey;">23    </b>      }
<b style="color: grey;">24    </b>      for (<b style="background-color:yellow;color:black";>char j = &#39;a&#39;;</b> <b style="background-color:yellow;color:black";>j &lt;= &#39;j&#39;</b>; <b style="background-color:yellow;color:black";>j++</b>) {
<b style="color: grey;">25    </b>        <b style="background-color:yellow;color:black";>long long x = mask ^ (1 &lt;&lt; (j - &#39;a&#39;));</b>
<b style="color: grey;">26    </b>        if (<b style="background-color:yellow;color:black";>mp.count(x)</b>) {
<b style="color: grey;">27    </b>          <b style="background-color:yellow;color:black";>count += mp[x];</b>
<b style="color: grey;">28    </b>        }
<b style="color: grey;">29    </b>      }
<b style="color: grey;">30    </b>      <b style="background-color:yellow;color:black";>mp[mask]++;</b>
<b style="color: grey;">31    </b>    }
<b style="color: grey;">32    </b>    <b style="background-color:yellow;color:black";>return count;</b>
<b style="color: grey;">33    </b>  }
...
...
...
...
</pre>