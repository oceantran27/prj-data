<pre>...
...
...
...
<b style="color: grey;">6     </b>#include &lt;unordered_map&gt;
<b style="color: grey;">7     </b>#include &lt;algorithm&gt;
<b style="color: grey;">8     </b>#include &lt;bits/stdc++.h&gt;
<b style="color: grey;">9     </b>using namespace std;
<b style="color: grey;">10     </b>
<b style="color: grey;">11    </b>class Solution {
<b style="color: grey;">12    </b> public:
<b style="color: grey;">13    </b>  string maxValue(string n, int x) {
<b style="color: grey;">14    </b>    if (<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>n[0] == &#39;-&#39;</b>) {
<b style="color: grey;">15    </b>      bool gg = false;
<b style="color: grey;">16    </b>      for (int i = 1; i &lt; n.size(); i++) {
<b style="color: grey;">17    </b>        if (n[i] &gt; x + &#39;0&#39;) {
<b style="color: grey;">18    </b>          n.insert(n.begin() + i, x + &#39;0&#39;);
<b style="color: grey;">19    </b>          gg = true;
<b style="color: grey;">20    </b>          break;
<b style="color: grey;">21    </b>        }
<b style="color: grey;">22    </b>      }
<b style="color: grey;">23    </b>      if (gg == false) {
<b style="color: grey;">24    </b>        n.push_back(x + &#39;0&#39;);
<b style="color: grey;">25    </b>      }
<b style="color: grey;">26    </b>    } else {
<b style="color: grey;">27    </b>      <b style="background-color:yellow;color:black";>bool gg = false;</b>
<b style="color: grey;">28    </b>      for (<b style="background-color:yellow;color:black";>int i = 0;</b> <b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>i &lt; n.size()</b>; <b style="background-color:yellow;color:black";>i++</b>) {
<b style="color: grey;">29    </b>        if (<b style="background-color:#FF4136;color:white";>&nbsp;F&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>n[i] &lt; x + &#39;0&#39;</b>) {
<b style="color: grey;">30    </b>          n.insert(n.begin() + i, x + &#39;0&#39;);
<b style="color: grey;">31    </b>          gg = true;
<b style="color: grey;">32    </b>          break;
<b style="color: grey;">33    </b>        }
<b style="color: grey;">34    </b>      }
<b style="color: grey;">35    </b>      if (<b style="background-color:#3D9970;color:white";>&nbsp;T&nbsp;</b>&nbsp;<b style="background-color:yellow;color:black";>gg == false</b>) {
<b style="color: grey;">36    </b>        <b style="background-color:yellow;color:black";>n.push_back(x + &#39;0&#39;);</b>
<b style="color: grey;">37    </b>      }
<b style="color: grey;">38    </b>    }
<b style="color: grey;">39    </b>    <b style="background-color:yellow;color:black";>return n;</b>
...
...
...
...
</pre>