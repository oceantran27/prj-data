[Leetcode-树]

[-遍历二叉树1]
100 101 104(key=一行代码) 110(key=深度结合递归好题) 
112(key=分情况)
226(key=交换左右) 
530(key=中序遍历递增) 543(key=深度与直径)
563(key=算总值) 572(key=每一步检查) 606 
637(key=队列实现) 
653(key=Hash) 671(key=记录次小值)

[-二叉搜索树中序遍历]
235(key=搜索有序树) 501(key=中序遍历递增) 98(key=中序遍历) 230 538
1008(key=前序遍历)
99(key=二叉搜索树)
1305

[-层次遍历]
111(key=层次遍历) 103 107 116 429 513 515 545 623 662 
958(key=完全二叉树)
919(key=完全二叉树)
1104(key=z字形树)
1161
1302(key=最深叶子节点和)
1609(key=奇偶树)

[-生成二叉树]
617 95(key=暴力遍历) 108(key=二分) 
105(key=前序中序构造经典题) 
106(key=中序后序构造经典题)
889(key=前序后序构造经典题)
450(key=二叉搜索树删除元素)
654(key=最大二叉树)
669(value=4)
701(key=二叉搜索树插入 value=4)
894(key=构造完整二叉树)
998(key=最大二叉树)
1130
1261

[-记录路径]
113 437(key=前缀和) 114 988(key=叶子到根) 1123
1315(key=祖父节点)
1367(key=部分路径)
1372(key=左右交替)
1457(key=判断路径伪回文)

[-叶子节点]
129

[-遍历二叉树2]
94 102(key=经典题队列实现)
236(key=经典解法)
508 510 951(key=翻转二叉树等价)
971(key=前序遍历与翻转)
1026(key=父子节点)
1038(key=算总值)
1379(key=克隆节点)
1448
1600

[-非递归实现]
144 145

[-树形dp]
337 834

[-二叉树序列化]
449 536 652 655(key=二维数组)
297
1028(key=先序遍历)

[-所有路径]
687(key=一样数字的路径) 863(key=距离与差值) 
979(key=分硬币)
742(key=最近的叶子节点)
124(key=路径和)
1443(key=寻找目标点)
1530(key=路径长度)
1145(key=邻近节点)
968(key=安装摄像头)
987(key=垂直遍历)

[-图与树]
684(key=删掉图的一条边)
685 1466(key=翻转指向)
1719(key=重构树)
1766(key=互质树)

[-剪枝]
814 865(key=最大深度的子树)
1110(key=剪掉节点)
1325(key=删除叶子节点)
1339(key=分割求值)
